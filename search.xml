<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hadoop源码学习——Hadoop-Common-Project]]></title>
      <url>http://keyunluo.github.io/2016/08/01/2016-08-01-hadoop-common-project.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>Hadoop-Common-Project模块包括了一系列支撑其他Hadoop模块的公共工具，本系列文章从源代码的角度分析其实现。本文主要从总体上了解Hadoop-Common-Project模块。</p>
</blockquote>
<a id="more"></a>
<h2 id="Hadoop主要模块"><a href="#Hadoop主要模块" class="headerlink" title="Hadoop主要模块"></a>Hadoop主要模块</h2><ul>
<li><p>hadoop                       (主要的Hadoop模块)</p>
<ul>
<li>hadoop-project           (所有Hadoop Maven 模块的Parent POM，由以下部分组成：        )<ul>
<li>hadoop-project-dist      (Parent POM for modules that generate distributions.)</li>
<li>hadoop-annotations       (Generates the Hadoop doclet used to generated the Javadocs)</li>
<li>hadoop-assemblies        (Maven assemblies used by the different modules)</li>
<li>hadoop-common-project    (Hadoop Common)</li>
<li>hadoop-hdfs-project      (Hadoop HDFS)</li>
<li>hadoop-mapreduce-project (Hadoop MapReduce)</li>
<li>hadoop-tools             (Hadoop tools like Streaming, Distcp, etc.)</li>
<li>hadoop-dist              (Hadoop distribution assembler)</li>
</ul>
</li>
</ul>
</li>
<li><p>hadoop-2.6.4-src结构</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── BUILDING.txt</span><br><span class="line">├── dev-support</span><br><span class="line">├── hadoop-assemblies</span><br><span class="line">├── hadoop-client</span><br><span class="line">├── hadoop-common-project</span><br><span class="line">├── hadoop-dist</span><br><span class="line">├── hadoop-hdfs-project</span><br><span class="line">├── hadoop-main.iml</span><br><span class="line">├── hadoop-mapreduce-project</span><br><span class="line">├── hadoop-maven-plugins</span><br><span class="line">├── hadoop-minicluster</span><br><span class="line">├── hadoop-project</span><br><span class="line">├── hadoop-project-dist</span><br><span class="line">├── hadoop-tools</span><br><span class="line">├── hadoop-yarn-project</span><br><span class="line">├── LICENSE.txt</span><br><span class="line">├── NOTICE.txt</span><br><span class="line">├── pom.xml</span><br><span class="line">└── README.txt</span><br></pre></td></tr></table></figure>
<h2 id="Hadoop-Common-Project"><a href="#Hadoop-Common-Project" class="headerlink" title="Hadoop-Common-Project"></a>Hadoop-Common-Project</h2><ul>
<li>结构</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">├── dev-support：补丁等开发支持</span><br><span class="line">├── hadoop-annotations：Hadoop注解</span><br><span class="line">├── hadoop-auth：Hadoop授权</span><br><span class="line">├── hadoop-auth-examples：Hadoop授权例子</span><br><span class="line">├── hadoop-common：Hadoop Common模块</span><br><span class="line">├── hadoop-common-project.iml</span><br><span class="line">├── hadoop-kms：基于KeyProvider API的密钥管理服务器</span><br><span class="line">├── hadoop-minikdc：基于Apache Directory服务器迷你型密钥分发中心(KDC)，能够被嵌入到测试用例或作为一个独立的KDC从命令行使用</span><br><span class="line">├── hadoop-nfs：Hadoop NFS模块</span><br><span class="line">├── pom.xml</span><br><span class="line">└── target</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Java中的注解(1)]]></title>
      <url>http://keyunluo.github.io/2016/08/01/2016-08-01-java-annotation-1.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>从JDK1.5开始，Java增加了对元数据(MetaData)的支持，也就是Annotation。Annotation是代码里的特殊标记，这些标记可以在编译，类加载，运行时被读取，并进行相应的处理。通过使用注解，程序开发人员可以在不改变原有逻辑的情况下，在源文件中嵌入一些补充信息。</p>
</blockquote>
<a id="more"></a>
<h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><p>Annotation提供了一种为程序元素设置元数据的方法，从某些方面来看，Annotation就像修饰符一样，可用于修饰包，类，构造器，方法，成员变量，参数，局部变量的声明，这些信息被存储在Annotation的”name=value”中。Annotation不影响程序代码的执行，无论增加或删除Annotation，代码都将始终如一的执行。若希望让程序中的Annotation在运行时起一定的作用，只有通过某种配套的工具对Annotation中的信息进行访问和处理，这种工具统称为APT(Annotation Processing Tool)。</p>
<p>Java中有5个基本Annotation，它们都定义在<code>java.lang</code>包下。使用Annotation时需要在其前面增加@符号，并把该Annotation当做一个修饰符使用。</p>
<ul>
<li>@Override</li>
<li>@Deprecated</li>
<li>@SupressWarnings</li>
<li>@SafeVarargs (Since Java7)</li>
<li>@FunctionalInterface (Since Java8)</li>
</ul>
<h2 id="限定重写父类方法：-Override"><a href="#限定重写父类方法：-Override" class="headerlink" title="限定重写父类方法：@Override"></a>限定重写父类方法：@Override</h2><p>@Override用来指定方法重载的，它可以强制一个子类必须覆盖父类的方法。@Override的作用是告诉编译器来检查这个方法，保证父类中的某个方法必须被重写，这样可以在编译阶段发现错误。</p>
<p>例子：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">pulic <span class="class"><span class="keyword">class</span> <span class="title">Fruit</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"水果的info方法..."</span>)；</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span> <span class="keyword">extends</span> <span class="title">Fruit</span></span>&#123;</span><br><span class="line">    <span class="comment">//使用@Override指定下面方法必须重写父类方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"苹果重写水果的Info方法..."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="标记已过时：-Deprecated"><a href="#标记已过时：-Deprecated" class="headerlink" title="标记已过时：@Deprecated"></a>标记已过时：@Deprecated</h2><p>@Deprecated用来表示某个程序元素(类，方法等)已过时，当其他程序使用已过时的类，方法时，编译器将给出警告。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pulic <span class="class"><span class="keyword">class</span> <span class="title">Apple</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义info方法已过时</span></span><br><span class="line"><span class="meta">@Deprecated</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"苹果的info方法..."</span>)；</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppleTest</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="comment">//编译器将给出警告</span></span><br><span class="line">    <span class="keyword">new</span> Apple().info();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>@Deprecated的作用与文档注释中的@deprecated标记的作用基本相同，但它们的用法不同，前者是Java5才支持的注解，无需放到文档的注释部分，而是直接放到要修饰的方法，类，接口等。</p>
<h2 id="抑制编译器警告：-SuppressWarnings"><a href="#抑制编译器警告：-SuppressWarnings" class="headerlink" title="抑制编译器警告：@SuppressWarnings"></a>抑制编译器警告：@SuppressWarnings</h2><p>@SuppressWarnings指示被该Annotation修饰的程序元素(以及该程序元素中的所有子元素)取消显示指定的编译器警告。在通常情况下，如果程序中没有限定泛型限制的集合将会引起编译器警告，为了避免这种编译器警告，可以使用@SuppressWarning修饰。例如，下面的程序取消了没有使用泛型的编译器警告：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关闭整个类中的编译器警告</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(value=<span class="string">"unchecked"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuppressWarningTest</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    List&lt;String&gt; mylist = <span class="keyword">new</span> ArrayList();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Java7中的”堆污染“警告与-SafeVarargs"><a href="#Java7中的”堆污染“警告与-SafeVarargs" class="headerlink" title="Java7中的”堆污染“警告与@SafeVarargs"></a>Java7中的”堆污染“警告与@SafeVarargs</h2><p>在泛型擦除时，如下代码可能导致运行时异常：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List list = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">list.add(<span class="number">20</span>);  <span class="comment">//添加元素时引发unchecked异常</span></span><br><span class="line"><span class="comment">// 下面的代码引起”未经检查的转换“的警告，编译，运行完全正常</span></span><br><span class="line">List&lt;String&gt; ls = list;</span><br><span class="line"><span class="comment">// 但只要访问ls里的元素，如下面的代码就会引起运行时的异常</span></span><br><span class="line">System.out.println(ls.get(<span class="number">0</span>));</span><br></pre></td></tr></table></figure>
<p>Java把引发这种错误的原因称为”堆污染”(heap pollution),当把一个不带泛型的对象赋值给一个带泛型的变量时，往往就会发生这种堆污染现象。</p>
<p>对于形参个数可变的方法，该形参的类型又是泛型，将更容易导致”堆污染“，例如如下的工具类：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ErrorUtils</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">faultyMethod</span><span class="params">(List&lt;String&gt;... listStrArray)</span></span>&#123;</span><br><span class="line">    <span class="comment">//Java语言不允许创建泛型数组，因此listArray只能被当成List[]处理</span></span><br><span class="line">    <span class="comment">//此时相当于把List&lt;String&gt;赋给了List，已经发生了”堆污染“</span></span><br><span class="line"></span><br><span class="line">    List[] listArray = listStrArray;</span><br><span class="line">    List&lt;Integer&gt; myList = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">    myList.add(<span class="keyword">new</span> Random().next(<span class="number">100</span>));</span><br><span class="line">    <span class="comment">//把listArray的第一个元素赋为myArray</span></span><br><span class="line">    listArray[<span class="number">0</span>] = myList;</span><br><span class="line">    String s = listArray[<span class="number">0</span>].get[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在Java6以及更早的版本中，Java编译器认为faultyMethod()方法没有任何问题，等到使用该方法时：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ErrorUtilsTest</span></span>&#123;</span><br><span class="line">    <span class="function">publc <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    ErrorUtils.faultyMethod(Arrays.asList(<span class="string">"Hello"</span>),Arrays)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>会引发一个unchecked警告，在运行时会引发ClassCastException异常。</p>
<p>从Java7开始，Java编译器进行更加严格的检查，在编译ErrorUtils时就会发出一个如下的警告：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ErrorUtils.java:<span class="number">15</span>:警告[unchecked] 参数化 varargs类型List&lt;String&gt;的堆可能已经受到污染</span><br></pre></td></tr></table></figure>
<p>但有些时候，开发者不希望看到这个警告，则可以使用如下三种方式来抑制这个警告：</p>
<ul>
<li>使用@SafeVarargs修饰引发该警告的方法或构造器。</li>
<li>使用@SuppressWarnings(“unchecked”)修饰。</li>
<li>编译时使用-Xlint:varargs选项。</li>
</ul>
<p>通常使用@SafeVarargs修饰，编译上述两个程序时都不会发出任何警告。</p>
<h2 id="Java8的函数式接口与-FunctionalInterface"><a href="#Java8的函数式接口与-FunctionalInterface" class="headerlink" title="Java8的函数式接口与@FunctionalInterface"></a>Java8的函数式接口与@FunctionalInterface</h2><p>Java8规定：如果接口中只有一个抽象方法（可以包含多个默认方法或多个static方法），该接口就是函数式接口。@FunctionalInterface就是用来指定某个接口必须是函数式接口。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">FunctionalInterface</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">foo</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"foo类方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">bar</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"bar默认方法"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>;  <span class="comment">//只定义一个抽象方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>@FunctionalInterface告诉编译器检查这个接口，保证该接口只能包含一个抽象方法，否则就编译出错。如果再增加一个抽象方法abc()，则会编译出错：意外的@FunctionalInterface注释。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[搭建Cloudera集群]]></title>
      <url>http://keyunluo.github.io/2016/07/28/2016-07-28-cloudera-cluster.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>使用Cloudera Manager 5 利用镜像搭建Hadoop/Spark集群。</p>
</blockquote>
<a id="more"></a>
<h2 id="SSH-JDK"><a href="#SSH-JDK" class="headerlink" title="SSH,JDK"></a>SSH,JDK</h2><ul>
<li><p>配置ssh,使slave01能免密钥访问<code>slave02~slave10</code>,即将<code>slave01~slave10</code>的公钥<code>id_rsa.pub</code>添加到slave01的<code>~/.ssh/authorized_keys</code>中。</p>
</li>
<li><p><code>pip</code>设置代理</p>
</li>
</ul>
<p>编辑<code>~/.pip/pip.conf</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line">index-url = http://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">proxy  = http://server:<span class="number">8899</span></span><br><span class="line"></span><br><span class="line">[install]</span><br><span class="line">trusted-host=pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure>
<p>在root用户下拷贝pip设置：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.pip</span><br><span class="line">cp /home/hadoop/.pip/pip.conf ~/.pip/</span><br></pre></td></tr></table></figure>
<ul>
<li>slave01安装pssh，pscp</li>
</ul>
<p>root用户下安装pssh： <code>pip install -U pssh</code></p>
<p>安装pscp:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy=<span class="string">"http://server:8899/"</span></span><br><span class="line">export https_proxy=<span class="string">"http://server:8899/"</span></span><br><span class="line">git clone https://github.com/pssh/parallel-ssh</span><br><span class="line">cd parallel-ssh</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure>
<ul>
<li>新建slaves文件</li>
</ul>
<p>新建一个<code>slaves</code>文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">slave02</span><br><span class="line">slave03</span><br><span class="line">slave04</span><br><span class="line">slave05</span><br><span class="line">slave06</span><br><span class="line">slave07</span><br><span class="line">slave08</span><br><span class="line">slave09</span><br><span class="line">slave10</span><br></pre></td></tr></table></figure>
<ul>
<li>批量拷贝安装pscp</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pscp -h /home/hadoop/slaves -r parallel-ssh /home/hadoop/</span><br><span class="line">sudo pssh -h ~/slaves <span class="string">"cd /home/hadoop/parallel-ssh &amp;&amp; python setup.py install"</span></span><br></pre></td></tr></table></figure>
<ul>
<li>批量安装JDK,并设置环境变量</li>
</ul>
<p>下载Oracle-JDK：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.oracle.com/otn-pub/java/jdk/8u102-b14/jdk-8u102-linux-x64.rpm?AuthParam=1469704553_712c2889a98a77ece53c26087d3ae902</span><br><span class="line">scp jdk-8u102-linux-x64.rpm\?AuthParam\=1469704553_712c2889a98a77ece53c26087d3ae902 hadoop@slave01:~/cloudera/jdk-8u102-linux-x64.rpm</span><br></pre></td></tr></table></figure>
<p>安装JDK</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh jdk<span class="number">-8</span>u102-linux-x64.rpm</span><br><span class="line">pscp -h /home/hadoop/slaves jdk<span class="number">-8</span>u102-linux-x64.rpm /home/hadoop/jdk<span class="number">-8</span>u102-linux-x64.rpm</span><br><span class="line">pssh -h /home/hadoop/slaves <span class="string">"rpm -ivh /home/hadoop/jdk-8u102-linux-x64.rpm &amp;&amp; rm -f /home/hadoop/jdk-8u102-linux-x64.rpm"</span></span><br></pre></td></tr></table></figure>
<p>安装Scala:</p>
<p>root下：
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http://downloads.lightbend.com.sixxs.org/scala/<span class="number">2.11</span><span class="number">.8</span>/scala<span class="number">-2.11</span><span class="number">.8</span>.rpm</span><br><span class="line">rpm -ivh scala<span class="number">-2.11</span><span class="number">.8</span>.rpm</span><br><span class="line">pscp -h /home/hadoop/slaves scala<span class="number">-2.11</span><span class="number">.8</span>.rpm /home/hadoop/</span><br><span class="line">pssh -h /home/hadoop/slaves <span class="string">"rpm -ivh /home/hadoop/scala-2.11.8.rpm"</span></span><br><span class="line">pssh -h /home/hadoop/slaves <span class="string">"rm -f /home/hadoop/scala-2.11.8.rpm"</span></span><br></pre></td></tr></table></figure></p>
<p>设置环境变量</p>
<p><code>sudo vim /etc/profile.d/cloudera.sh</code>:
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/default</span><br><span class="line">export SCALA_HOME=/usr/share/scala</span><br><span class="line">export M2_HOME=/usr/local/maven</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$SCALA_HOME/lib</span><br><span class="line">export PATH=$JAVA_HOME/bin:$SCALA_HOME/bin:$M2_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></p>
<p>复制到其他节点</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pscp -h /home/hadoop/slaves /etc/profile.d/cloudera.sh /etc/profile.d/cloudera.sh</span><br><span class="line">pssh -h /home/hadoop/slaves <span class="string">"source /etc/profile"</span></span><br></pre></td></tr></table></figure>
<h2 id="安装Cloudera"><a href="#安装Cloudera" class="headerlink" title="安装Cloudera"></a>安装Cloudera</h2><ul>
<li>配置Cloudera源</li>
</ul>
<p><code>vim /etc/yum.repos.d/Cloudera.repo</code>：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[cloudera-manager]</span><br><span class="line"><span class="comment"># Packages for Cloudera Manager, Version 5, on RedHat or CentOS 7 x86_64</span></span><br><span class="line">name=Cloudera Manager</span><br><span class="line">baseurl=http://<span class="number">192.168</span><span class="number">.80</span><span class="number">.80</span>/cm5/redhat/<span class="number">7</span>/x86_64/cm/<span class="number">5</span>/</span><br><span class="line">gpgkey =http://<span class="number">192.168</span><span class="number">.80</span><span class="number">.80</span>/cm5/redhat/<span class="number">7</span>/x86_64/cm/RPM-GPG-KEY-cloudera</span><br><span class="line">gpgcheck = <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>复制到集群的其他节点上：<code>pscp -h /home/hadoop/slaves /etc/yum.repos.d/Cloudera.repo /etc/yum.repos.d/</code>,更新缓存：<code>pssh -h /home/hadoop/slaves &quot;yum clean all;yum makecache&quot;</code>.</p>
<p>导入key:<code>rpm --import http://archive.cloudera.com/cm5/redhat/7/x86_64/cm/RPM-GPG-KEY-cloudera</code></p>
<p>在一个合适的目录下执行：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://<span class="number">192.168</span><span class="number">.80</span><span class="number">.80</span>/cm5/installer/latest/cloudera-manager-installer.bin</span><br><span class="line">sudo chmod +x cloudera-manager-installer.bin</span><br><span class="line">sudo ./cloudera-manager-installer.bin</span><br></pre></td></tr></table></figure>
<p><strong>保证sudo无密码访问</strong>：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod u+w /etc/sudoers</span></span><br><span class="line">grid ALL=(root)NOPASSWD:ALL</span><br><span class="line">cloudera-scm  ALL=(ALL)  ALL</span><br><span class="line"><span class="comment"># chmod u-w /etc/sudoers</span></span><br></pre></td></tr></table></figure>
<p>一路点确定后就安装好了，点击<code>http://slave01:7180/cmf/login</code>就可以登录，默认用户名和密码都是<code>admin</code>.</p>
<p>选择Express版本：
<img src="/resource/blog/2016-07/Cloudera.png" alt="版本">
选择机器：
<img src="/resource/blog/2016-07/Cloudera-Host.png" alt="机器">
选择Parcel：
<img src="/resource/blog/2016-07/Cloudera-Parcel.png" alt="Parcel">
选择集群CDH：
<img src="/resource/blog/2016-07/Cloudera-Cluster.png" alt="CDH">
不选择单用户模式：
安装界面：
<img src="/resource/blog/2016-07/Cloudera-Install.png" alt="Install">
检查，提示警告：<code>echo never &gt; /sys/kernel/mm/transparent_hugepage/defrag</code>
安装所有服务：
<img src="/resource/blog/2016-07/Cloudera-Service.png" alt="服务">
集群分配：
<img src="/resource/blog/2016-07/Cloudera-Configure.png" alt="Configure">
接下来是数据库配置，<strong>自己手动记录用户名和密码</strong>。
接着是集群安装，最后安装成功如下：
<img src="/resource/blog/2016-07/Cloudera-Final.png" alt="安装成功"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[搭建Cloudera离线parcel源]]></title>
      <url>http://keyunluo.github.io/2016/07/28/2016-07-28-cloudera-repo.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>Cloudera外网访问速度比较慢，并且服务器集群内部访问外网比较麻烦，因此在外网服务器中搭建Cloudera源，供安装使用。</p>
</blockquote>
<a id="more"></a>
<h2 id="配置网卡静态地址"><a href="#配置网卡静态地址" class="headerlink" title="配置网卡静态地址"></a>配置网卡静态地址</h2><p>外网服务器有五块网卡，eth0连接外网，eth2连接内网，这里配置eth1,对外界访问隔离：设置地址为<code>192.168.80.80</code>,编辑<code>/etc/network/interfaces</code>:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">iface eth1 inet static</span><br><span class="line">address <span class="number">192.168</span><span class="number">.80</span><span class="number">.80</span></span><br><span class="line">netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">gateway <span class="number">192.168</span><span class="number">.80</span><span class="number">.2</span></span><br></pre></td></tr></table></figure>
<h2 id="集群配置网络"><a href="#集群配置网络" class="headerlink" title="集群配置网络"></a>集群配置网络</h2><ul>
<li>关闭SELINUX</li>
</ul>
<p>编辑 <code>sudo vim /etc/selinux/config</code>，修改为 <code>SELINUX=disabled</code>,然后重启。</p>
<ul>
<li>修改host</li>
</ul>
<p>编辑 <code>/etc/hosts</code>,添加一行<code>192.168.80.80   archive.cloudera.com</code></p>
<h2 id="配置Cloudera镜像"><a href="#配置Cloudera镜像" class="headerlink" title="配置Cloudera镜像"></a>配置Cloudera镜像</h2><p>参考(cloudera_mirror)[<a href="https://github.com/sskaje/cloudera_mirror],搭建Cloudera镜像。" target="_blank" rel="external">https://github.com/sskaje/cloudera_mirror],搭建Cloudera镜像。</a></p>
<ul>
<li>建立目录</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/data/repo/cloudera_mirror</span><br></pre></td></tr></table></figure>
<ul>
<li>安装PHP</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install php5 php5-gd php5-cli</span><br></pre></td></tr></table></figure>
<ul>
<li>新建<code>fixlink.php</code>，固定链接</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$domain = <span class="string">'archive.cloudera.com.sixxs.org'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($argv[<span class="number">1</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&#123;$argv[0]&#125; cm4|cm5 \n"</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($argv[<span class="number">1</span>] == <span class="string">'cm4'</span>) &#123;</span><br><span class="line">    $path = <span class="string">'/cm4/redhat/7/x86_64/cm/'</span>;</span><br><span class="line">    $compare_with = <span class="string">'4'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ($argv[<span class="number">1</span>] == <span class="string">'cm5'</span>) &#123;</span><br><span class="line">    $path = <span class="string">'/cm5/redhat/7/x86_64/cm/'</span>;</span><br><span class="line">    $compare_with = <span class="string">'5'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$web_contents = file_get_contents(<span class="string">'http://'</span> . $domain . $path);</span><br><span class="line">preg_match_all(<span class="string">'#&lt;a href="([\d\.a-z\-]+)/"&gt;([\d\.a-z\-]+)/&lt;/a&gt;#'</span>, $web_contents, $m);</span><br><span class="line"></span><br><span class="line">@chdir(<span class="keyword">__DIR__</span> . <span class="string">'/'</span> . $domain . $path);</span><br><span class="line"><span class="keyword">foreach</span> ($m[<span class="number">2</span>] <span class="keyword">as</span> $k=&gt;$v) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($v === $compare_with || strpos($v, $compare_with) === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $name = $v;</span><br><span class="line">    @unlink($name);</span><br><span class="line">    symlink($compare_with, $name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>新建<code>clear_outdated.php</code>,获得更新</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($argv[<span class="number">1</span>]) || (!preg_match(<span class="string">'#^http://archive.cloudera.com.sixxs.org/.+/parcels/latest/$#'</span>, $argv[<span class="number">1</span>]) &amp;&amp; !preg_match(<span class="string">'#^http://archive.cloudera.com.sixxs.org/cm#'</span>, $argv[<span class="number">1</span>]))) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&lt;&lt;&lt;USAGE</span><br><span class="line"><span class="subst">&#123;$argv[0]&#125;</span> URL</span><br><span class="line">        URL should be like:</span><br><span class="line">                http://archive.cloudera.com.sixxs.org/PRODUCT/parcels/latest/</span><br><span class="line">                http://archive.cloudera.com/cm4/redhat/7/x86_64/cm/4/</span><br><span class="line">                http://archive.cloudera.com/cm5/redhat/7/x86_64/cm/5/</span><br><span class="line"></span><br><span class="line">USAGE;</span></span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$path = <span class="keyword">__DIR__</span> . <span class="string">'/'</span> . substr($argv[<span class="number">1</span>], strlen(<span class="string">'http://'</span>));</span><br><span class="line"><span class="keyword">if</span> (strpos($argv[<span class="number">1</span>], <span class="string">'parcels'</span>)) &#123;</span><br><span class="line">        $jsonfile = $path . <span class="string">'manifest.json'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!is_file($jsonfile)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'manifest.json not found'</span>;</span><br><span class="line">                <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $json = json_decode(file_get_contents($jsonfile), <span class="keyword">true</span>);</span><br><span class="line">        $parcels = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span> ($json[<span class="string">'parcels'</span>] <span class="keyword">as</span> $p) &#123;</span><br><span class="line">                $parcels[] = $p[<span class="string">'parcelName'</span>];</span><br><span class="line">                $parcels[] = $p[<span class="string">'parcelName'</span>].<span class="string">'.sha1'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        chdir($path);</span><br><span class="line">        $files = glob(<span class="string">'*'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($files <span class="keyword">as</span> $f) &#123;</span><br><span class="line">                <span class="keyword">if</span> ($f == <span class="string">'manifest.json'</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span> (!in_array($f, $parcels)) &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">"Deleting outdated file &#123;$f&#125;...\n"</span>;</span><br><span class="line">                        unlink($f);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        chdir($path);</span><br><span class="line">        $files = glob(<span class="string">'*'</span>);</span><br><span class="line"></span><br><span class="line">        $tree = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span> ($files <span class="keyword">as</span> $f) &#123;</span><br><span class="line">                preg_match(<span class="string">'#\d#'</span>, $f, $m, PREG_OFFSET_CAPTURE);</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">isset</span>($m[<span class="number">0</span>][<span class="number">1</span>]) &amp;&amp; $m[<span class="number">0</span>][<span class="number">1</span>]) &#123;</span><br><span class="line">                        $tree[substr($f, <span class="number">0</span>, $m[<span class="number">0</span>][<span class="number">1</span>])][] = $f;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($tree <span class="keyword">as</span> $f) &#123;</span><br><span class="line">                $keep = max($f);</span><br><span class="line">                <span class="keyword">foreach</span> ($f <span class="keyword">as</span> $_f) &#123;</span><br><span class="line">                        <span class="keyword">if</span> ($_f != $keep) &#123;</span><br><span class="line">                                <span class="keyword">echo</span> <span class="string">"Removing file "</span>, $_f, <span class="string">"\n"</span>;</span><br><span class="line">                                unlink($_f);</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>批量下载，新建<code>wget.sh</code>,使用<code>sixxs.org</code>加速</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">WGET=&quot;/usr/bin/wget -mc -e robots=off&quot;</span><br><span class="line">PHP=/usr/bin/php</span><br><span class="line">FIND=/usr/bin/find</span><br><span class="line">CURRENT_DIR=`dirname &quot;$0&quot;`</span><br><span class="line"></span><br><span class="line">PARCELS=(</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/cdh5/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/cdh5/parcels/5/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/gplextras5/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/cm5/installer/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/sqoop-connectors/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/beta/impala-kudu/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/beta/kudu/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/cdh4/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/search/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/impala/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/sentry/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/gplextras/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/spark/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/accumulo/parcels/latest/&quot;</span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/cm4/installer/latest/&quot;</span><br><span class="line"></span><br><span class="line">    &quot;http://archive.cloudera.com.sixxs.org/accumulo-c5/parcels/latest/&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">function download_parcel()</span><br><span class="line">&#123;</span><br><span class="line">    $WGET  $1 --accept-regex=&apos;.*el7.*&apos;</span><br><span class="line">    $WGET  $1/manifest.json</span><br><span class="line">    $PHP clear_outdated.php $1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cd $CURRENT_DIR</span><br><span class="line"></span><br><span class="line">$WGET  http://archive.cloudera.com.sixxs.org/cm4/redhat/7/x86_64/cm/4/ --accept-regex=&apos;\/4\/&apos; #--reject-regex=&apos;index\.html&apos;</span><br><span class="line">$WGET  http://archive.cloudera.com.sixxs.org/cm4/installer/latest/cloudera-manager-installer.bin</span><br><span class="line">$WGET  http://archive.cloudera.com.sixxs.org/cm4/redhat/7/x86_64/cm/RPM-GPG-KEY-cloudera</span><br><span class="line">$WGET  http://archive.cloudera.com.sixxs.org/cm4/redhat/7/x86_64/cm/cloudera-manager.repo</span><br><span class="line">$PHP clear_outdated.php http://archive.cloudera.com.sixxs.org/cm4/redhat/7/x86_64/cm/4/RPMS/x86_64/</span><br><span class="line"></span><br><span class="line">$WGET  http://archive.cloudera.com.sixxs.org/cm5/redhat/7/x86_64/cm/5/ --accept-regex=&apos;\/5\/&apos; #--reject-regex=&apos;index\.html&apos;</span><br><span class="line">$WGET  http://archive.cloudera.com.sixxs.org/cm5/installer/latest/cloudera-manager-installer.bin</span><br><span class="line">$WGET  http://archive.cloudera.com.sixxs.org/cm5/redhat/7/x86_64/cm/RPM-GPG-KEY-cloudera</span><br><span class="line">$WGET  http://archive.cloudera.com.sixxs.org/cm5/redhat/7/x86_64/cm/cloudera-manager.repo</span><br><span class="line">$PHP clear_outdated.php http://archive.cloudera.com.sixxs.org/cm5/redhat/7/x86_64/cm/5/RPMS/x86_64/</span><br><span class="line"></span><br><span class="line">$WGET http://archive.cloudera.com.sixxs.org/cdh5/cdh/5/</span><br><span class="line"></span><br><span class="line"># fix cm yum repo link</span><br><span class="line">$PHP fixlink.php cm4</span><br><span class="line">$PHP fixlink.php cm5</span><br><span class="line"></span><br><span class="line"># Download All parcels</span><br><span class="line">for i in $&#123;PARCELS[@]&#125;; do</span><br><span class="line">    download_parcel $i;</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x wget.sh</span><br><span class="line">./wget.sh</span><br></pre></td></tr></table></figure>
<h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置<code>nginx</code></h2><p>编辑<code>/etc/nginx/sites-available/cloudera.conf</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen        <span class="number">192.168</span><span class="number">.80</span><span class="number">.80</span>:<span class="number">80</span>;</span><br><span class="line">        server_name   archive.cloudera.com.dislab;</span><br><span class="line">        access_log    logs/archive.cloudera.log;</span><br><span class="line">        root   /data/repo/cloudera_mirror/archive.cloudera.com.sixxs.org/ ;</span><br><span class="line">    autoindex on;</span><br><span class="line">        autoindex_exact_size    off;</span><br><span class="line">        autoindex_localtime     on;</span><br></pre></td></tr></table></figure>
<p>软链到<code>sites-enabled</code>:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /etc/nginx/sites-available/cloudera.conf /etc/nginx/sites-enabled/</span><br><span class="line">sudo service nginx reload</span><br></pre></td></tr></table></figure>
<p>这样，镜像就搭好了。</p>
<p><img src="/resource/blog/2016-07/Cloudera-Parcel-Repo.png" alt="镜像"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[RedHat7.0更换CentOS源]]></title>
      <url>http://keyunluo.github.io/2016/07/27/2016-07-27-redhat-centos.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>服务器默认安装的是RedHat Linux，Redhat 的更新包只对注册的用户生效，所以我们自己手动更改成CentOS 的更新包，CentOS几乎和redhat是一样的，所以无需担心软件包是否可安装，安装之后是否有问题，本文记录配置过程。</p>
</blockquote>
<a id="more"></a>
<h2 id="查看系统本身所安装的yum-软件包"><a href="#查看系统本身所安装的yum-软件包" class="headerlink" title="查看系统本身所安装的yum 软件包"></a>查看系统本身所安装的yum 软件包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@slave10 hadoop]<span class="comment"># rpm -qa | grep yum</span></span><br><span class="line">yum-langpacks<span class="number">-0.4</span><span class="number">.2</span><span class="number">-3.</span>el7.noarch</span><br><span class="line">yum-metadata-parser<span class="number">-1.1</span><span class="number">.4</span><span class="number">-10.</span>el7.x86_64</span><br><span class="line">yum<span class="number">-3.4</span><span class="number">.3</span><span class="number">-118.</span>el7.noarch</span><br><span class="line">yum-utils<span class="number">-1.1</span><span class="number">.31</span><span class="number">-24.</span>el7.noarch</span><br><span class="line">yum-rhn-plugin<span class="number">-2.0</span><span class="number">.1</span><span class="number">-4.</span>el7.noarch</span><br><span class="line">PackageKit-yum<span class="number">-0.8</span><span class="number">.9</span><span class="number">-11.</span>el7.x86_64</span><br></pre></td></tr></table></figure>
<h2 id="删除这些软件包"><a href="#删除这些软件包" class="headerlink" title="删除这些软件包"></a>删除这些软件包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rpm -e yum<span class="number">-3.4</span><span class="number">.3</span><span class="number">-118.</span>el7.noarch --nodeps</span><br><span class="line">rpm -e yum-utils<span class="number">-1.1</span><span class="number">.31</span><span class="number">-24.</span>el7.noarch --nodeps</span><br><span class="line">rpm -e yum-rhn-plugin<span class="number">-2.0</span><span class="number">.1</span><span class="number">-4.</span>el7.noarch --nodeps</span><br><span class="line">rpm -e yum-metadata-parser<span class="number">-1.1</span><span class="number">.4</span><span class="number">-10.</span>el7.x86_64 --nodeps</span><br><span class="line">rpm -e yum-langpacks<span class="number">-0.4</span><span class="number">.2</span><span class="number">-3.</span>el7.noarch --nodeps</span><br><span class="line">rpm -e PackageKit-yum<span class="number">-0.8</span><span class="number">.9</span><span class="number">-11.</span>el7.x86_64 --nodeps</span><br><span class="line">rpm -e subscription-manager-gui --nodeps</span><br><span class="line">rpm -e subscription-manager-firstboot --nodeps</span><br><span class="line">rpm -e --nodeps redhat-release-server</span><br><span class="line">rpm -e --nodeps redhat-logos</span><br></pre></td></tr></table></figure>
<h2 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h2><p>代理服务器使用的是<code>tinyproxy</code>,安装在<code>192.168.100.102</code>中，可以访问外网。</p>
<p>注意：不使用此方法——系统级代理：写入：/etc/profile
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http_proxy=&quot;http://192.168.100.2:8899/&quot;</span><br><span class="line">export http_proxy</span><br></pre></td></tr></table></figure></p>
<p>这样整个系统都使用了代理，可能对Hadoop集群通信造成困扰，因此不予采纳。</p>
<h3 id="为YUM设置代理"><a href="#为YUM设置代理" class="headerlink" title="为YUM设置代理"></a>为YUM设置代理</h3><p>编辑 <code>sudo vim /etc/yum.conf</code> ，添加一行<code>proxy=http://192.168.100.2:8899/</code>,更改如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[main]</span><br><span class="line">cachedir=/var/cache/yum/$basearch/$releasever</span><br><span class="line">keepcache=0</span><br><span class="line">debuglevel=2</span><br><span class="line">logfile=/var/log/yum.log</span><br><span class="line">exactarch=1</span><br><span class="line">obsoletes=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">plugins=1</span><br><span class="line">installonly_limit=5</span><br><span class="line">bugtracker_url=http://bugs.centos.org/set_project.php?project_id=23&amp;ref=http://bugs.centos.org/bug_report_page.php?category=yum</span><br><span class="line">distroverpkg=centos-release</span><br><span class="line">proxy=http://192.168.100.2:8899/</span><br></pre></td></tr></table></figure>
<h3 id="为wget设置代理"><a href="#为wget设置代理" class="headerlink" title="为wget设置代理"></a>为wget设置代理</h3><p>编辑/etc/wgetrc，在最后加入
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http_proxy=http://<span class="number">192.168</span><span class="number">.100</span><span class="number">.2</span>:<span class="number">8899</span>/</span><br><span class="line">https_proxy = http://<span class="number">192.168</span><span class="number">.100</span><span class="number">.2</span>:<span class="number">8899</span>/</span><br></pre></td></tr></table></figure></p>
<p>刷新：<code>source /etc/wgetrc</code></p>
<h2 id="导入GPG-KEY"><a href="#导入GPG-KEY" class="headerlink" title="导入GPG-KEY"></a>导入GPG-KEY</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/os/x86_64/RPM-GPG-KEY-CentOS<span class="number">-7</span></span><br><span class="line">sudo mv RPM-GPG-KEY-CentOS<span class="number">-7</span> /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS<span class="number">-7</span></span><br></pre></td></tr></table></figure>
<h2 id="找到自己所需要的版本下载"><a href="#找到自己所需要的版本下载" class="headerlink" title="找到自己所需要的版本下载"></a>找到自己所需要的版本下载</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/os/x86_64/Packages/yum<span class="number">-3.4</span><span class="number">.3</span><span class="number">-132.</span>el7.centos<span class="number">.0</span><span class="number">.1</span>.noarch.rpm</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/os/x86_64/Packages/yum-utils<span class="number">-1.1</span><span class="number">.31</span><span class="number">-34.</span>el7.noarch.rpm</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/os/x86_64/Packages/yum-rhn-plugin<span class="number">-2.0</span><span class="number">.1</span><span class="number">-5.</span>el7.noarch.rpm</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/os/x86_64/Packages/yum-metadata-parser<span class="number">-1.1</span><span class="number">.4</span><span class="number">-10.</span>el7.x86_64.rpm</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/os/x86_64/Packages/yum-langpacks<span class="number">-0.4</span><span class="number">.2</span><span class="number">-4.</span>el7.noarch.rpm</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/os/x86_64/Packages/PackageKit-yum<span class="number">-1.0</span><span class="number">.7</span><span class="number">-5.</span>el7.centos.x86_64.rpm</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/os/x86_64/Packages/yum-plugin-fastestmirror<span class="number">-1.1</span><span class="number">.31</span><span class="number">-34.</span>el7.noarch.rpm</span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/os/x86_64/Packages/PackageKit<span class="number">-1.0</span><span class="number">.7</span><span class="number">-5.</span>el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure>
<h2 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh yum-metadata-parser<span class="number">-1.1</span><span class="number">.4</span><span class="number">-10.</span>el7.x86_64.rpm</span><br><span class="line">rpm -ivh yum-plugin-fastestmirror<span class="number">-1.1</span><span class="number">.31</span><span class="number">-34.</span>el7.noarch.rpm yum<span class="number">-3.4</span><span class="number">.3</span><span class="number">-132.</span>el7.centos<span class="number">.0</span><span class="number">.1</span>.noarch.rpm</span><br><span class="line">rpm -ivh yum-rhn-plugin<span class="number">-2.0</span><span class="number">.1</span><span class="number">-5.</span>el7.noarch.rpm yum-utils<span class="number">-1.1</span><span class="number">.31</span><span class="number">-34.</span>el7.noarch.rpm yum-langpacks<span class="number">-0.4</span><span class="number">.2</span><span class="number">-4.</span>el7.noarch.rpm</span><br></pre></td></tr></table></figure>
<h2 id="配置Repo"><a href="#配置Repo" class="headerlink" title="配置Repo"></a>配置Repo</h2><p>编辑 <code>vim /etc/yum.repos.d/CentOS-Base.repo</code> :</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[base]</span><br><span class="line">name=CentOS-$releasever - Base</span><br><span class="line">baseurl=http://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/os/$basearch/</span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS<span class="number">-7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#released updates</span></span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-$releasever - Updates</span><br><span class="line">baseurl=http://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/updates/$basearch/</span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS<span class="number">-7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that may be useful</span></span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-$releasever - Extras</span><br><span class="line">baseurl=http://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/extras/$basearch/</span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS<span class="number">-7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#additional packages that extend functionality of existing packages</span></span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-$releasever - Plus</span><br><span class="line">baseurl=http://mirrors.tuna.tsinghua.edu.cn/centos/<span class="number">7</span>/centosplus/$basearch/</span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">enabled=<span class="number">0</span></span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS<span class="number">-7</span></span><br></pre></td></tr></table></figure>
<h2 id="清除旧版本信息-删除RedHat信息"><a href="#清除旧版本信息-删除RedHat信息" class="headerlink" title="清除旧版本信息,删除RedHat信息"></a>清除旧版本信息,删除RedHat信息</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br><span class="line"></span><br><span class="line">yum install subscription-manager-gui</span><br><span class="line">yum install libdevmapper* -y</span><br><span class="line">yum install PackageKit</span><br><span class="line"></span><br><span class="line">yum remove rhnlib redhat-support-tool redhat-support-lib-python</span><br><span class="line"></span><br><span class="line">yum clean all</span><br><span class="line">yum upgrade</span><br></pre></td></tr></table></figure>
<h2 id="查看更新后的结果："><a href="#查看更新后的结果：" class="headerlink" title="查看更新后的结果："></a>查看更新后的结果：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave10 ~]$ cat /etc/redhat-release</span><br><span class="line">CentOS Linux release <span class="number">7.2</span><span class="number">.1511</span> (Core)</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[统计学习方法——概论]]></title>
      <url>http://keyunluo.github.io/2016/07/26/2016-07-26-statical-learning-1.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>统计学习(statistical learning)做的事情是：基于数据建立概率统计模型，然后用模型对数据进行预测和分析。</p>
</blockquote>
<a id="more"></a>
<h2 id="统计学习三要素"><a href="#统计学习三要素" class="headerlink" title="统计学习三要素"></a>统计学习三要素</h2><ol>
<li><p>模型</p>
<ul>
<li><p><strong>模型</strong> 就是所要学习的条件概率分布或决策函数。    $Y=f(X)$ 或 $P(Y|X)$</p>
</li>
<li><p><strong>模型的假设空间</strong> 包括所有可能的条件概率分布或决策函数。</p>
<p>$\mathcal{F} = \{f | Y=f_\theta(X), \theta\in R^n \}$</p>
<p>或 $ \mathcal{F} = \{P | P_\theta(Y|X), \theta\in R_n \}$。 其中 $ \theta$的取值空间$R^n$称为<strong>参数空间</strong>。</p>
</li>
</ul>
</li>
<li><p>策略
 <strong>策略</strong>也即学习的准则。一般来说监督学习的策略即指经验风险或结构风险函数最优化。</p>
<ul>
<li><p>经验风险</p>
<ul>
<li>损失函数 ：$ L(Y, f(X))$<ol>
<li>0-1损失函数</li>
<li>平方损失函数</li>
<li>绝对损失函数</li>
<li>对数损失函数</li>
</ol>
</li>
<li><p>风险函数
  <strong>风险函数(risk function)又叫期望损失(expected loss)</strong>，是理论模型$f(X)$关于联合分布$P(X,Y)$的平均意义下的损失。损失函数的期望是：</p>
<p>$$ R_{exp}(f) = E_p[L(Y,f(X))]=\int_{\mathcal{X}\times \mathcal{Y}}L(y,f(x))P(x,y)dxdy $$</p>
</li>
<li><p>经验风险
  风险函数和联合分布$P(X, Y)$，用作为模型的后者求作为策略的前者，显然是病态的。故取训练数据集上的平均损失称为<strong>经验风险(empirical risk)</strong>。</p>
<p>$$ R_{emp}(f) = \frac1N\sum_{i=1}^N L(y_i, f(x_i)) $$</p>
<p> 当训练样本数量$N$趋于无穷时，$R_{emp}$趋于$R_{exp}$。</p>
</li>
</ul>
</li>
<li><p>结构风险</p>
<p>  <strong>结构风险(structural risk)</strong>在经验风险的基础上添加正则化项(regularization，也叫罚项(penalty term))。</p>
<p>  $$ R_{srm}(f)=\frac1N\sum_{i=1}^N L(y_i,f(x_i))+ \lambda J(f), \lambda \geq 0 $$</p>
</li>
<li><p>经验风险最小化</p>
<p>  在$\mathcal{F}$找到一个$f$使得$R_{emp}$最小。
  p.s. 当模型是条件概率分布，损失函数是对数损失函数时，经验风险最小化等价于<strong>极大似然估计</strong>。</p>
</li>
<li><p>结构风险最小化</p>
<p>  为防止经验风险最小化有可能带来的过拟合，添加<strong>代表模型复杂度</strong>的罚项$J(f)$。</p>
</li>
</ul>
</li>
<li>算法
 最优化算法</li>
</ol>
<hr>
<h2 id="模型评估与模型选择"><a href="#模型评估与模型选择" class="headerlink" title="模型评估与模型选择"></a>模型评估与模型选择</h2><h3 id="误差"><a href="#误差" class="headerlink" title="误差"></a>误差</h3><ol>
<li><p>训练误差</p>
<p> <strong>训练误差(training error)</strong>是学习到的模型$Y=\hat{f}(X)$关于训练数据集的平均损失。</p>
<p> $$R_{emp}(\hat{f}) = \frac1N\sum_{i=1}^N L(y_i, \hat{f}(x_i))$$</p>
</li>
<li><p>测试误差</p>
<p> <strong>测试误差(test error)</strong>是学习到的模型$Y=\hat{f}(X)$关于测试数据集的平均损失。</p>
<p> $$e_{test}(\hat{f}) = \frac1{N’}\sum_{i=1}^{N’} L(y_i, \hat{f}(x_i))$$
当损失函数是0-1损失时，测试误差即为测试数据集上的误差率。</p>
</li>
</ol>
<h3 id="正则化"><a href="#正则化" class="headerlink" title="正则化"></a>正则化</h3><p>正则化方法就是在经验风险函数上添加正则化项。<strong>正则化项(regularizer)</strong>一般是模型复杂度的单调递增函数。如可以是模型参数向量的范数。</p>
<p>正则化的一般形式：</p>
<p>$$ min_{f \in \mathcal{F} } \frac1N\sum_{i=1}^N L(y_i,f(x_i))+ \lambda J(f)$$</p>
<p>其中第一项是经验风险，第二项是正则化项，正则化项可以取不同的形式，例如，在回归问题中，损失函数是平方损失，正则化项可以是参数向量的$L_2$范数：</p>
<p>$$L(w)=\frac1N\sum_{i=1}^N L(y_i,f(x_i))+ \frac{\lambda}{2} {\Vert w \Vert}^2$$</p>
<ul>
<li>奥卡姆剃刀(Occam’s razor)原理：在所有可能选择的模型中，能够很好解释已知数据并且十分简单才是最好的模型。</li>
</ul>
<h3 id="交叉验证"><a href="#交叉验证" class="headerlink" title="交叉验证"></a>交叉验证</h3><p>将数据集随机分为训练集、验证集(validation set)和测试集，分别用于模型的训练、选择和评估。</p>
<ol>
<li>简单交叉验证
 分两部分：训练集和测试集</li>
<li>$S$折交叉验证
 等分$S$部分：$S-1$份做训练集，1份做测试集。重复进行。</li>
<li>留一交叉验证
 $S$折交叉验证的特例$S=N$。</li>
</ol>
<h3 id="泛化能力"><a href="#泛化能力" class="headerlink" title="泛化能力"></a>泛化能力</h3><ol>
<li><p>泛化误差</p>
<p> <strong>泛化误差(generalization error)</strong>学到的模型$\hat{f}$对未知数据预测的误差。</p>
<p> $$R_{exp}(\hat{f}) = E_p[L(Y,\hat{f}(X))]=\int _{\mathcal{X}\times \mathcal{Y}}L(y,\hat{f}(x))P(x,y)dxdy$$</p>
<p> 泛化误差就是学习到的模型的期望风险。</p>
</li>
<li><p>泛化误差上界</p>
<ul>
<li>样本容量增加，泛化误差上界趋近于0</li>
<li>假设空间容量增加，泛化误差上界增大</li>
</ul>
</li>
</ol>
<hr>
<h2 id="监督学习分类"><a href="#监督学习分类" class="headerlink" title="监督学习分类"></a>监督学习分类</h2><h3 id="按学习方法分类"><a href="#按学习方法分类" class="headerlink" title="按学习方法分类"></a>按学习方法分类</h3><ol>
<li>生成方法-&gt;生成模型<ul>
<li>由数据学习联合概率分布$P(X,Y)$后，求出概率分布$P(Y|X) = P(X,Y)/P(X)$。</li>
<li>包括：朴素贝叶斯法、隐马尔科夫模型</li>
</ul>
</li>
<li>判别方法-&gt;判别模型<ul>
<li>由数据直接学习决策函数$f(X)$或者条件概率分布$P(Y|X)$。</li>
<li>包括：k近邻法、感知机、逻辑斯蒂回归模型、最大熵模型、支持向量机、提升方法、条件随机场。</li>
</ul>
</li>
<li>区别：<ul>
<li>生成方法：<ul>
<li>可还原出$P(X,Y)$</li>
<li>学习收敛速度快，当N增大时，更快收敛于真实模型</li>
<li>当存在隐变量时，仍可以使用</li>
</ul>
</li>
<li>判别方法<ul>
<li>直接学习$f(X)$或$P(Y|X)$，往往学习的准确率更高</li>
<li>可对数据进行抽象、特征定义以简化学习问题</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="研究议题"><a href="#研究议题" class="headerlink" title="研究议题"></a>研究议题</h3><p>输入变量和输出变量均为连续变量的预测问题称为回归问题，如函数拟合；输出变量为有限个离散变量的预测问题称为分类问题，学习出的分类模型或分类决策函数称为分类器（classifier）；输入变量与输出变量均为变量序列的预测问题称为标注问题，如词性标注，输入词序列，输出是（词，词性）的标记序列。</p>
<ol>
<li>分类问题<ul>
<li>评价指标<ul>
<li>精确率(precision)
  $$P = \frac{TP}{TP+FP}$$</li>
<li>召回率(recall)
  $$R = \frac{TP}{TP+FN}$$</li>
<li>$F_1$
  $$F_1 = \frac{2}{\frac1P + \frac1R} = \frac{2TP}{2TP+FP+FN}$$</li>
</ul>
</li>
</ul>
</li>
<li>标注问题</li>
<li>回归问题</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PlantUML时序图绘制]]></title>
      <url>http://keyunluo.github.io/2016/07/25/2016-07-25-plantuml-sequence.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>PlantUML是一个开源项目，并支持快速绘制常见的UML图像,本节主要学习其时序图的用法,时序图通过描述对象之间发送消息的时间顺序显示多个对象之间的动态协作。</p>
</blockquote>
<a id="more"></a>
<h2 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h2><p>你可以使用-&gt;来绘制参与者之间的消息传递， 而不必显式的声明参与者。
你也可以使用 “–&gt;” 绘制一个虚线箭头表示异步消息。</p>
<p>另外，你也可以使用 “&lt;-“ 和 “&lt;–”. 这虽然不影响图形绘制，但可以增加可读性。 注意：仅适用于时序图，其它图形的规则是不同的。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">Alice -&gt; Bob: Authentication Request</span><br><span class="line">Bob --&gt; Alice: Authentication Response</span><br><span class="line"></span><br><span class="line">Alice -&gt; Bob: Another authentication Request</span><br><span class="line">Alice &lt;-- Bob: another authentication Response</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/Syp9J4vLqBLJSCfFib9mB2t9ICqhoKnEBCdCprC8IYqiJIqkuGBAAUW2rJY256DHLLoGdrUSoiNbY6fONZvGNP528dP38OfjT7KXgXDngOOO3W00">
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>所有以单引号开头的行 ‘都是注释。</p>
<p>你也可以使用多行注释，多行注释以 /‘ 开头 ‘/ 结尾。</p>
<h2 id="声明参与者"><a href="#声明参与者" class="headerlink" title="声明参与者"></a>声明参与者</h2><p>可以使用 participant 关键字来改变参与者的先后顺序。
你也可以使用其它关键字来声明参与者:</p>
<ul>
<li>actor</li>
<li>boundary</li>
<li>control</li>
<li>entity</li>
<li>database</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">actor Foo1</span><br><span class="line">boundary Foo2</span><br><span class="line">control Foo3</span><br><span class="line">entity Foo4</span><br><span class="line">database Foo5</span><br><span class="line">Foo1 -&gt; Foo2 : To boundary</span><br><span class="line">Foo1 -&gt; Foo3 : To control</span><br><span class="line">Foo1 -&gt; Foo4 : To entity</span><br><span class="line">Foo1 -&gt; Foo5 : To database</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/IqmkoIzISClFD-HAoY_DIqaigWJnZBYIy_DAYl9pG1nZhjIyaimIi8G9LqfYIM9IOd4gY6VA1TAfe6i7rgDWfH2Ihm0p1bdA6285DHDPnWGY0x40MS8K8W6p3G00">
<p>使用 as 关键字重命名参与者，可以使用RGB值或者颜色名修改 actor 或参与者的背景色。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">actor Bob #red</span><br><span class="line">' The only difference between actor</span><br><span class="line">'and participant is the drawing</span><br><span class="line">participant Alice</span><br><span class="line">participant "I have a really\nlong name" as L #99FF99</span><br><span class="line">/' You can also declare:</span><br><span class="line">   participant L as "I have a really\nlong name"  #99FF99</span><br><span class="line">  '/</span><br><span class="line"></span><br><span class="line">Alice-&gt;Bob: Authentication Request</span><br><span class="line">Bob-&gt;Alice: Authentication Response</span><br><span class="line">Bob-&gt;L: Log transaction</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/VP2n2W8n44JxVCMWnLLYVLS8MWZ2LM8ZsAp9UWRYxfda5F_Ug20AOhlpPcPtoMQDMEWUuyZELDWS6IhX1kSF1uuibh7dV6KMq0Cs5Ob3Jp5xwtkI39-GYyj5kdhfpASq3zxorsIqmf4k349a2k6saw3IGUZ48r12Yt5TBvTrRQOLjZh0KYaEIU7O1ehS6E2hldtO_iQ-8u5gQinpgSci7DrWFfJLfMHHzYfOytdWb4tH9hCdzmD9lKhY5zCsQBL3ZYIflAS0Tm00">
<h2 id="更改箭头的样式"><a href="#更改箭头的样式" class="headerlink" title="更改箭头的样式"></a>更改箭头的样式</h2><p>修改箭头样式的方式有以下几种:</p>
<ul>
<li>末尾加 x 表示一条丢失的消息</li>
<li>使用 \ 或 / 替代 &lt; 或 &gt; 来表示 have only the bottom or top part of the arrow</li>
<li>使用两个箭头标记 (如 &gt;&gt; 或 //) 表示空心箭头。</li>
<li>使用 – 替代 - 以表示虚线箭头。</li>
<li>在箭头末尾加 “o”</li>
<li>双向箭头。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Bob -&gt;x Alice</span><br><span class="line">Bob -&gt; Alice</span><br><span class="line">Bob -&gt;&gt; Alice</span><br><span class="line">Bob -\ Alice</span><br><span class="line">Bob \\- Alice</span><br><span class="line">Bob //-- Alice</span><br><span class="line"></span><br><span class="line">Bob -&gt;o Alice</span><br><span class="line">Bob o\\-- Alice</span><br><span class="line"></span><br><span class="line">Bob &lt;-&gt; Alice</span><br><span class="line">Bob &lt;-&gt;o Alice</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/SyfFKj2rgr1mpCbCJkLo0lDGE2Yy62HEJ8mk4azVNnV6XMhCHvBD1of6aRP1iSK6hXe0">
<h2 id="修改箭头颜色"><a href="#修改箭头颜色" class="headerlink" title="修改箭头颜色"></a>修改箭头颜色</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bob -[<span class="comment">#red]&gt; Alice : hello</span></span><br><span class="line">Alice -[<span class="comment">#0000FF]-&gt;Bob : ok</span></span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/SyfFKj2DLYvAJOcrKt3CoKnELR1Io4ZDoSddWl20aWP0uEOMgsld15HifP2V3G00">
<h2 id="消息编号"><a href="#消息编号" class="headerlink" title="消息编号"></a>消息编号</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">autonumber</span><br><span class="line">Bob -&gt; Alice : Authentication Request</span><br><span class="line">Bob &lt;- Alice : Authentication Response</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/IomjoSyhpKrABU9ooazIqBLJSCp9J4vLi59mB2t9ICqhoKnEBCdCprC8IYqiJIqk0QkoqSMjghWWFwyu5G00">
<p>你可以在双引号内指定编号的格式。
格式是由 Java 的DecimalFormat类实现的 (‘0’ 表示数字, ‘#’ 表示数字且默认为 0 )。</p>
<p>你还可以使用 HTML 标签来制定格式。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line"></span><br><span class="line">title Simple communication example</span><br><span class="line"></span><br><span class="line">autonumber "&lt;b&gt;[000]"</span><br><span class="line">Bob -&gt; Alice : Authentication Request</span><br><span class="line">Bob &lt;- Alice : Authentication Response</span><br><span class="line"></span><br><span class="line">autonumber 15 "&lt;b&gt;(&lt;u&gt;##&lt;/u&gt;)"</span><br><span class="line">Bob -&gt; Alice : Another authentication Request</span><br><span class="line">Bob &lt;- Alice : Another authentication Response</span><br><span class="line"></span><br><span class="line">autonumber 40 10 "&lt;font color=red&gt;&lt;b&gt;Message 0  "</span><br><span class="line">Bob -&gt; Alice : Yet another authentication Request</span><br><span class="line">Bob &lt;- Alice : Yet another authentication Response</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/bP2n2i8m48RtFiNHBZg8AUWYDL1t5vr47D9wQg39rUG2Fhwn8WYrejF1yV_tVHnhRX2sshHnr6HCiBfMhCa2tjHZcwZ0P8Efq45QL78lX3YaoOegc4We6rqZBA0CV47Bh-u6hm4zTwbYCfpoBLcFoJiZdtUOKH5abXNJ8CTzcALunu7w3JgK_W2V2SX5v9_8Sdn7Gsxfy2YZpngzLsS40T3psI63-ilfQ-FfTGS0">
<h2 id="给图表-diagram-添加备注"><a href="#给图表-diagram-添加备注" class="headerlink" title="给图表(diagram)添加备注"></a>给图表(diagram)添加备注</h2><p>关键字 legend 和 end legend 用于添加备注。
可选项 left， right 和 center 可用于设置标注的对齐方式。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">Alice -&gt; Bob : Hello</span><br><span class="line">legend right</span><br><span class="line">  Short</span><br><span class="line">  legend</span><br><span class="line">endlegend</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/Syp9J4vLqBLJSCfFKh1Iy4ZDoSddoabDJyrBKIZAJCyeuL9G2Cx8BmBH464k88Oe0000">
<h2 id="给消息添加注释"><a href="#给消息添加注释" class="headerlink" title="给消息添加注释"></a>给消息添加注释</h2><p>我们可以通过在消息后面添加 note left 或者 note right 关键词来给消息添加注释。
你也可以通过使用 end note 来添加多行注释。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">Alice-&gt;Bob : hello</span><br><span class="line">note left: this is a first note</span><br><span class="line"></span><br><span class="line">Bob-&gt;Alice : ok</span><br><span class="line">note right: this is another note</span><br><span class="line"></span><br><span class="line">Bob-&gt;Bob : I am thinking</span><br><span class="line">note left</span><br><span class="line">    a note</span><br><span class="line">    can also be defined</span><br><span class="line">    on several lines</span><br><span class="line">end note</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/JOr13eCm30JlUSL-W0zmGAAtFiCGGonSHqgYlhyEEHJB1sizerrLTfwMLzum8x5g3fORG_beCrgI2b_28QKsz5S83a_BsaLtyZM48cTw6XucBazZTBn1dqxP9NR-km9yQE3ztCb0MZCsHkH3ZEETPqFbBnTIg8SriCNR-W40">
<h2 id="改变备注框的形状"><a href="#改变备注框的形状" class="headerlink" title="改变备注框的形状"></a>改变备注框的形状</h2><p>你可以使用 hnote 和 rnote 这两个关键字来修改备注框的形状。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">caller -&gt; server : conReq</span><br><span class="line">hnote over caller : idle</span><br><span class="line">caller &lt;- server : conConf</span><br><span class="line">rnote over server</span><br><span class="line"> "r" as rectangle</span><br><span class="line"> "h" as hexagon</span><br><span class="line">endrnote</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/LOlB2O0m44JlMyMGUne8uiKEx234rGXX5pSYbkyNnDlCctafbi86twAoRMSAI2ezBvH5LuPUB3sdW7aeJ6zh_4_fL4QoptasWZE7M66SrYZJgSFbcsJUuwH2BCEj7G00">
<h2 id="空间"><a href="#空间" class="headerlink" title="空间"></a>空间</h2><p>你可以使用|||来增加空间。
还可以使用数字指定增加的像素的数量。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">Alice -&gt; Bob: message 1</span><br><span class="line">Bob --&gt; Alice: ok</span><br><span class="line">|||</span><br><span class="line">Alice -&gt; Bob: message 2</span><br><span class="line">Bob --&gt; Alice: ok</span><br><span class="line">||45||</span><br><span class="line">Alice -&gt; Bob: message 3</span><br><span class="line">Bob --&gt; Alice: ok</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/Syp9J4vLqBLJSCfFibB8JIqkJanFLJ3a0d8LT872ZY1vAuNyRAwQcXekHwogZR2gDZ75gS4OKmC0">
<h2 id="生命线的激活与撤销"><a href="#生命线的激活与撤销" class="headerlink" title="生命线的激活与撤销"></a>生命线的激活与撤销</h2><p>关键字activate和deactivate用来表示参与者的生命活动。
一旦参与者被激活，它的生命线就会显示出来。</p>
<p>activate和deactivate适用于以上情形。</p>
<p>destroy表示一个参与者的生命线的终结。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">participant User</span><br><span class="line"></span><br><span class="line">User -&gt; A: DoWork</span><br><span class="line">activate A</span><br><span class="line"></span><br><span class="line">A -&gt; B: &lt;&lt; createRequest &gt;&gt;</span><br><span class="line">activate B</span><br><span class="line"></span><br><span class="line">B -&gt; C: DoWork</span><br><span class="line">activate C</span><br><span class="line">C --&gt; B: WorkDone</span><br><span class="line">destroy C</span><br><span class="line"></span><br><span class="line">B --&gt; A: RequestCreated</span><br><span class="line">deactivate B</span><br><span class="line"></span><br><span class="line">A -&gt; User: Done</span><br><span class="line">deactivate A</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/POv12iCm30Jl-mfz81y8mM0xBoYKdesZWod4gQ8M-ljQJY65NdJGxixkbaHBBbjQbQux2s2N1aT-fBdUgjoHifPNKYOFU9F2IDD4MRWzB_nuygxatEaBG31V_4T4H1eEX0bpNHbBoqjzDyrYH_KN6tl7qYo_y3x2TXg_0yw97m00">
<h2 id="进入和发出消息"><a href="#进入和发出消息" class="headerlink" title="进入和发出消息"></a>进入和发出消息</h2><p>如果只想关注部分图示，你可以使用进入和发出箭头。
使用方括号[和]表示图示的左、右两侧。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">[-&gt; A: DoWork</span><br><span class="line"></span><br><span class="line">activate A</span><br><span class="line"></span><br><span class="line">A -&gt; A: Internal call</span><br><span class="line">activate A</span><br><span class="line"></span><br><span class="line">A -&gt;] : &lt;&lt; createRequest &gt;&gt;</span><br><span class="line"></span><br><span class="line">A&lt;--] : RequestCreated</span><br><span class="line">deactivate A</span><br><span class="line">[&lt;- A: Done</span><br><span class="line">deactivate A</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/YzQrKt2qKd393yylokRYIamkoInBB4bLSEJYSbI0o7dcbQGMvINcA2GdvkHWg8XLi5AmiL58Bae52WQb5fQc5fSesDa19MrqTK6IK35di88KhfHK91EYRNGXjkUbeaW00000">
<h2 id="包裹参与者"><a href="#包裹参与者" class="headerlink" title="包裹参与者"></a>包裹参与者</h2><p>可以使用box和end box画一个盒子将参与者包裹起来。
还可以在box关键字之后添加标题或者背景颜色。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">box "Internal Service" #LightBlue</span><br><span class="line">    participant Bob</span><br><span class="line">    participant Alice</span><br><span class="line">end box</span><br><span class="line">participant Other</span><br><span class="line"></span><br><span class="line">Bob -&gt; Alice : hello</span><br><span class="line">Alice -&gt; Other : hello</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/IyglK53op2j9BSfBp548JYqgoqnELL9GzibCpoXnoYbDvL80WeB4efBCvCo2nBmI1QVy90mnnnoWBgxKl1I5fFmABcGP_vACr28kBg0c1LqxY3e5AuMCr9oSV2u83oWCLWGJ1W00">
<h2 id="外观参数-skinparam"><a href="#外观参数-skinparam" class="headerlink" title="外观参数(skinparam)"></a>外观参数(skinparam)</h2><p>使用skinparam命令改变颜色和字体。
如下场景可以使用这一命令：</p>
<ul>
<li>在图示定义中，</li>
<li>在一个包含文件中,</li>
<li>在由命令行或者ANT任务提供的配置文件中。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">skinparam sequenceArrowThickness 2</span><br><span class="line">skinparam roundcorner 20</span><br><span class="line">skinparam maxmessagesize 60</span><br><span class="line">skinparam sequenceParticipant underline</span><br><span class="line"></span><br><span class="line">actor User</span><br><span class="line">participant "First Class" as A</span><br><span class="line">participant "Second Class" as B</span><br><span class="line">participant "Last Class" as C</span><br><span class="line"></span><br><span class="line">User -&gt; A: DoWork</span><br><span class="line">activate A</span><br><span class="line"></span><br><span class="line">A -&gt; B: Create Request</span><br><span class="line">activate B</span><br><span class="line"></span><br><span class="line">B -&gt; C: DoWork</span><br><span class="line">activate C</span><br><span class="line">C --&gt; B: WorkDone</span><br><span class="line">destroy C</span><br><span class="line"></span><br><span class="line">B --&gt; A: Request Created</span><br><span class="line">deactivate B</span><br><span class="line"></span><br><span class="line">A --&gt; User: Done</span><br><span class="line">deactivate A</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/PO-xJWCn44Nx-OfH-aWe1KMAI6j7L1G8WgX7tX5OcxMN6OVNr-DP0l6ArkVSUySwn3IHq8ZAhoTEWJkH_7vuYM58h8eRq3z5yYdr8KjYmSrL0qRw6AjCpwpnY_6wPR-zToGbXZXHAbXhM8unCG25aWKVbGMcnbZTHD62_aYgAoJ5ReaVEEJKDzmj-IqjqXx09d2zmswB-_oKPR3f-4Q5QpTqXjmMlR2ztDlHMYwA0t2c-Fzf3nxNFsa3-ro_rTUmv4_RTJEig-VEyqHVdRQzcpKxqXRcYijztm00">
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">skinparam backgroundColor #EEEBDC</span><br><span class="line">skinparam handwritten true</span><br><span class="line"></span><br><span class="line">skinparam sequence &#123;</span><br><span class="line">    ArrowColor DeepSkyBlue</span><br><span class="line">    ActorBorderColor DeepSkyBlue</span><br><span class="line">    LifeLineBorderColor blue</span><br><span class="line">    LifeLineBackgroundColor #A9DCDF</span><br><span class="line"></span><br><span class="line">    ParticipantBorderColor DeepSkyBlue</span><br><span class="line">    ParticipantBackgroundColor DodgerBlue</span><br><span class="line">    ParticipantFontName Impact</span><br><span class="line">    ParticipantFontSize 17</span><br><span class="line">    ParticipantFontColor #A9DCDF</span><br><span class="line"></span><br><span class="line">    ActorBackgroundColor aqua</span><br><span class="line">    ActorFontColor DeepSkyBlue</span><br><span class="line">    ActorFontSize 17</span><br><span class="line">    ActorFontName Aapex</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">actor User</span><br><span class="line">participant "First Class" as A</span><br><span class="line">participant "Second Class" as B</span><br><span class="line">participant "Last Class" as C</span><br><span class="line"></span><br><span class="line">User -&gt; A: DoWork</span><br><span class="line">activate A</span><br><span class="line"></span><br><span class="line">A -&gt; B: Create Request</span><br><span class="line">activate B</span><br><span class="line"></span><br><span class="line">B -&gt; C: DoWork</span><br><span class="line">activate C</span><br><span class="line">C --&gt; B: WorkDone</span><br><span class="line">destroy C</span><br><span class="line"></span><br><span class="line">B --&gt; A: Request Created</span><br><span class="line">deactivate B</span><br><span class="line"></span><br><span class="line">A --&gt; User: Done</span><br><span class="line">deactivate A</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/VP91IyD048Nlyok6Ukx1azY3aDsq81GHYtYU9cDTakwcinjh5V-xsRGqQHhSutplpNiCwmjZAnBQufgoOYEkjhbsfHEycS_dAjNWpueFilbUJ0XiCKZDq6EUTpNRZF47i7c9YDiVzwJCrQeugB8nj2WBJfIJd6LSi3Jll3IM-vhr5HosJUvJdIwW5JsJ19EPYcpuBwWl6wnBNRvX6LCkd0rFj6Lyt5QKXJ6yCj-CjtTZQAJiyHw3VDhLrD7EENhCOUPvsFPCgE8l-0MWECPNpm9Lrmed2oC-e2x9-mcIn-GIhpXpDkznTScNTE7M0342fm-Op9exlZafOhJvfD2K0KWYKZFKmd7o4Z-E3vr40QWeqTTk3HgdHtS4gRCCUMCMTuYvgeLDwcddAI9lDFtjIIkB9MD2kwBhzmS0">]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo博客中的绘图]]></title>
      <url>http://keyunluo.github.io/2016/07/25/2016-07-25-hexo-uml.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>UML是一种开放的方法，用于说明、可视化、构建和编写一个正在开发的、面向对象的、软件密集系统的制品的开放方法。本文介绍在Hexo中的两种绘图组件。</p>
</blockquote>
<a id="more"></a>
<h2 id="hexo-diagram"><a href="#hexo-diagram" class="headerlink" title="hexo-diagram"></a>hexo-diagram</h2><p>特点：</p>
<ul>
<li>时序图</li>
<li>鲁棒图</li>
<li>流程图</li>
</ul>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-diagram --save</span><br></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>diagram_type: sequence,robustness,flow,默认是时序图。</p>
<p>实例：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">``` sequence</span><br><span class="line"><span class="meta">@found "You", -&gt;</span></span><br><span class="line"><span class="meta">  @message "Think", -&gt;</span></span><br><span class="line"><span class="meta">    @message "Write your idea", "JUMLY", -&gt;</span></span><br><span class="line"><span class="meta">      @create "Diagram"</span></span><br><span class="line">jumly</span><br><span class="line"></span><br><span class="line"><span class="meta">@found "Browser", -&gt;</span></span><br><span class="line"><span class="meta">  @message "http request", "HTTP Server", -&gt;</span></span><br><span class="line"><span class="meta">    @create "HTTP Session", -&gt;</span></span><br><span class="line"><span class="meta">      @message "init"</span></span><br><span class="line"><span class="meta">      @message "aquire lock", "Database"</span></span><br><span class="line"><span class="meta">    @message "do something"</span></span><br><span class="line"><span class="meta">    @message "release lock", "Database"</span></span><br><span class="line"><span class="meta">    @reply "", "Browser"</span></span><br></pre></td></tr></table></figure>
<p><img src="/resource/diagrams/2016-07-25-hexo-uml-diagram-0.png" alt="sequence"></p>
<p><img src="/resource/diagrams/2016-07-25-hexo-uml-diagram-1.png" alt="sequence"></p>
<p>流程图的例子：
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">//纵向流程图</span><br><span class="line">st=&gt;start: Start:&gt;http://www.google.com[blank]</span><br><span class="line">e=&gt;end:&gt;http://www.google.com</span><br><span class="line">op1=&gt;operation: My Operation</span><br><span class="line">sub1=&gt;subroutine: My Subroutine</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?:&gt;http://www.google.com</span><br><span class="line">io=&gt;inputoutput: catch something...</span><br><span class="line"></span><br><span class="line">st-&gt;op1-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op1</span><br><span class="line"></span><br><span class="line">//横向流程图</span><br><span class="line">st=&gt;start: Start|past:&gt;http://www.google.com[blank]</span><br><span class="line">e=&gt;end: End|future:&gt;http://www.google.com</span><br><span class="line">op1=&gt;operation: My Operation|past</span><br><span class="line">op2=&gt;operation: Stuff|current</span><br><span class="line">sub1=&gt;subroutine: My Subroutine|invalid</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?|approved:&gt;http://www.google.com</span><br><span class="line">c2=&gt;condition: Good idea|rejected</span><br><span class="line">io=&gt;inputoutput: catch something...|future</span><br><span class="line"></span><br><span class="line">st-&gt;op1(right)-&gt;cond</span><br><span class="line">cond(yes, right)-&gt;c2</span><br><span class="line">cond(no)-&gt;sub1(left)-&gt;op1</span><br><span class="line">c2(yes)-&gt;io-&gt;e</span><br><span class="line">c2(no)-&gt;op2-&gt;e</span><br></pre></td></tr></table></figure></p>
<p><img src="/resource/diagrams/2016-07-25-hexo-uml-diagram-2.png" alt="flow"></p>
<p><img src="/resource/diagrams/2016-07-25-hexo-uml-diagram-3.png" alt="flow"></p>
<p><img src="/resource/diagrams/2016-07-25-hexo-uml-diagram-4.png" alt="flow"></p>
<h2 id="hexo-tag-plantuml"><a href="#hexo-tag-plantuml" class="headerlink" title="hexo-tag-plantuml"></a>hexo-tag-plantuml</h2><p>PlantUML是一个快速创建UML图形的组件，通过简单和直观的语言来定义图形，PlantUML支持的图形有：</p>
<ul>
<li>时序图(sequence diagram)</li>
<li>用例图(use case diagram)</li>
<li>类图(class diagram)</li>
<li>活动图(activity diagram)</li>
<li>组件图(component diagram)</li>
<li>状态图(state diagram)</li>
<li>部署图(deployment diagram)</li>
<li>对象图(object diagram)</li>
<li>图形接口(wireframe graphical interface)</li>
</ul>
<p>它的详细的官方文档为:<a href="http://plantuml.com/PlantUML_Language_Reference_Guide.pdf" target="_blank" rel="external">PlantUML Language Reference Guide</a></p>
<h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>在Hexo博客的根目录下执行下面命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-plantuml --save</span><br></pre></td></tr></table></figure>
<p>本质上是使用在线生成的方式产生图片的。</p>
<h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><p>一个简单例子如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">Alice -&gt; Bob: Authentication Request</span><br><span class="line">Bob --&gt; Alice: Authentication Response</span><br><span class="line">Alice -&gt; Bob: Another authentication Request</span><br><span class="line">Alice &lt;-- Bob: another authentication Response</span><br><span class="line">&#123;% endplantuml %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% plantuml %&#125;</span><br><span class="line">package org.nju.dislab.uml&#123;</span><br><span class="line">    class TestA &#123;</span><br><span class="line">        -String name</span><br><span class="line">        +int id</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class TestB extends TestA&#123;</span><br><span class="line">        -String desc</span><br><span class="line">        +String getDesc()</span><br><span class="line">        +void setDesc(String desc)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>
<img src="http://www.plantuml.com/plantuml/svg/Syp9J4vLqBLJSCfFib9mB2t9ICqhoKnEBCdCprC8IYqiJIqkuGBAAUW2rJY256DHLLoGdrUSokM8QbPUFb1PaK8YTZCXYcrqTI6g4t6fXfWD0000">
<img src="http://www.plantuml.com/plantuml/svg/POr12i9034NtFKMM5d7keFG6Ue4u2KFiD9KcbOBqxbOThEZVvNt-onLZYucX7rBGonX8BECvZ5s-Lx0aPZI34vlluKsUsHrz44sWsF47RaKTX5xtNFsi3y2Jir9n_Qk8BQwg0XDxi_1DlJQtNWYiyAzjNVxE3m00">
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Pandas数据处理入门]]></title>
      <url>http://keyunluo.github.io/2016/07/23/2016-07-23-python-pandas.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>Pandas包含高级的数据结构和精巧的工具，使得在Python中处理数据非常快速和简单。Pandas建造在NumPy之上，它使得以NumPy为中心的应用很容易使用。</p>
</blockquote>
<a id="more"></a>
<h2 id="Series"><a href="#Series" class="headerlink" title="Series"></a>Series</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Series是一个一维的类似数组的对象，包含一个数组的数据（任何NumPy的数据类型）和一个与数组关联的数据标签，被叫做 索引 。最简单的Series是由一个数组的数据构成：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=pd.Series(index = range(<span class="number">5</span>),data=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">12</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line"><span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span></span><br><span class="line"><span class="number">2</span> <span class="number">9</span></span><br><span class="line"><span class="number">3</span> <span class="number">11</span></span><br><span class="line"><span class="number">4</span> <span class="number">12</span></span><br></pre></td></tr></table></figure>
<p>Pandas的数据结构主要用来处理时序数据，因此，<code>index</code>项必须是可排序的。</p>
<h3 id="数据访问"><a href="#数据访问" class="headerlink" title="数据访问"></a>数据访问</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x=pd.Series(index = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'d'</span>,<span class="string">'z'</span>,<span class="string">'z'</span>],data=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">12</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line">a     <span class="number">1</span></span><br><span class="line">b     <span class="number">3</span></span><br><span class="line">d     <span class="number">9</span></span><br><span class="line">z    <span class="number">11</span></span><br><span class="line">z    <span class="number">12</span></span><br><span class="line">dtype: int64</span><br></pre></td></tr></table></figure>
<ul>
<li><p>点标选择</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.a</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.z</span><br><span class="line">z <span class="number">11</span></span><br><span class="line">z <span class="number">12</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>下标选择,使用iloc</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.iloc[:<span class="number">3</span>]</span><br><span class="line">a <span class="number">1</span></span><br><span class="line">b <span class="number">3</span></span><br><span class="line">d <span class="number">9</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x.loc[<span class="string">'a'</span>:<span class="string">'d'</span>]</span><br><span class="line">a    <span class="number">1</span></span><br><span class="line">b    <span class="number">3</span></span><br><span class="line">d    <span class="number">9</span></span><br><span class="line">dtype: int64</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x[<span class="string">'a'</span>:<span class="string">'d'</span>]</span><br><span class="line">a    <span class="number">1</span></span><br><span class="line">b    <span class="number">3</span></span><br><span class="line">d    <span class="number">9</span></span><br><span class="line">dtype: int64</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>使用分片时，注意包括终点。</p>
<h3 id="聚集和统计"><a href="#聚集和统计" class="headerlink" title="聚集和统计"></a>聚集和统计</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = pd.Series(range(<span class="number">5</span>),[<span class="number">1</span>,<span class="number">2</span>,<span class="number">11</span>,<span class="number">9</span>,<span class="number">10</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x</span><br><span class="line"><span class="number">1</span>     <span class="number">0</span></span><br><span class="line"><span class="number">2</span>     <span class="number">1</span></span><br><span class="line"><span class="number">11</span>    <span class="number">2</span></span><br><span class="line"><span class="number">9</span>     <span class="number">3</span></span><br><span class="line"><span class="number">10</span>    <span class="number">4</span></span><br><span class="line">dtype: int64</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>grp=x.groupby(<span class="keyword">lambda</span> i:i%<span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>grp.get_group(<span class="number">0</span>)</span><br><span class="line"><span class="number">2</span>     <span class="number">1</span></span><br><span class="line"><span class="number">10</span>    <span class="number">4</span></span><br><span class="line">dtype: int64</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>grp.get_group(<span class="number">1</span>)</span><br><span class="line"><span class="number">1</span>     <span class="number">0</span></span><br><span class="line"><span class="number">11</span>    <span class="number">2</span></span><br><span class="line"><span class="number">9</span>     <span class="number">3</span></span><br><span class="line">dtype: int64</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>grp.max()</span><br><span class="line"><span class="number">0</span>    <span class="number">4</span></span><br><span class="line"><span class="number">1</span>    <span class="number">3</span></span><br><span class="line">dtype: int64</span><br></pre></td></tr></table></figure>
<h2 id="DataFrame"><a href="#DataFrame" class="headerlink" title="DataFrame"></a>DataFrame</h2><p> 一个DataFrame表示一个表格，类似电子表格的数据结构，包含一个经过排序的列表集，它们每一个都可以有不同的类型值（数字，字符串，布尔等等）。DataFrame有行和列的索引；它可以被看作是一个Series的字典（每个Series共享一个索引）。与其它你以前使用过的（如 R 的 data.frame )类似DataFrame的结构相比，在DataFrame里的面向行和面向列的操作大致是对称的。在底层，数据是作为一个或多个二维数组存储的，而不是列表，字典，或其它一维的数组集合。</p>
<h3 id="创建-：-使用字典"><a href="#创建-：-使用字典" class="headerlink" title="创建 ： 使用字典"></a>创建 ： 使用字典</h3><p>索引会自动分配，并且对列进行了排序：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df = pd.DataFrame(&#123;<span class="string">'col1'</span>:[<span class="number">1</span>,<span class="number">3</span>,<span class="number">11</span>,<span class="number">2</span>],<span class="string">'col2'</span>:[<span class="number">9</span>,<span class="number">23</span>,<span class="number">0</span>,<span class="number">2</span>]&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df</span><br><span class="line">   col1  col2</span><br><span class="line"><span class="number">0</span>     <span class="number">1</span>     <span class="number">9</span></span><br><span class="line"><span class="number">1</span>     <span class="number">3</span>    <span class="number">23</span></span><br><span class="line"><span class="number">2</span>    <span class="number">11</span>     <span class="number">0</span></span><br><span class="line"><span class="number">3</span>     <span class="number">2</span>     <span class="number">2</span></span><br></pre></td></tr></table></figure>
<h3 id="数据访问-1"><a href="#数据访问-1" class="headerlink" title="数据访问"></a>数据访问</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df.iloc[:<span class="number">2</span>,:<span class="number">2</span>]</span><br><span class="line">   col1  col2</span><br><span class="line"><span class="number">0</span>     <span class="number">1</span>     <span class="number">9</span></span><br><span class="line"><span class="number">1</span>     <span class="number">3</span>    <span class="number">23</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df[<span class="string">'col1'</span>]</span><br><span class="line"><span class="number">0</span>     <span class="number">1</span></span><br><span class="line"><span class="number">1</span>     <span class="number">3</span></span><br><span class="line"><span class="number">2</span>    <span class="number">11</span></span><br><span class="line"><span class="number">3</span>     <span class="number">2</span></span><br><span class="line">Name: col1, dtype: int64</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df.col1</span><br><span class="line"><span class="number">0</span>     <span class="number">1</span></span><br><span class="line"><span class="number">1</span>     <span class="number">3</span></span><br><span class="line"><span class="number">2</span>    <span class="number">11</span></span><br><span class="line"><span class="number">3</span>     <span class="number">2</span></span><br><span class="line">Name: col1, dtype: int64</span><br></pre></td></tr></table></figure>
<h3 id="聚集和统计-1"><a href="#聚集和统计-1" class="headerlink" title="聚集和统计"></a>聚集和统计</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df = pd.DataFrame(&#123;<span class="string">'col1'</span>:[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],<span class="string">'col2'</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]&#125;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df</span><br><span class="line">   col1  col2</span><br><span class="line"><span class="number">0</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line"><span class="number">1</span>     <span class="number">1</span>     <span class="number">2</span></span><br><span class="line"><span class="number">2</span>     <span class="number">0</span>     <span class="number">3</span></span><br><span class="line"><span class="number">3</span>     <span class="number">0</span>     <span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>grp = df.groupby(<span class="string">'col1'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>grp.get_group(<span class="number">0</span>)</span><br><span class="line">   col1  col2</span><br><span class="line"><span class="number">2</span>     <span class="number">0</span>     <span class="number">3</span></span><br><span class="line"><span class="number">3</span>     <span class="number">0</span>     <span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>grp.get_group(<span class="number">1</span>)</span><br><span class="line">   col1  col2</span><br><span class="line"><span class="number">0</span>     <span class="number">1</span>     <span class="number">1</span></span><br><span class="line"><span class="number">1</span>     <span class="number">1</span>     <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>grp.sum()</span><br><span class="line">      col2</span><br><span class="line">col1</span><br><span class="line"><span class="number">0</span>        <span class="number">7</span></span><br><span class="line"><span class="number">1</span>        <span class="number">3</span></span><br></pre></td></tr></table></figure>
<h3 id="产生新列"><a href="#产生新列" class="headerlink" title="产生新列"></a>产生新列</h3><p>给一个不存在的列赋值，将会创建一个新的列。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>df[<span class="string">'sum_col'</span>]=df.eval(<span class="string">'col1+col2'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>df</span><br><span class="line">   col1  col2  sum_col</span><br><span class="line"><span class="number">0</span>     <span class="number">1</span>     <span class="number">1</span>        <span class="number">2</span></span><br><span class="line"><span class="number">1</span>     <span class="number">1</span>     <span class="number">2</span>        <span class="number">3</span></span><br><span class="line"><span class="number">2</span>     <span class="number">0</span>     <span class="number">3</span>        <span class="number">3</span></span><br><span class="line"><span class="number">3</span>     <span class="number">0</span>     <span class="number">4</span>        <span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>grp = df.groupby([<span class="string">'sum_col'</span>,<span class="string">'col1'</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>res = grp.sum()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>res</span><br><span class="line">              col2</span><br><span class="line">sum_col col1</span><br><span class="line"><span class="number">2</span>       <span class="number">1</span>        <span class="number">1</span></span><br><span class="line"><span class="number">3</span>       <span class="number">0</span>        <span class="number">3</span></span><br><span class="line">        <span class="number">1</span>        <span class="number">2</span></span><br><span class="line"><span class="number">4</span>       <span class="number">0</span>        <span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>res.unstack()</span><br><span class="line">        col2</span><br><span class="line">col1       <span class="number">0</span>    <span class="number">1</span></span><br><span class="line">sum_col</span><br><span class="line"><span class="number">2</span>        NaN  <span class="number">1.0</span></span><br><span class="line"><span class="number">3</span>        <span class="number">3.0</span>  <span class="number">2.0</span></span><br><span class="line"><span class="number">4</span>        <span class="number">4.0</span>  NaN</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Scipy学习(1)]]></title>
      <url>http://keyunluo.github.io/2016/07/19/2016-07-19-python-scipy.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>SciPy是另一种使用NumPy来做高等数学、信号处理、优化、统计和许多其它科学任务的语言扩展,SciPy在NumPy的基础上增加了众多的数学、科学以及工程计算中常用的模块。例如线性代数、常微分方程数值求解、信号处理、图像处理、稀疏矩阵等等,本节主要学习其统计和优化模块。</p>
</blockquote>
<a id="more"></a>
<h2 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h2><p>由于SciPy以NumPy为基础，那么import scipy的同时便import 了numpy库。</p>
<ul>
<li>统计子库-scipy.stats</li>
<li>线性代数-scipy.linalg</li>
<li>拟合与优化-scipy.optimize</li>
<li>插值-scipy.interpolate</li>
<li>数值积分-scipy.integate</li>
<li>稀疏矩阵-scipy.sparse</li>
<li>图像操作scipy.misc</li>
<li>图像处理-scipy.ndimage</li>
</ul>
<h2 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h2><p>scipy.stats的主要功能有以下几个方面：</p>
<ol>
<li>数值随机变量对象（包括密度分布函数，累积分布函数，样本函数等）</li>
<li>一些估计方法</li>
<li>一些测试方法</li>
</ol>
<ul>
<li>随机变量与分布:考虑$Beta$函数</li>
</ul>
<p>numpy 中提供了获取随机变量的样本的方法：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: np.random.beta(<span class="number">5</span>, <span class="number">5</span>, size=<span class="number">3</span>)</span><br><span class="line">Out[<span class="number">2</span>]: array([ <span class="number">0.6167565</span> ,  <span class="number">0.67994589</span>,  <span class="number">0.32346476</span>])</span><br></pre></td></tr></table></figure>
<p>但是np.random.beta(a,b)是根据下面的函数得到的：</p>
<p>$f(x;a,b)=\frac{x^{(a-1)}(1-x)^{(b-1)} }{\int_0^1 u^{(a-1)}u^{(b-1)} {\rm d}u} , (0 \le x \le 1)$</p>
<p>为了获取更多beta分布的特性，我们经常使用scipy.stats:
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> beta</span><br><span class="line"><span class="keyword">from</span> matplotlib.pyplot <span class="keyword">import</span> hist, plot, show</span><br><span class="line">q = beta(<span class="number">5</span>, <span class="number">5</span>)      <span class="comment"># Beta(a, b), with a = b = 5 q是一个对象</span></span><br><span class="line">obs = q.rvs(<span class="number">2000</span>)   <span class="comment"># 2000 observations 获得2000个样本</span></span><br><span class="line">hist(obs, bins=<span class="number">40</span>, normed=<span class="keyword">True</span>)</span><br><span class="line">grid = np.linspace(<span class="number">0.01</span>, <span class="number">0.99</span>, <span class="number">100</span>)</span><br><span class="line">plot(grid, q.pdf(grid), <span class="string">'k-'</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">show()</span><br></pre></td></tr></table></figure></p>
<p>结果如图：
<img src="/resource/blog/2016-07/beta.png" alt="beta分布特性"></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.cdf(<span class="number">0.4</span>)      <span class="comment"># Cumulative distribution function  累积密度函数</span></span><br><span class="line"><span class="number">0.26656768000000003</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.pdf(<span class="number">0.4</span>)      <span class="comment"># Density function   密度函数</span></span><br><span class="line"><span class="number">2.0901888000000013</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.ppf(<span class="number">0.8</span>)      <span class="comment"># Quantile (inverse cdf) function</span></span><br><span class="line"><span class="number">0.63391348346427079</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.mean()</span><br><span class="line"><span class="number">0.5</span></span><br></pre></td></tr></table></figure>
<ul>
<li>线性回归</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">19</span>]: <span class="keyword">from</span> scipy.stats <span class="keyword">import</span> linregress</span><br><span class="line"></span><br><span class="line">In [<span class="number">20</span>]: x = np.random.randn(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">21</span>]: y = <span class="number">2</span> * x + <span class="number">0.1</span> * np.random.randn(<span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">22</span>]: gradient, intercept, r_value, p_value, std_err = linregress(x, y)</span><br><span class="line"></span><br><span class="line">In [<span class="number">23</span>]: gradient, intercept</span><br><span class="line">Out[<span class="number">23</span>]: (<span class="number">1.9962554379482236</span>, <span class="number">0.008172822032671799</span>)</span><br></pre></td></tr></table></figure>
<h2 id="线性代数"><a href="#线性代数" class="headerlink" title="线性代数"></a>线性代数</h2><p>NumPy和SciPy都提供了线性代数函数库linalg，SciPy的线性代数库比NumPy更加全面。</p>
<ul>
<li>解线性方程组</li>
</ul>
<p><code>numpy.linalg.solve(A, b)</code>和<code>scipy.linalg.solve(A, b)</code>可以用来解线性方程组$Ax = b $，也就是计算$ x = A^{-1}b$ 。这里$A$为(M, M)的方形矩阵，$x$和$b$为长为M的向量。有时候$A$是固定的，需要对多组$b$进行求解，因此第二个参数也可以是(M, N)的矩阵$B$。这样计算出来的$X$也为(M, N)的矩阵。它相当于计算$A^{-1}B$。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> scipy <span class="keyword">import</span> linalg</span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>M, N = <span class="number">500</span>, <span class="number">50</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>A = np.random.rand(M, M)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>B = np.random.rand(M, N)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X1 = linalg.solve(A, B)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X2 = np.dot(linalg.inv(A), B)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.allclose(X1, X2)</span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></table></figure>
<p>lu_factor(A)对矩阵$A$进行LU分解，得到一个元组：(LU矩阵，排序数组)，将这个元组传递给lu_solve(),即可对不同的$B$进行求解。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>luf = linalg.lu_factor(A)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>X3 = linalg.lu_solve(luf, B)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.allclose(X1, X3)</span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></table></figure>
<ul>
<li>最小二乘解</li>
</ul>
<p>lstsq()比solve()更一般化，它不要求矩阵$A$是正方形的，也就是说方程的个数可以少于、等于或者多于未知数的个数。它找到一组解$x$，使得$\Vert b - A \cdot x \Vert$最小。我们称所得到的结果为最小二乘解，即它使得所有等式的误差的平方和最小。</p>
<ul>
<li>奇异值分解-SVD</li>
</ul>
<p>奇异值分解是线性代数中一种重要的矩阵分解，在信号处理、统计学等领域有重要应用。假设$M$是一个m×n阶矩阵，存在一个分解使得：$ M = U \sum V^{*} $。其中$U$是m×m阶矩阵；$ \sum $是半正定m×n阶对角矩阵；而$V^*$，即$V$的共轭转置，是n×n阶矩阵。这样的分解就称作$M$的奇异值分解。$ \sum $对角线上的元素为$M$的奇异值。通常奇异值按照从大到小的顺序排列。</p>
<h2 id="拟合与优化"><a href="#拟合与优化" class="headerlink" title="拟合与优化"></a>拟合与优化</h2><ul>
<li>求根与稳定点</li>
</ul>
<p>稳定点：已知连续函数$f(x)$ ,则函数$f(x)$的稳定点为$x_0$，使得条件$f(x_0) = x_0$成立。</p>
<p>例如：$f(x)=sin(4(x-\frac{1}{4})) + x + x^{20} -1$</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> bisect</span><br><span class="line">f =<span class="keyword">lambda</span> x : np.sin(<span class="number">4</span> * (x <span class="number">-0.25</span>)) + x + x**<span class="number">20</span> <span class="number">-1</span></span><br><span class="line">bisect(f,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"><span class="number">0.4082935042797544</span></span><br></pre></td></tr></table></figure>
<ul>
<li>非线性方程组求解</li>
</ul>
<p>fsolve()可以对非线性方程组进行求解。它的基本调用形式为fsolve(func, x0)。其中func是计算方程组误差的函数，它的参数x是一个数组，其值为方程组的一组可能的解。func返回将x代入方程组之后得到的每个方程的误差，x0为未知数的一组初始值。假设要对下面的方程组进行求解:
$$ f1(u1,u2,u3) = 0 ,f2(u1,u2,u3) = 0 , f3(u1,u2,u3) = 0 $$</p>
<p>那么func函数可以如下定义：
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(x)</span>:</span></span><br><span class="line">    u1,u2,u3 = x</span><br><span class="line">    <span class="keyword">return</span> [f1(u1,u2,u3), f2(u1,u2,u3), f3(u1,u2,u3)]</span><br></pre></td></tr></table></figure></p>
<p>例如：对下列方程组求解：
$$ 5x_1 +3 =0;4x_0^2 - 2sin(x_1x_2)=0;x_1x_2-1.5=0$$</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sin, cos</span><br><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> optimize</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span></span><br><span class="line">    x0, x1, x2 = x.tolist()</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="number">5</span>*x1+<span class="number">3</span>,</span><br><span class="line">        <span class="number">4</span>*x0*x0 - <span class="number">2</span>*sin(x1*x2),</span><br><span class="line">        x1*x2 - <span class="number">1.5</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># f计算方程组的误差，[1,1,1]是未知数的初始值</span></span><br><span class="line">result = optimize.fsolve(f, [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>])</span><br><span class="line">print(result)</span><br><span class="line">print(f(result))</span><br></pre></td></tr></table></figure>
<p>f()是计算方程组的误差的函数，x参数是一组可能的解。fsolve()在调用f()时，传递给f()的参数是一个数组。</p>
<p>调用fsolve()时，传递计算误差的函数f()，以及未知数的初始值。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Markdown中编写LaTex数学公式]]></title>
      <url>http://keyunluo.github.io/2016/07/19/2016-07-19-markdown-math.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>目前hexo中写博客使用Markdown语言，而写博客经常要用到一些数学公式，在Markdown中写LaTeX数学公式则显得非常重要，本节将一些常用的数学公式的写法记录下来，以备日后查询。</p>
</blockquote>
<a id="more"></a>
<hr>
<h2 id="LaTeX-基本语法"><a href="#LaTeX-基本语法" class="headerlink" title="$\LaTeX$基本语法"></a>$\LaTeX$基本语法</h2><ul>
<li><strong>使用LaTeX</strong></li>
</ul>
<p><code>$</code>符号开始</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$ y_k=<span class="tag">\<span class="name">varphi</span></span>(u_k+v_k)$</span></span><br><span class="line"><span class="formula">$J<span class="tag">\<span class="name">alpha</span></span>(x) = <span class="tag">\<span class="name">sum</span><span class="string">&#123;m=0&#125;</span></span>^<span class="tag">\<span class="name">infty</span></span> <span class="tag">\<span class="name">frac</span><span class="string">&#123;(-1)^m&#125;</span><span class="string">&#123;m! \Gamma (m + \alpha + 1)&#125;</span></span> &#123;<span class="tag">\<span class="name">left</span></span>(&#123; <span class="tag">\<span class="name">frac</span><span class="string">&#123;x&#125;</span><span class="string">&#123;2&#125;</span></span> &#125;<span class="tag">\<span class="name">right</span></span>)&#125;^&#123;2m + <span class="tag">\<span class="name">alpha</span></span>&#125;$</span></span><br><span class="line">#注意下面的写法：(右对齐)</span><br><span class="line"><span class="formula">$$ y_k=<span class="tag">\<span class="name">varphi</span></span>(u_k+v_k)$$</span></span><br></pre></td></tr></table></figure>
<p>则依次显示为：</p>
<p>$ y_k=\varphi(u_k+v_k)$</p>
<p>$J\alpha(x) = \sum{m=0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha}$</p>
<p>$$ y_k=\varphi(u_k+v_k)$$</p>
<ul>
<li><strong>输入上下标</strong></li>
</ul>
<p><code>^</code>表示上标, <code>_</code>表示下标。如果上下标的内容多于一个字符，要用<code>{}</code>把这些内容括起来当成一个整体。上下标是可以嵌套的，也可以同时使用。例如：
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$x^&#123;y^z&#125;=(1+&#123;<span class="tag">\<span class="name">rm</span></span> e&#125;^x)^&#123;-2xy^w&#125;$</span></span><br><span class="line"><span class="formula">$f(x)=x_2^3+1$</span></span><br><span class="line">#如果要在左右两边都有上下标，可以用<span class="tag">\<span class="name">sideset</span></span>命令:</span><br><span class="line"><span class="formula">$<span class="tag">\<span class="name">sideset</span><span class="string">&#123;^12&#125;</span><span class="string">&#123;^34&#125;</span></span><span class="tag">\<span class="name">bigotimes</span></span>$</span></span><br></pre></td></tr></table></figure></p>
<p>则显示如下：</p>
<p>$x^{y^z}=(1+{\rm e}^x)^{-2xy^w}$</p>
<p>$f(x)=x_2^3+1$</p>
<p>$\sideset{^12}{^34}\bigotimes$</p>
<ul>
<li><strong>输入括号和分隔符</strong></li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">()、[]和|表示自己，&#123;&#125;表示&#123;&#125;。当要显示大号的括号或分隔符时，要用<span class="tag">\<span class="name">left</span></span>和<span class="tag">\<span class="name">right</span></span>命令：</span><br><span class="line"><span class="formula">$f(x,y,z) = 3y^2z <span class="tag">\<span class="name">left</span></span>( 3+<span class="tag">\<span class="name">frac</span><span class="string">&#123;7x+5&#125;</span><span class="string">&#123;1+y^2&#125;</span></span> <span class="tag">\<span class="name">right</span></span>)$</span></span><br><span class="line">有时候要用<span class="tag">\<span class="name">left</span></span>.或<span class="tag">\<span class="name">right</span></span>.进行匹配而不显示本身：</span><br><span class="line"><span class="formula">$<span class="tag">\<span class="name">frac</span><span class="string">&#123;du&#125;</span><span class="string">&#123;dt&#125;</span></span>  <span class="tag">\<span class="name">|</span></span> _&#123;x=0&#125;$</span></span><br></pre></td></tr></table></figure>
<p>显示为：</p>
<p>$f(x,y,z) = 3y^2z \left( 3+\frac{7x+5}{1+y^2} \right)$</p>
<p>$\frac{du}{dt}  | _{x=0}$</p>
<ul>
<li><strong>微分方程</strong></li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$<span class="tag">\<span class="name">frac</span><span class="string">&#123;du&#125;</span><span class="string">&#123;dt&#125;</span></span> and <span class="tag">\<span class="name">frac</span><span class="string">&#123;d^2 u&#125;</span><span class="string">&#123;dx^2&#125;</span></span>$</span></span><br></pre></td></tr></table></figure>
<p>$\frac{du}{dt} and \frac{d^2 u}{dx^2}$</p>
<ul>
<li><strong>输入偏微分方程</strong></li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$</span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;eqnarray&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">frac</span><span class="string">&#123;\partial u&#125;</span><span class="string">&#123;\partial t&#125;</span></span> <span class="tag">\<span class="name">\</span></span><br><span class="line">= </span>h^2 <span class="tag">\<span class="name">left</span></span>( <span class="tag">\<span class="name">frac</span><span class="string">&#123;\partial^2 u&#125;</span><span class="string">&#123;\partial x^2&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line"><span class="tag">\<span class="name">+</span></span> <span class="tag">\<span class="name">frac</span><span class="string">&#123;\partial^2 u&#125;</span><span class="string">&#123;\partial y^2&#125;</span></span> <span class="tag">\<span class="name">\</span></span></span><br><span class="line"><span class="tag">\<span class="name">+</span></span> <span class="tag">\<span class="name">frac</span><span class="string">&#123;\partial^2 u&#125;</span><span class="string">&#123;\partial z^2&#125;</span></span><span class="tag">\<span class="name">right</span></span>)</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;eqnarray&#125;</span></span></span><br><span class="line">$$</span></span><br></pre></td></tr></table></figure>
<p>$$
\begin{eqnarray}
\frac{\partial u}{\partial t} \
= h^2 \left( \frac{\partial^2 u}{\partial x^2} \
+ \frac{\partial^2 u}{\partial y^2} \
+ \frac{\partial^2 u}{\partial z^2}\right)
\end{eqnarray}
$$</p>
<ul>
<li><strong>输入分数</strong></li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$<span class="tag">\<span class="name">frac</span><span class="string">&#123;1&#125;</span><span class="string">&#123;3&#125;</span></span>$</span></span><br><span class="line"><span class="formula">$P(v)=<span class="tag">\<span class="name">frac</span><span class="string">&#123;1&#125;</span><span class="string">&#123;1+exp(-v/T)&#125;</span></span>$</span></span><br></pre></td></tr></table></figure>
<p>  依次显示为：
  $\frac{1}{3}$</p>
<p>  $P(v)=\frac{1}{1+exp(-v/T)}$</p>
<ul>
<li><strong>输入开方</strong>
\sqrt</li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$<span class="tag">\<span class="name">sqrt</span><span class="string">&#123;2&#125;</span></span>$</span></span><br><span class="line"><span class="formula">$<span class="tag">\<span class="name">sqrt</span><span class="string">[n]</span><span class="string">&#123;3&#125;</span></span>$</span></span><br></pre></td></tr></table></figure>
<p>  $\sqrt{2}$</p>
<p>  $\sqrt[n]{3}$</p>
<ul>
<li><strong>输入省略号</strong>
数学公式中常见的省略号有两种，<strong>\ldots</strong>表示与文本底线对齐的省略号，<strong>\cdots</strong>表示与文本中线对齐的省略号。</li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$f(x_1,x_2,<span class="tag">\<span class="name">ldots</span></span>,x_n) = x_1^2 + x_2^2 + <span class="tag">\<span class="name">cdots</span></span> + x_n^2$</span></span><br></pre></td></tr></table></figure>
<p>   $f(x_1,x_2,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2$</p>
<ul>
<li><strong>输入向量</strong></li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$<span class="tag">\<span class="name">vec</span><span class="string">&#123;a&#125;</span></span> <span class="tag">\<span class="name">cdot</span></span> <span class="tag">\<span class="name">vec</span><span class="string">&#123;b&#125;</span>=<span class="number">0</span></span>$</span></span><br></pre></td></tr></table></figure>
<p>  $\vec{a} \cdot \vec{b}=0$</p>
<ul>
<li><strong>输入积分</strong></li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$<span class="tag">\<span class="name">int</span></span>_0^1 x^2 &#123;<span class="tag">\<span class="name">rm</span></span> d&#125;x$</span></span><br></pre></td></tr></table></figure>
<p>  $\int_0^1 x^2 {\rm d}x$</p>
<ul>
<li><strong>输入极限运算</strong></li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$<span class="tag">\<span class="name">lim</span></span>_&#123;n <span class="tag">\<span class="name">rightarrow</span></span> +<span class="tag">\<span class="name">infty</span></span>&#125; <span class="tag">\<span class="name">frac</span><span class="string">&#123;1&#125;</span><span class="string">&#123;n(n+1)&#125;</span></span>$</span></span><br><span class="line"><span class="formula">$<span class="tag">\<span class="name">frac</span><span class="string">&#123;1&#125;</span><span class="string">&#123;\lim_&#123;u \rightarrow \infty&#125;</span></span>&#125;, <span class="tag">\<span class="name">frac</span><span class="string">&#123;1&#125;</span><span class="string">&#123;\lim\limits_&#123;u \rightarrow \infty&#125;</span></span>&#125;$</span></span><br></pre></td></tr></table></figure>
<p>$\lim_{n \rightarrow +\infty} \frac{1}{n(n+1)}$</p>
<p>$\frac{1}{\lim_{u \rightarrow \infty}}$</p>
<p>$\frac{1}{\lim\limits_{u \rightarrow \infty}}$</p>
<ul>
<li><strong>输入累加、累乘运算</strong></li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$<span class="tag">\<span class="name">sum</span></span>_&#123;i=0&#125;^n <span class="tag">\<span class="name">frac</span><span class="string">&#123;1&#125;</span><span class="string">&#123;i^2&#125;</span></span>$</span></span><br><span class="line"><span class="formula">$<span class="tag">\<span class="name">prod</span></span>_&#123;i=0&#125;^n <span class="tag">\<span class="name">frac</span><span class="string">&#123;1&#125;</span><span class="string">&#123;i^2&#125;</span></span>$</span></span><br></pre></td></tr></table></figure>
<p> $\sum_{i=0}^n \frac{1}{i^2}$</p>
<p> $\prod_{i=0}^n \frac{1}{i^2}$</p>
<ul>
<li><strong>等效</strong></li>
</ul>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$</span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;equation&#125;</span></span></span><br><span class="line">$&#123;<span class="tag">\<span class="name">frac</span><span class="string">&#123;3&#125;</span><span class="string">&#123;5&#125;</span></span> [3 + 2*( a+ b)]&#125;$</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;equation&#125;</span></span></span><br><span class="line">$$</span></span><br><span class="line"></span><br><span class="line"><span class="formula">$$</span><br><span class="line">$&#123;<span class="tag">\<span class="name">frac</span><span class="string">&#123;3&#125;</span><span class="string">&#123;5&#125;</span></span> [3 + 2*( a+ b)]&#125;$</span><br><span class="line">$$</span></span><br></pre></td></tr></table></figure>
<p>${\frac{3}{5} [3 + 2*( a+ b)]}$</p>
<h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><table>
<thead>
<tr>
<th style="text-align:center">希腊字母(小写)</th>
<th style="text-align:left">输入</th>
<th style="text-align:center">希腊字母(大写)</th>
<th style="text-align:left">输入</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">α</td>
<td style="text-align:left">\alpha</td>
<td style="text-align:center">Α</td>
<td style="text-align:left">A</td>
</tr>
<tr>
<td style="text-align:center">β</td>
<td style="text-align:left">\beta</td>
<td style="text-align:center">Β</td>
<td style="text-align:left">B</td>
</tr>
<tr>
<td style="text-align:center">γ</td>
<td style="text-align:left">\gamma</td>
<td style="text-align:center">Γ</td>
<td style="text-align:left">\Gamma</td>
</tr>
<tr>
<td style="text-align:center">δ</td>
<td style="text-align:left">\delta</td>
<td style="text-align:center">Δ</td>
<td style="text-align:left">\Delta</td>
</tr>
<tr>
<td style="text-align:center">ε或$\epsilon$</td>
<td style="text-align:left">\epsilon或\varepsilon</td>
<td style="text-align:center">Ε</td>
<td style="text-align:left">E</td>
</tr>
<tr>
<td style="text-align:center">ζ</td>
<td style="text-align:left">\zeta</td>
<td style="text-align:center">Ζ</td>
<td style="text-align:left">Z</td>
</tr>
<tr>
<td style="text-align:center">η</td>
<td style="text-align:left">\eta</td>
<td style="text-align:center">Η</td>
<td style="text-align:left">H</td>
</tr>
<tr>
<td style="text-align:center">θ或$\vartheta$</td>
<td style="text-align:left">\theta或\vartheta</td>
<td style="text-align:center">Θ</td>
<td style="text-align:left">\Theta</td>
</tr>
<tr>
<td style="text-align:center">ι</td>
<td style="text-align:left">\iota　</td>
<td style="text-align:center">Ι</td>
<td style="text-align:left">I</td>
</tr>
<tr>
<td style="text-align:center">κ</td>
<td style="text-align:left">\kappa</td>
<td style="text-align:center">Κ</td>
<td style="text-align:left">K</td>
</tr>
<tr>
<td style="text-align:center">λ</td>
<td style="text-align:left">\lambda</td>
<td style="text-align:center">Λ</td>
<td style="text-align:left">\Lambda</td>
</tr>
<tr>
<td style="text-align:center">μ</td>
<td style="text-align:left">\mu</td>
<td style="text-align:center">Μ</td>
<td style="text-align:left">M</td>
</tr>
<tr>
<td style="text-align:center">ν</td>
<td style="text-align:left">\nu</td>
<td style="text-align:center">Ν</td>
<td style="text-align:left">N</td>
</tr>
<tr>
<td style="text-align:center">ξ</td>
<td style="text-align:left">\xi</td>
<td style="text-align:center">Ξ</td>
<td style="text-align:left">\Xi</td>
</tr>
<tr>
<td style="text-align:center">ο</td>
<td style="text-align:left">o</td>
<td style="text-align:center">Ο</td>
<td style="text-align:left">O</td>
</tr>
<tr>
<td style="text-align:center">π或$\varpi$</td>
<td style="text-align:left">\pi或\varpi</td>
<td style="text-align:center">Π</td>
<td style="text-align:left">\Pi</td>
</tr>
<tr>
<td style="text-align:center">ρ或$\varrho$</td>
<td style="text-align:left">\rho或\varrho</td>
<td style="text-align:center">Ρ</td>
<td style="text-align:left">P</td>
</tr>
<tr>
<td style="text-align:center">σ或$\varsigma$</td>
<td style="text-align:left">\sigma或\varsigma</td>
<td style="text-align:center">Σ</td>
<td style="text-align:left">\Sigma</td>
</tr>
<tr>
<td style="text-align:center">τ</td>
<td style="text-align:left">\tau</td>
<td style="text-align:center">Τ</td>
<td style="text-align:left">T</td>
</tr>
<tr>
<td style="text-align:center">υ</td>
<td style="text-align:left">\upsilon</td>
<td style="text-align:center">Υ</td>
<td style="text-align:left">\Upsilon</td>
</tr>
<tr>
<td style="text-align:center">φ或$\varphi$</td>
<td style="text-align:left">\phi或\varphi</td>
<td style="text-align:center">Φ</td>
<td style="text-align:left">\Phi　</td>
</tr>
<tr>
<td style="text-align:center">χ</td>
<td style="text-align:left">\chi</td>
<td style="text-align:center">Χ</td>
<td style="text-align:left">X</td>
</tr>
<tr>
<td style="text-align:center">ψ</td>
<td style="text-align:left">\psi</td>
<td style="text-align:center">Ψ</td>
<td style="text-align:left">\Psi</td>
</tr>
<tr>
<td style="text-align:center">ω</td>
<td style="text-align:left">\omega</td>
<td style="text-align:center">Ω</td>
<td style="text-align:left">\Omega</td>
</tr>
</tbody>
</table>
<h2 id="三角函数与逻辑数学字符"><a href="#三角函数与逻辑数学字符" class="headerlink" title="三角函数与逻辑数学字符"></a>三角函数与逻辑数学字符</h2><table>
<thead>
<tr>
<th style="text-align:center">数学字符</th>
<th style="text-align:center">输入</th>
<th style="text-align:center">数学字符</th>
<th style="text-align:center">输入</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">$\pm$</td>
<td style="text-align:center">\pm</td>
<td style="text-align:center">$\times$</td>
<td style="text-align:center">\times</td>
</tr>
<tr>
<td style="text-align:center">$\div$</td>
<td style="text-align:center">\div</td>
<td style="text-align:center">$\mid$</td>
<td style="text-align:center">\mid</td>
</tr>
<tr>
<td style="text-align:center">$\nmid$</td>
<td style="text-align:center">\nmid</td>
<td style="text-align:center">$\cdot$</td>
<td style="text-align:center">\cdot</td>
</tr>
<tr>
<td style="text-align:center">$\circ$</td>
<td style="text-align:center">\circ</td>
<td style="text-align:center">$\ast$</td>
<td style="text-align:center">\ast</td>
</tr>
<tr>
<td style="text-align:center">$\bigodot$</td>
<td style="text-align:center">\bigodot</td>
<td style="text-align:center">$\bigotimes$</td>
<td style="text-align:center">\bigotimes</td>
</tr>
<tr>
<td style="text-align:center">$\bigoplus$</td>
<td style="text-align:center">\bigoplus</td>
<td style="text-align:center">$\leq$</td>
<td style="text-align:center">\leq</td>
</tr>
<tr>
<td style="text-align:center">$\geq$</td>
<td style="text-align:center">\geq</td>
<td style="text-align:center">$\neq$</td>
<td style="text-align:center">\neq</td>
</tr>
<tr>
<td style="text-align:center">$\approx$</td>
<td style="text-align:center">\approx</td>
<td style="text-align:center">$\equiv$</td>
<td style="text-align:center">\equiv</td>
</tr>
<tr>
<td style="text-align:center">$\sum$</td>
<td style="text-align:center">\sum</td>
<td style="text-align:center">$\prod$</td>
<td style="text-align:center">\prod</td>
</tr>
<tr>
<td style="text-align:center">$\coprod$</td>
<td style="text-align:center">\coprod</td>
<td style="text-align:center">$\emptyset$</td>
<td style="text-align:center">\emptyset</td>
</tr>
<tr>
<td style="text-align:center">$\in$</td>
<td style="text-align:center">\in</td>
<td style="text-align:center">$\notin$</td>
<td style="text-align:center">\notin</td>
</tr>
<tr>
<td style="text-align:center">$\subset$</td>
<td style="text-align:center">\subset</td>
<td style="text-align:center">$\supset$</td>
<td style="text-align:center">\supset</td>
</tr>
<tr>
<td style="text-align:center">$\subseteq$</td>
<td style="text-align:center">\subseteq</td>
<td style="text-align:center">$\supseteq$</td>
<td style="text-align:center">\supseteq</td>
</tr>
<tr>
<td style="text-align:center">$\bigcap$</td>
<td style="text-align:center">\bigcap</td>
<td style="text-align:center">$\bigcup$</td>
<td style="text-align:center">\bigcup</td>
</tr>
<tr>
<td style="text-align:center">$\bigvee$</td>
<td style="text-align:center">\bigvee</td>
<td style="text-align:center">$\bigwedge$</td>
<td style="text-align:center">\bigwedge</td>
</tr>
<tr>
<td style="text-align:center">$\biguplus$</td>
<td style="text-align:center">\biguplus</td>
<td style="text-align:center">$\bigsqcup$</td>
<td style="text-align:center">\bigsqcup</td>
</tr>
<tr>
<td style="text-align:center">$\log$</td>
<td style="text-align:center">\log</td>
<td style="text-align:center">$\lg$</td>
<td style="text-align:center">\lg</td>
</tr>
<tr>
<td style="text-align:center">$\ln$</td>
<td style="text-align:center">\ln</td>
<td style="text-align:center">$\bot$</td>
<td style="text-align:center">\bot</td>
</tr>
<tr>
<td style="text-align:center">$\angle$</td>
<td style="text-align:center">\angle</td>
<td style="text-align:center">$30^\circ$</td>
<td style="text-align:center">30^\circ</td>
</tr>
<tr>
<td style="text-align:center">$\sin$</td>
<td style="text-align:center">\sin</td>
<td style="text-align:center">$\cos$</td>
<td style="text-align:center">\cos</td>
</tr>
<tr>
<td style="text-align:center">$\tan$</td>
<td style="text-align:center">\tan</td>
<td style="text-align:center">$\cot$</td>
<td style="text-align:center">\cot</td>
</tr>
<tr>
<td style="text-align:center">$\sec$</td>
<td style="text-align:center">\sec</td>
<td style="text-align:center">$\csc$</td>
<td style="text-align:center">\csc</td>
</tr>
<tr>
<td style="text-align:center">$\prime$</td>
<td style="text-align:center">\prime</td>
<td style="text-align:center">$\int$</td>
<td style="text-align:center">\int</td>
</tr>
<tr>
<td style="text-align:center">$\iint$</td>
<td style="text-align:center">\iint</td>
<td style="text-align:center">$\iiint$</td>
<td style="text-align:center">\iiint</td>
</tr>
<tr>
<td style="text-align:center">$\iiiint$</td>
<td style="text-align:center">\iiiint</td>
<td style="text-align:center">$\oint$</td>
<td style="text-align:center">\oint</td>
</tr>
<tr>
<td style="text-align:center">$\lim$</td>
<td style="text-align:center">\lim</td>
<td style="text-align:center">$\infty$</td>
<td style="text-align:center">\infty</td>
</tr>
<tr>
<td style="text-align:center">$\nabla$</td>
<td style="text-align:center">\nabla</td>
<td style="text-align:center">$\because$</td>
<td style="text-align:center">\because</td>
</tr>
<tr>
<td style="text-align:center">$\therefore$</td>
<td style="text-align:center">\therefore</td>
<td style="text-align:center">$\forall$</td>
<td style="text-align:center">\forall</td>
</tr>
<tr>
<td style="text-align:center">$\exists$</td>
<td style="text-align:center">\exists</td>
<td style="text-align:center">$\not=$</td>
<td style="text-align:center">\not=</td>
</tr>
<tr>
<td style="text-align:center">$\not&gt;$</td>
<td style="text-align:center">\not&gt;</td>
<td style="text-align:center">$\not\subset$</td>
<td style="text-align:center">\not\subset</td>
</tr>
<tr>
<td style="text-align:center">$\hat{y}$</td>
<td style="text-align:center">\hat{y}</td>
<td style="text-align:center">$\check{y}$</td>
<td style="text-align:center">\check{y}</td>
</tr>
<tr>
<td style="text-align:center">$\breve{y}$</td>
<td style="text-align:center">\breve{y}</td>
<td style="text-align:center">$\overline{a+b+c+d}$</td>
<td style="text-align:center">\overline{a+b+c+d}</td>
</tr>
<tr>
<td style="text-align:center">$\underline{a+b+c+d}$</td>
<td style="text-align:center">\underline{a+b+c+d}</td>
<td style="text-align:center">$\overbrace{a+\underbrace{b+c}{1.0}+d}^{2.0}$</td>
<td style="text-align:center">\overbrace{a+\underbrace{b+c}{1.0}+d}^{2.0}</td>
</tr>
<tr>
<td style="text-align:center">$\uparrow$</td>
<td style="text-align:center">\uparrow</td>
<td style="text-align:center">$\downarrow$</td>
<td style="text-align:center">\downarrow</td>
</tr>
<tr>
<td style="text-align:center">$\Uparrow$</td>
<td style="text-align:center">\Uparrow</td>
<td style="text-align:center">$\Downarrow$</td>
<td style="text-align:center">\Downarrow</td>
</tr>
<tr>
<td style="text-align:center">$\rightarrow$</td>
<td style="text-align:center">\rightarrow</td>
<td style="text-align:center">$\leftarrow$</td>
<td style="text-align:center">\leftarrow</td>
</tr>
<tr>
<td style="text-align:center">$\Rightarrow$</td>
<td style="text-align:center">\Rightarrow</td>
<td style="text-align:center">$\Leftarrow$</td>
<td style="text-align:center">\Leftarrow</td>
</tr>
<tr>
<td style="text-align:center">$\longrightarrow$</td>
<td style="text-align:center">\longrightarrow</td>
<td style="text-align:center">$\longleftarrow$</td>
<td style="text-align:center">\longleftarrow</td>
</tr>
<tr>
<td style="text-align:center">$\Longrightarrow$</td>
<td style="text-align:center">\Longrightarrow</td>
<td style="text-align:center">$\Longleftarrow$</td>
<td style="text-align:center">\Longleftarrow</td>
</tr>
<tr>
<td style="text-align:center">$\ $</td>
<td style="text-align:center">\空格</td>
<td style="text-align:center">#</td>
<td style="text-align:center">\#</td>
</tr>
</tbody>
</table>
<h2 id="字体转换"><a href="#字体转换" class="headerlink" title="字体转换"></a>字体转换</h2><p>要对公式的某一部分字符进行字体转换，可以用{\rm 需转换的部分字符}命令，其中\rm可以参照下表选择合适的字体。一般情况下，公式默认为意大利体。</p>
<p><code>\rm</code>　　罗马体</p>
<p><code>\it</code>　　意大利体</p>
<p><code>\bf</code>　　黑体　</p>
<p><code>\sf</code>　　等线体</p>
<p><code>\mit</code> 　数学斜体　</p>
<p><code>\tt</code>　打字机字体</p>
<p><code>\sc</code>　　小体大写字母</p>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$<span class="tag">\<span class="name">\</span></span>begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class="line">n &amp; <span class="tag">\<span class="name">text</span><span class="string">&#123;Left&#125;</span></span> &amp; <span class="tag">\<span class="name">text</span><span class="string">&#123;Center&#125;</span></span> &amp; <span class="tag">\<span class="name">text</span><span class="string">&#123;Right&#125;</span></span> <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line"><span class="tag">\<span class="name">hline</span></span></span><br><span class="line">1 &amp; 0.24 &amp; 1 &amp; 125 <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">2 &amp; -1 &amp; 189 &amp; -8 <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">3 &amp; -20 &amp; 2000 &amp; 1+10i <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line"><span class="tag">\<span class="name">\</span></span>end&#123;array&#125; $$</span></span><br></pre></td></tr></table></figure>
<p>$$\begin{array}{c|lcr}
n &amp; \text{Left} &amp; \text{Center} &amp; \text{Right} \\
\hline
1 &amp; 0.24 &amp; 1 &amp; 125 \\
2 &amp; -1 &amp; 189 &amp; -8 \\
3 &amp; -20 &amp; 2000 &amp; 1+10i \\
\end{array} $$</p>
<h2 id="花括号用法"><a href="#花括号用法" class="headerlink" title="花括号用法"></a>花括号用法</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$f(x)=</span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;cases&#125;</span></span></span><br><span class="line">0&amp; <span class="tag">\<span class="name">text</span><span class="string">&#123;x=0&#125;</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">1&amp; <span class="tag">\<span class="name">text</span><span class="string">&#123;x!=0&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;cases&#125;</span></span>$$</span></span><br></pre></td></tr></table></figure>
<p>$$
f(x)=
\begin{cases}
0&amp; \text{x=0}\\
1&amp; \text{x!=0}
\end{cases}
$$</p>
<h2 id="多行数学式对齐"><a href="#多行数学式对齐" class="headerlink" title="多行数学式对齐"></a>多行数学式对齐</h2><p><strong>利用&amp;符号来对齐，在每个等号前添加&amp;符号即可</strong></p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$<span class="tag">\<span class="name">begin</span><span class="string">&#123;array&#125;</span></span> &#123;lcl&#125;</span><br><span class="line"><span class="tag">\<span class="name">cos</span></span> 2<span class="tag">\<span class="name">theta</span></span> &amp; = &amp; <span class="tag">\<span class="name">cos</span></span>^2 <span class="tag">\<span class="name">theta</span></span> - <span class="tag">\<span class="name">sin</span></span>^2 <span class="tag">\<span class="name">theta</span></span> <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">             &amp; = &amp; 2 <span class="tag">\<span class="name">cos</span></span>^2 <span class="tag">\<span class="name">theta</span></span> - 1.</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;array&#125;</span></span>$$</span></span><br><span class="line"></span><br><span class="line"><span class="formula">$$<span class="tag">\<span class="name">begin</span><span class="string">&#123;array&#125;</span></span> &#123;lcl&#125;</span><br><span class="line">f(x) &amp; = &amp; (a+b)^2 <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">     &amp; = &amp; a^2+2ab+b^2</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;array&#125;</span></span>$$</span></span><br></pre></td></tr></table></figure>
<p>$$\begin{array} {lcl}
\cos 2\theta &amp; = &amp; \cos^2 \theta - \sin^2 \theta \\
             &amp; = &amp; 2 \cos^2 \theta - 1.
\end{array}$$</p>
<p>$$\begin{array} {lcl}
f(x) &amp; = &amp; (a+b)^2 \\
     &amp; = &amp; a^2+2ab+b^2
\end{array}$$</p>
<h2 id="矩阵与行列式"><a href="#矩阵与行列式" class="headerlink" title="矩阵与行列式"></a>矩阵与行列式</h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$</span><br><span class="line">matrix</span><br><span class="line">[ ( <span class="tag">\<span class="name">begin</span><span class="string">&#123;array&#125;</span><span class="string">&#123;ccc&#125;</span></span></span><br><span class="line">a &amp; b &amp; c <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">d &amp; e &amp; f <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">g &amp; h &amp; i <span class="tag">\<span class="name">end</span><span class="string">&#123;array&#125;</span></span> )]$$</span></span><br><span class="line"></span><br><span class="line"><span class="formula">$$</span><br><span class="line">[ <span class="tag">\<span class="name">chi</span></span>(<span class="tag">\<span class="name">lambda</span></span>) = <span class="tag">\<span class="name">left</span></span>| <span class="tag">\<span class="name">begin</span><span class="string">&#123;array&#125;</span><span class="string">&#123;ccc&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">lambda</span></span> - a &amp; -b &amp; -c <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">-d &amp; <span class="tag">\<span class="name">lambda</span></span> - e &amp; -f <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">-g &amp; -h &amp; <span class="tag">\<span class="name">lambda</span></span> - i <span class="tag">\<span class="name">end</span><span class="string">&#123;array&#125;</span></span> <span class="tag">\<span class="name">right</span></span>|.]</span><br><span class="line">$$</span></span><br><span class="line"></span><br><span class="line"><span class="formula">$$ <span class="tag">\<span class="name">left</span><span class="string">[</span><br><span class="line">      \begin&#123;array&#125;&#123;cc|c&#125;</span><br><span class="line">        1&amp;2&amp;3 \\\\</span><br><span class="line">        4&amp;5&amp;6</span><br><span class="line">      \end&#123;array&#125;</span><br><span class="line">    \right]</span></span></span><br><span class="line">$$</span></span><br></pre></td></tr></table></figure>
<p>$$
matrix
[ ( \begin{array}{ccc}
a &amp; b &amp; c \\
d &amp; e &amp; f \\
g &amp; h &amp; i \end{array} )]$$</p>
<p>$$
[ \chi(\lambda) = \left| \begin{array}{ccc}
\lambda - a &amp; -b &amp; -c \\
-d &amp; \lambda - e &amp; -f \\
-g &amp; -h &amp; \lambda - i \end{array} \right|.]
$$</p>
<p>$$ \left[
      \begin{array}{cc|c}
        1&amp;2&amp;3 \\
        4&amp;5&amp;6
      \end{array}
    \right]
$$</p>
<h2 id="括号的其他用法"><a href="#括号的其他用法" class="headerlink" title="括号的其他用法"></a>括号的其他用法</h2><table>
<thead>
<tr>
<th style="text-align:left">功能</th>
<th style="text-align:left">语法</th>
<th style="text-align:center">显示</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">圆括号，小括号</td>
<td style="text-align:left">\left( \frac{a}{b} \right)</td>
<td style="text-align:center">$\left( \frac{a}{b} \right)$</td>
</tr>
<tr>
<td style="text-align:left">方括号，中括号</td>
<td style="text-align:left">\left[ \frac{a}{b} \right]</td>
<td style="text-align:center">$$\left[ \frac{a}{b} \right]$$</td>
</tr>
<tr>
<td style="text-align:left">花括号，大括号</td>
<td style="text-align:left">\left{ \frac{a}{b}\right}</td>
<td style="text-align:center">$$\left\{ \frac{a}{b} \right\}$$</td>
</tr>
<tr>
<td style="text-align:left">角括号</td>
<td style="text-align:left">\left \langle \frac{a}{b} \right \rangle</td>
<td style="text-align:center">$\left \langle \frac{a}{b} \right \rangle$</td>
</tr>
<tr>
<td style="text-align:left">单竖线，绝对值</td>
<td style="text-align:left">\left\mid \frac{a}{b} \right\mid ,或\vert</td>
<td style="text-align:center">$\mid \frac{a}{b} \mid$</td>
</tr>
<tr>
<td style="text-align:left">双竖线，范式</td>
<td style="text-align:left">\Vert \frac{a}{b} \Vert</td>
<td style="text-align:center">$$\Vert \frac{a}{b} \Vert$$</td>
</tr>
<tr>
<td style="text-align:left">取整函数</td>
<td style="text-align:left">\left \lfloor \frac{a}{b} \right \rfloor</td>
<td style="text-align:center">$\left \lfloor \frac{a}{b} \right \rfloor$</td>
</tr>
<tr>
<td style="text-align:left">取顶函数</td>
<td style="text-align:left">\left \lceil \frac{c}{d} \right \rceil</td>
<td style="text-align:center">$\left \lceil \frac{c}{d} \right \rceil   $</td>
</tr>
<tr>
<td style="text-align:left">斜线与反斜线</td>
<td style="text-align:left">\left / \frac{a}{b} \right \backslash</td>
<td style="text-align:center">$\left / \frac{a}{b} \right \backslash$</td>
</tr>
<tr>
<td style="text-align:left">上下箭头</td>
<td style="text-align:left">\left \uparrow \frac{a}{b} \right \downarrow</td>
<td style="text-align:center">$\left \uparrow \frac{a}{b} \right \downarrow$</td>
</tr>
<tr>
<td style="text-align:left">混合括号1</td>
<td style="text-align:left">\left [ 0,1 \right )</td>
<td style="text-align:center">$\left [ 0,1 \right )$</td>
</tr>
<tr>
<td style="text-align:left">混合括号2</td>
<td style="text-align:left">\langle \psi  \mid</td>
<td style="text-align:center">$\langle \psi  \mid $</td>
</tr>
<tr>
<td style="text-align:left">单左括号</td>
<td style="text-align:left">\left { \frac{a}{b} \right .</td>
<td style="text-align:center">$$\left \{ \frac{a}{b} \right .$$</td>
</tr>
<tr>
<td style="text-align:left">单右括号</td>
<td style="text-align:left">\left . \frac{a}{b} \right }</td>
<td style="text-align:center">$$\left . \frac{a}{b} \right \}$$</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Matplotlib绘图基础]]></title>
      <url>http://keyunluo.github.io/2016/07/18/2016-07-18-python-matplotlib.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>Matplotlib 是python最著名的绘图库，它提供了一整套和matlab相似的命令API，十分适合交互式地进行制图。而且也可以方便地将它作为绘图控件，嵌入GUI应用程序中。。</p>
</blockquote>
<a id="more"></a>
<h2 id="简单绘图"><a href="#简单绘图" class="headerlink" title="简单绘图"></a>简单绘图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建多项式 1*x^2+0*x+0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func = np.poly1d(np.array([<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>]).astype(float))</span><br><span class="line"><span class="comment"># 一阶导数</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>func1 = func.deriv(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 在-10,10之间产生100个均匀分布的数值</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = np.linspace(<span class="number">-10</span>,<span class="number">10</span>,<span class="number">100</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y = func(x)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>y1 = func1(x)</span><br><span class="line"><span class="comment"># 绘制两条曲线 分别为红色r和蓝色b</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pyplot.plot(x,y,<span class="string">'r'</span>,x,y1,<span class="string">'b'</span>)</span><br><span class="line">[&lt;matplotlib.lines.Line2D object at <span class="number">0xb2eeefec</span>&gt;, &lt;matplotlib.lines.Line2D object at <span class="number">0xb2ef46ac</span>&gt;]</span><br><span class="line"><span class="comment"># 横轴标签</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pyplot.xlabel(<span class="string">'x'</span>)</span><br><span class="line">&lt;matplotlib.text.Text object at <span class="number">0xb2f37e4c</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pyplot.ylabel(<span class="string">'y'</span>)</span><br><span class="line">&lt;matplotlib.text.Text object at <span class="number">0xb3083c8c</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pyplot.show()</span><br></pre></td></tr></table></figure>
<p>生成如下图像:
<img src="/resource/blog/2016-07/简单绘图.png" alt="简单绘图"></p>
<h2 id="子图"><a href="#子图" class="headerlink" title="子图"></a>子图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">func = np.poly1d(np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]).astype(float))</span><br><span class="line">x = np.linspace(<span class="number">-10</span>,<span class="number">10</span>,<span class="number">100</span>)</span><br><span class="line">y = func(x)</span><br><span class="line">func1 = func.deriv(<span class="number">1</span>)</span><br><span class="line">y1 = func1(x)</span><br><span class="line">func2 = func.deriv(<span class="number">2</span>)</span><br><span class="line">y2 = func2(x)</span><br><span class="line"><span class="comment"># subplot()创建子图，第一个参数为子图的行数，第二个参数是子图的列数，第三个参数是序号</span></span><br><span class="line">pyplot.subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">pyplot.plot(x,y,<span class="string">'r'</span>)</span><br><span class="line"><span class="comment"># 子图标题</span></span><br><span class="line">pyplot.title(<span class="string">'Polynomail'</span>)</span><br><span class="line"></span><br><span class="line">pyplot.subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line">pyplot.plot(x,y1,<span class="string">'b'</span>)</span><br><span class="line">pyplot.title(<span class="string">'Firse Derivative'</span>)</span><br><span class="line"></span><br><span class="line">pyplot.subplot(<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line">pyplot.plot(x,y2,<span class="string">'y'</span>)</span><br><span class="line">pyplot.title(<span class="string">'Second Derivative'</span>)</span><br><span class="line"></span><br><span class="line">pyplot.xlabel(<span class="string">'x'</span>)</span><br><span class="line">pyplot.ylabel(<span class="string">'y'</span>)</span><br><span class="line"></span><br><span class="line">pyplot.show()</span><br></pre></td></tr></table></figure>
<p>生成如下图像：
<img src="/resource/blog/2016-07/子图.png" alt="绘制子图"></p>
<h2 id="绘制3维图像"><a href="#绘制3维图像" class="headerlink" title="绘制3维图像"></a>绘制3维图像</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> cm</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,projection=<span class="string">'3d'</span>)</span><br><span class="line">u = linspace(<span class="number">-1</span>,<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line"><span class="comment"># 创建2维坐标网络</span></span><br><span class="line">x,y = meshgrid(u,u)</span><br><span class="line">z = x**<span class="number">2</span>+y**<span class="number">2</span></span><br><span class="line"><span class="comment"># 指定行和列的步长，并指定颜色</span></span><br><span class="line">ax.plot_surface(x,y,z,rstride=<span class="number">4</span>,cstride=<span class="number">4</span>,cmap=cm.binary_r)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>生成如下图像:
<img src="/resource/blog/2016-07/三维图像.png" alt="三维图像"></p>
<h2 id="绘制等高线图"><a href="#绘制等高线图" class="headerlink" title="绘制等高线图"></a>绘制等高线图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> cm</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line">fig = plt.figure()</span><br><span class="line"><span class="comment"># 这里不需要指定三维参数 projection='3d'</span></span><br><span class="line">ax = fig.add_subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">u = linspace(<span class="number">-1</span>,<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line">x,y = meshgrid(u,u)</span><br><span class="line">z = x**<span class="number">2</span>+y**<span class="number">2</span></span><br><span class="line">ax.contourf(x,y,z)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>生成如下图像:
<img src="/resource/blog/2016-07/等高线图.png" alt="等高线图"></p>
<h2 id="绘制动画"><a href="#绘制动画" class="headerlink" title="绘制动画"></a>绘制动画</h2><p>首先新建了图片、坐标和一条空白的线作为全局变量。然后init方法是一个初始化的方法，什么都不干。animate方法中的参数i表示当前帧数，通过正弦函数接受i生成了坐标集合，并且更新到线条中去。接下来新建了anim对象，几个参数的名称都很好懂，最后一个blit方法是告诉matplotlib记得在每帧之前擦除init方法返回的那些图元。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> animation</span><br><span class="line"></span><br><span class="line"><span class="comment"># first set up the figure, the axis, and the plot element we want to animate</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = plt.axes(xlim=(<span class="number">0</span>, <span class="number">2</span>), ylim=(<span class="number">-2</span>, <span class="number">2</span>))</span><br><span class="line">line, = ax.plot([], [], lw=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># initialization function: plot the background of each frame</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">()</span>:</span></span><br><span class="line">    line.set_data([], [])</span><br><span class="line">    <span class="keyword">return</span> line,</span><br><span class="line"></span><br><span class="line"><span class="comment"># animation function.  this is called sequentially</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">animate</span><span class="params">(i)</span>:</span></span><br><span class="line">    x = np.linspace(<span class="number">0</span>, <span class="number">2</span>, <span class="number">1000</span>)</span><br><span class="line">    y = np.sin(<span class="number">2</span> * np.pi * (x - <span class="number">0.01</span> * i))</span><br><span class="line">    line.set_data(x, y)</span><br><span class="line">    <span class="keyword">return</span> line,</span><br><span class="line"></span><br><span class="line"><span class="comment"># call the animator.  blit=true means only re-draw the parts that have changed.</span></span><br><span class="line">anim = animation.FuncAnimation(fig, animate, init_func=init,</span><br><span class="line">                               frames=<span class="number">200</span>, interval=<span class="number">20</span>, blit=<span class="keyword">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>生成如下图像:
<img src="/resource/blog/2016-07/animation.gif" alt="动画"></p>
<h2 id="导出GIF"><a href="#导出GIF" class="headerlink" title="导出GIF"></a>导出GIF</h2><ul>
<li>安装ImageMagick</li>
<li><p>配置matplotlib</p>
<p>先看看自己的配置文件放在了哪里：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line">matplotlib.matplotlib_fname()</span><br><span class="line"><span class="string">'/usr/local/anaconda3/lib/python3.5/site-packages/matplotlib/mpl-data/matplotlibrc'</span></span><br></pre></td></tr></table></figure>
<p>取消“animation.convert_path”前面的注释，这样应该就配置好了，接下来用一句话就可以导出gif：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anim.save(<span class="string">'perceptron.gif'</span>, fps=<span class="number">2</span>, writer=<span class="string">'imagemagick'</span>)</span><br></pre></td></tr></table></figure>
<p>但是，出现了错误：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UserWarning: imagemagick MovieWriter unavailable</span><br><span class="line">warnings.warn (<span class="string">"% s MovieWriter unavailable"</span> writer%)</span><br></pre></td></tr></table></figure>
<p>此时，需要打开matplotlib的安装目录<code>/usr/local/anaconda3/lib/python3.5/site-packages/matplotlib/__init__.py</code>，在1131行<code>rcParams = rc_params()</code>下面添加一句：<code>rcParams[&#39;animation.convert_path&#39;] = &#39;/usr/bin/convert&#39;</code>，这样就好了。</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Numpy中的矩阵]]></title>
      <url>http://keyunluo.github.io/2016/07/18/2016-07-18-python-numpy-matrix.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录Numpy的矩阵一般用法，主要学习numpy在线性代数中的应用。</p>
</blockquote>
<a id="more"></a>
<h2 id="创建矩阵"><a href="#创建矩阵" class="headerlink" title="创建矩阵"></a>创建矩阵</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 行与行之间用分号隔开，行内的元素之间用空格隔开</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = np.mat(<span class="string">'1 2 3;4 5 6;7 8 9'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m</span><br><span class="line">matrix([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">        [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">        [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]])</span><br></pre></td></tr></table></figure>
<h2 id="矩阵转置"><a href="#矩阵转置" class="headerlink" title="矩阵转置"></a>矩阵转置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 transpose 来获取转置矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.transpose(m)</span><br><span class="line">matrix([[<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>],</span><br><span class="line">        [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>],</span><br><span class="line">        [<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>]])</span><br><span class="line"><span class="comment"># 使用 T 属性获取转置矩阵</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.T</span><br><span class="line">matrix([[<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>],</span><br><span class="line">        [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>],</span><br><span class="line">        [<span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>]])</span><br></pre></td></tr></table></figure>
<h2 id="逆矩阵"><a href="#逆矩阵" class="headerlink" title="逆矩阵"></a>逆矩阵</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># inv</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = np.matrix(<span class="string">'1 1 2;-1 2 0;1 1 3'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.linalg.inv(m)</span><br><span class="line">matrix([[ <span class="number">2.</span>        , <span class="number">-0.33333333</span>, <span class="number">-1.33333333</span>],</span><br><span class="line">        [ <span class="number">1.</span>        ,  <span class="number">0.33333333</span>, <span class="number">-0.66666667</span>],</span><br><span class="line">        [<span class="number">-1.</span>        ,  <span class="number">0.</span>        ,  <span class="number">1.</span>        ]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># I</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = np.matrix(<span class="string">'1 1 2;-1 2 0;1 1 3'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.I</span><br><span class="line">matrix([[ <span class="number">2.</span>        , <span class="number">-0.33333333</span>, <span class="number">-1.33333333</span>],</span><br><span class="line">        [ <span class="number">1.</span>        ,  <span class="number">0.33333333</span>, <span class="number">-0.66666667</span>],</span><br><span class="line">        [<span class="number">-1.</span>        ,  <span class="number">0.</span>        ,  <span class="number">1.</span>        ]])</span><br></pre></td></tr></table></figure>
<h2 id="分块矩阵"><a href="#分块矩阵" class="headerlink" title="分块矩阵"></a>分块矩阵</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = np.eye(<span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a * <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.bmat(<span class="string">'a b;a b'</span>)</span><br><span class="line">matrix([[ <span class="number">1.</span>,  <span class="number">0.</span>,  <span class="number">2.</span>,  <span class="number">0.</span>],</span><br><span class="line">        [ <span class="number">0.</span>,  <span class="number">1.</span>,  <span class="number">0.</span>,  <span class="number">2.</span>],</span><br><span class="line">        [ <span class="number">1.</span>,  <span class="number">0.</span>,  <span class="number">2.</span>,  <span class="number">0.</span>],</span><br><span class="line">        [ <span class="number">0.</span>,  <span class="number">1.</span>,  <span class="number">0.</span>,  <span class="number">2.</span>]])</span><br></pre></td></tr></table></figure>
<h2 id="线性代数-numpy-linalg模块包含线性代数函数"><a href="#线性代数-numpy-linalg模块包含线性代数函数" class="headerlink" title="线性代数:numpy.linalg模块包含线性代数函数"></a>线性代数:numpy.linalg模块包含线性代数函数</h2><ul>
<li>常用 numpy.linglg 函数</li>
</ul>
<table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>diag</td>
<td>返回一个方阵的对角线（或非对角线）元素为一个一维数组，或者转换一个一维数组到一个方阵（非对角线元素为零）</td>
</tr>
<tr>
<td>dot</td>
<td>矩阵乘积</td>
</tr>
<tr>
<td>trace</td>
<td>计算对角线上元素的和</td>
</tr>
<tr>
<td>det</td>
<td>计算矩阵行列式</td>
</tr>
<tr>
<td>eig</td>
<td>计算方阵的特征值和特征向量</td>
</tr>
<tr>
<td>inv</td>
<td>计算方阵的逆</td>
</tr>
<tr>
<td>pinv</td>
<td>计算方阵 Moore-Penrose pseudo-inverse 的转置</td>
</tr>
<tr>
<td>qr</td>
<td>计算 QR 分解</td>
</tr>
<tr>
<td>svd</td>
<td>计算奇异值分解（SVD）</td>
</tr>
<tr>
<td>solve</td>
<td>求解线性系统方程 Ax = b 的x，其中A是一个方阵</td>
</tr>
<tr>
<td>lstsq</td>
<td>计算 y = Xb 的最小二乘解</td>
</tr>
</tbody>
</table>
<ul>
<li>求解 $Ax=b$ 的线性方程组</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1x-2y+z=0</span></span><br><span class="line"><span class="comment"># 2y-8z=8</span></span><br><span class="line"><span class="comment"># -4x+5y+9z=-9</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>A = np.mat(<span class="string">'1 -2 1;0 2 -8;-4 5 9'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = np.array([<span class="number">0</span>,<span class="number">8</span>,<span class="number">-9</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>x = np.linalg.solve(A,b)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(x)</span><br><span class="line">[ <span class="number">29.</span>  <span class="number">16.</span>   <span class="number">3.</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(np.dot(A,x))</span><br><span class="line">[[ <span class="number">0.</span>  <span class="number">8.</span> <span class="number">-9.</span>]]</span><br></pre></td></tr></table></figure>
<ul>
<li>特征值和特征向量</li>
</ul>
<p>设$A$为$n$阶矩阵，若存在常数$λ$及$n$维非零向量$x$，使得$Ax=λx$，则称$λ$是矩阵$A$的特征值，$x$是$A$属于特征值$λ$的特征向量。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a =np.matrix(<span class="string">'-1 1 0;-4 3 0;1 0 2'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># eigvals()返回特征值</span></span><br><span class="line"><span class="meta">... </span>np.linalg.eigvals(a)</span><br><span class="line">array([ <span class="number">2.</span>,  <span class="number">1.</span>,  <span class="number">1.</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># eig()返回一个元组,第一项为特征值，第二项为对应的特征向量(按列排放)</span></span><br><span class="line"><span class="meta">... </span>np.linalg.eig(a)</span><br><span class="line">(array([ <span class="number">2.</span>,  <span class="number">1.</span>,  <span class="number">1.</span>]), matrix([[ <span class="number">0.</span>        ,  <span class="number">0.40824829</span>,  <span class="number">0.40824829</span>],</span><br><span class="line">        [ <span class="number">0.</span>        ,  <span class="number">0.81649658</span>,  <span class="number">0.81649658</span>],</span><br><span class="line">        [ <span class="number">1.</span>        , <span class="number">-0.40824829</span>, <span class="number">-0.40824829</span>]]))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment">#2  [0,0,1]</span></span><br><span class="line"><span class="meta">... </span><span class="comment">#1  [0.40824829,0.81649658,-0.40824829]</span></span><br><span class="line"><span class="meta">... </span><span class="comment">#验证</span></span><br><span class="line"><span class="meta">... </span>np.dot(a,[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">matrix([[<span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.dot(<span class="number">2</span>,[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">array([<span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.dot(a,[<span class="number">0.40824829</span>,<span class="number">0.81649658</span>,<span class="number">-0.40824829</span>])</span><br><span class="line">matrix([[ <span class="number">0.40824829</span>,  <span class="number">0.81649658</span>, <span class="number">-0.40824829</span>]])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.dot(<span class="number">1</span>,[<span class="number">0.40824829</span>,<span class="number">0.81649658</span>,<span class="number">-0.40824829</span>])</span><br><span class="line">array([ <span class="number">0.40824829</span>,  <span class="number">0.81649658</span>, <span class="number">-0.40824829</span>])</span><br></pre></td></tr></table></figure>
<ul>
<li>奇异值分解</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = np.matrix(<span class="string">'4 11 14;8 7 -2'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>U,Sigma,V = np.linalg.svd(m)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(Sigma)</span><br><span class="line">[ <span class="number">18.97366596</span>   <span class="number">9.48683298</span>]</span><br></pre></td></tr></table></figure>
<ul>
<li>广义逆矩阵: 摩尔－彭若斯广义逆</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = np.matrix(<span class="string">'4 11 14;8 7 -2'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>n = np.linalg.pinv(m)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(m*n)</span><br><span class="line">[[  <span class="number">1.00000000e+00</span>  <span class="number">-5.41233725e-16</span>]</span><br><span class="line"> [ <span class="number">-8.32667268e-17</span>   <span class="number">1.00000000e+00</span>]]</span><br><span class="line"><span class="comment">#近似单位阵</span></span><br></pre></td></tr></table></figure>
<ul>
<li>行列式计算</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = np.matrix(<span class="string">'4 6;8 2'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.linalg.det(m)</span><br><span class="line"><span class="number">-40.0</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python Numpy中的数组]]></title>
      <url>http://keyunluo.github.io/2016/07/18/2016-07-18-python-numpy-array.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>NumPy 是 Numerical Python 的简称，是高性能计算和数据分析的基础包。本篇博文记录Numpy的数组一般用法，主要学习多维数组等用法。</p>
</blockquote>
<a id="more"></a>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Numpy是Python的一个科学计算的库，提供了矩阵运算的功能，其一般与Scipy、matplotlib一起使用。</p>
<p>NumPy的主要对象是同类型的多维数组。这种数组里面包含了一个表格的元素（通常是数字），所有的元素为同一个类型。由一个正整数组成的元组来索引。在NumPy中维度被称为<code>axes</code>(轴)，轴的数目被称为<code>rank</code>(秩)。</p>
<p>Numpy的主要作用如下：</p>
<ul>
<li>ndarray，快速和节省空间的多维数组，提供数组化的算术运算和高级的 广播 功能。</li>
<li>使用标准数学函数对整个数组的数据进行快速运算，而不需要编写循环。</li>
<li>读取/写入磁盘上的阵列数据和操作存储器映像文件的工具。</li>
<li>线性代数，随机数生成，和傅里叶变换的能力。</li>
<li>集成C，C++，Fortran代码的工具。</li>
</ul>
<p>从生态系统的角度看，最后一点是最为重要的。因为NumPy 提供了易用的<code>C API</code>，它可以很容易的将数据传递到使用低级语言编写的外部库，也可以使外部库返回NumPy数组数据到Python。 这一特性使得Python成为包装传统的C/C++/Fortran代码库，并给它们一个动态的、易于使用的接口的首选语言。</p>
<h2 id="多维数组对象"><a href="#多维数组对象" class="headerlink" title="多维数组对象"></a>多维数组对象</h2><p>在<code>NumPy</code>中表示数组的类为<code>ndarray</code>，别名就是array，注意，这里的<code>numpy.array</code>不同于Python标准库中的类<code>array.array</code>（这个数组只维护了一维的数组，仅仅提供了很少的函数方法）。下面是<code>ndarray</code>的重要属性：</p>
<ol>
<li><p><code>ndarray.ndim</code>
在ndarray数组中轴（维度）的数量。在Python的世界里，维度的数量又叫做rank。</p>
</li>
<li><p><code>ndarray.shape</code>
在ndarray中数组的形状，这是一个由正整数组成的元组来代表数组中每一个维度的大小。对于一个n*m的矩阵，shape就是(n,m)，因此，shape元组的长度代表的就是维度也就是ndim。</p>
</li>
<li><p><code>ndarray.size</code>
在ndarray数组中所有元素的数量，这个等于shape元组中相乘的数量。</p>
</li>
<li><p><code>ndarray.dtype</code>
描述数组中的元素的类型的对象。人们可以创建类型或者使用python标准库中的类型来指定dtype。另外，NumPy也提供了它自己的类型，比如numpy.int32,numpy.int16,numpy.float64等。</p>
</li>
<li><p><code>ndarray.itemsize</code>
描述数组中元素所占内存bytes的大小。举个例子，元素的类型为float64，那么itemsize就是8。这个值相当于ndarray.dtype.itemsize。</p>
</li>
<li><p><code>ndarray.data</code>
含有数组中实际元素的缓冲器（the buffer containing the actual elements of the array）。通常情况下，我们并不需要使用这个属性，因为我们将使用索引访问数组中的元素。</p>
</li>
</ol>
<p>例如如下操作：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: a = np.arange(<span class="number">15</span>).reshape(<span class="number">3</span>,<span class="number">5</span>)</span><br><span class="line">   ...:</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: a</span><br><span class="line">Out[<span class="number">3</span>]:</span><br><span class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>],</span><br><span class="line">       [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>],</span><br><span class="line">       [<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: a.shape</span><br><span class="line">Out[<span class="number">4</span>]: (<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: a.ndim</span><br><span class="line">Out[<span class="number">5</span>]: <span class="number">2</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: a.dtype.name</span><br><span class="line">Out[<span class="number">6</span>]: <span class="string">'int64'</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: a.itemsize</span><br><span class="line">Out[<span class="number">7</span>]: <span class="number">8</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: a.size</span><br><span class="line">Out[<span class="number">8</span>]: <span class="number">15</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">9</span>]: type(a)</span><br><span class="line">Out[<span class="number">9</span>]: numpy.ndarray</span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: b = np.array([<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">11</span>]: b</span><br><span class="line">Out[<span class="number">11</span>]: array([<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">12</span>]: type(b)</span><br><span class="line">Out[<span class="number">12</span>]: numpy.ndarray</span><br></pre></td></tr></table></figure>
<h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><ul>
<li><p>使用<code>numpy.array</code>方法，以<code>list</code>或<code>tuple</code>变量为参数:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">13</span>]: c = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">14</span>]: d = np.array((<span class="number">1.2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">In [<span class="number">15</span>]: e = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">16</span>]: print(c,d,e,sep=<span class="string">'\n'</span>)</span><br><span class="line">[<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">5</span>]</span><br><span class="line">[ <span class="number">1.2</span>  <span class="number">3.</span>   <span class="number">4.</span>   <span class="number">5.</span> ]</span><br><span class="line">[[<span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">3</span> <span class="number">4</span>]</span><br><span class="line"> [<span class="number">5</span> <span class="number">6</span>]]</span><br></pre></td></tr></table></figure>
<p>元素的类型也可以在创建数组的时候明确的指定：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">17</span>]: print(np.array([[<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>],[<span class="number">8</span>,<span class="number">10</span>,<span class="number">12</span>]],dtype=complex))</span><br><span class="line">[[  <span class="number">2.</span>+<span class="number">0.j</span>   <span class="number">4.</span>+<span class="number">0.j</span>   <span class="number">6.</span>+<span class="number">0.j</span>]</span><br><span class="line"> [  <span class="number">8.</span>+<span class="number">0.j</span>  <span class="number">10.</span>+<span class="number">0.j</span>  <span class="number">12.</span>+<span class="number">0.j</span>]]</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用numpy.arange方法：产生连续的序列</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">18</span>]: print(np.arange(<span class="number">2</span>,<span class="number">20</span>))</span><br><span class="line">[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">19</span>]: print(np.arange(<span class="number">2</span>,<span class="number">20</span>).reshape(<span class="number">3</span>,<span class="number">6</span>))</span><br><span class="line">[[ <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>]</span><br><span class="line"> [ <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span>]</span><br><span class="line"> [<span class="number">14</span> <span class="number">15</span> <span class="number">16</span> <span class="number">17</span> <span class="number">18</span> <span class="number">19</span>]]</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用numpy.linspace方法
：指定起点(包括)，终点(不包括),数据个数。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">20</span>]: print(np.linspace(<span class="number">1</span>,<span class="number">5</span>,<span class="number">10</span>))</span><br><span class="line">[ <span class="number">1.</span>          <span class="number">1.44444444</span>  <span class="number">1.88888889</span>  <span class="number">2.33333333</span>  <span class="number">2.77777778</span>  <span class="number">3.22222222</span></span><br><span class="line">  <span class="number">3.66666667</span>  <span class="number">4.11111111</span>  <span class="number">4.55555556</span>  <span class="number">5.</span>        ]</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用numpy.zeros，numpy.ones，numpy.eye等方法构造特定的矩阵</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">21</span>]: print(np.zeros((<span class="number">3</span>,<span class="number">4</span>)))</span><br><span class="line">[[ <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>]</span><br><span class="line"> [ <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>]</span><br><span class="line"> [ <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">0.</span>]]</span><br><span class="line"></span><br><span class="line">In [<span class="number">22</span>]: print(np.ones((<span class="number">3</span>,<span class="number">4</span>)))</span><br><span class="line">[[ <span class="number">1.</span>  <span class="number">1.</span>  <span class="number">1.</span>  <span class="number">1.</span>]</span><br><span class="line"> [ <span class="number">1.</span>  <span class="number">1.</span>  <span class="number">1.</span>  <span class="number">1.</span>]</span><br><span class="line"> [ <span class="number">1.</span>  <span class="number">1.</span>  <span class="number">1.</span>  <span class="number">1.</span>]]</span><br><span class="line"></span><br><span class="line">In [<span class="number">23</span>]: print(np.eye(<span class="number">3</span>))</span><br><span class="line">[[ <span class="number">1.</span>  <span class="number">0.</span>  <span class="number">0.</span>]</span><br><span class="line"> [ <span class="number">0.</span>  <span class="number">1.</span>  <span class="number">0.</span>]</span><br><span class="line"> [ <span class="number">0.</span>  <span class="number">0.</span>  <span class="number">1.</span>]]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>用于构建数组的标准函数的清单</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>array</td>
<td>转换输入数据（列表，数组或其它序列类型）到一个ndarray，可以推断一个dtype或明确的设置一个dtype。默认拷贝输入数据。</td>
</tr>
<tr>
<td>asarray</td>
<td>转换输入为一个ndarray，当输入已经是一个ndarray时就不拷贝。</td>
</tr>
<tr>
<td>arange</td>
<td>同内建的range函数，但不返回列表而是一个ndarray</td>
</tr>
<tr>
<td>ones, ones_like</td>
<td>根据提供的shape和dtype产生一个全1的数组。ones_like使用另一个数组为输入参数，产生一个shape和dtype都相同的数组。</td>
</tr>
<tr>
<td>zeros, zeros_like</td>
<td>同ones和ones_like，但是生成全0的数组</td>
</tr>
<tr>
<td>empty, enpty_like</td>
<td>通过分配新内存来构造新的数组，但不同与ones 和 zeros，不初始任何值。</td>
</tr>
<tr>
<td>eye, identity</td>
<td>生成一个NxN的单位方阵（对角线上为1，其它地方为0）</td>
</tr>
</tbody>
</table>
<h2 id="数组和纯量之间的操作"><a href="#数组和纯量之间的操作" class="headerlink" title="数组和纯量之间的操作"></a>数组和纯量之间的操作</h2><p>相同大小的数组间的算术运算，其操作作用在对应的元素上</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">24</span>]: e</span><br><span class="line">Out[<span class="number">24</span>]:</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">       [<span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">25</span>]: e*e</span><br><span class="line">Out[<span class="number">25</span>]:</span><br><span class="line">array([[ <span class="number">1</span>,  <span class="number">4</span>],</span><br><span class="line">       [ <span class="number">9</span>, <span class="number">16</span>],</span><br><span class="line">       [<span class="number">25</span>, <span class="number">36</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">26</span>]: <span class="number">1.5</span>*e</span><br><span class="line">Out[<span class="number">26</span>]:</span><br><span class="line">array([[ <span class="number">1.5</span>,  <span class="number">3.</span> ],</span><br><span class="line">       [ <span class="number">4.5</span>,  <span class="number">6.</span> ],</span><br><span class="line">       [ <span class="number">7.5</span>,  <span class="number">9.</span> ]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">27</span>]: e**<span class="number">0.5</span></span><br><span class="line">Out[<span class="number">27</span>]:</span><br><span class="line">array([[ <span class="number">1.</span>        ,  <span class="number">1.41421356</span>],</span><br><span class="line">       [ <span class="number">1.73205081</span>,  <span class="number">2.</span>        ],</span><br><span class="line">       [ <span class="number">2.23606798</span>,  <span class="number">2.44948974</span>]])</span><br><span class="line">In [<span class="number">28</span>]: <span class="number">2</span>*e<span class="number">-1</span></span><br><span class="line">Out[<span class="number">28</span>]:</span><br><span class="line">array([[ <span class="number">1</span>,  <span class="number">3</span>],</span><br><span class="line">       [ <span class="number">5</span>,  <span class="number">7</span>],</span><br><span class="line">       [ <span class="number">9</span>, <span class="number">11</span>]])</span><br></pre></td></tr></table></figure>
<p>跟其他矩阵操作语言不同的是，NumPy的数组中，操作符*的操作结果是矩阵中元素对应相乘，矩阵相乘可以使用dot函数和方法:
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">31</span>]: e</span><br><span class="line">Out[<span class="number">31</span>]:</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">       [<span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">32</span>]: f =np.array([<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">33</span>]: e.dot(f)</span><br><span class="line">Out[<span class="number">33</span>]: array([ <span class="number">8</span>, <span class="number">18</span>, <span class="number">28</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">34</span>]: np.dot(e,f)</span><br><span class="line">Out[<span class="number">34</span>]: array([ <span class="number">8</span>, <span class="number">18</span>, <span class="number">28</span>])</span><br></pre></td></tr></table></figure></p>
<h2 id="数组的索引和切片"><a href="#数组的索引和切片" class="headerlink" title="数组的索引和切片"></a>数组的索引和切片</h2><p>切片同list一样，非常方便。
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">39</span>]: arr = np.arange(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">40</span>]: arr[<span class="number">4</span>]</span><br><span class="line">Out[<span class="number">40</span>]: <span class="number">4</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">41</span>]: arr[<span class="number">5</span>:<span class="number">8</span>]</span><br><span class="line">Out[<span class="number">41</span>]: array([<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">42</span>]: arr[<span class="number">-1</span>]</span><br><span class="line">Out[<span class="number">42</span>]: <span class="number">9</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">43</span>]: arr2d = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">44</span>]: arr2d[<span class="number">1</span>]</span><br><span class="line">Out[<span class="number">44</span>]: array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">45</span>]: arr2d[:<span class="number">2</span>]</span><br><span class="line">Out[<span class="number">45</span>]:</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">46</span>]: arr2d[:<span class="number">2</span>,<span class="number">1</span>:]</span><br><span class="line">Out[<span class="number">46</span>]:</span><br><span class="line">array([[<span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">47</span>]: arr2d[:, :<span class="number">1</span>]</span><br><span class="line">Out[<span class="number">47</span>]:</span><br><span class="line">array([[<span class="number">1</span>],</span><br><span class="line">       [<span class="number">4</span>],</span><br><span class="line">       [<span class="number">7</span>]])</span><br></pre></td></tr></table></figure></p>
<p>多维数组可以在每一个轴上有一个索引，这些索引可以在元组里面用逗号分隔：
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">48</span>]: <span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    ...:     <span class="keyword">return</span> <span class="number">2</span>*x-y</span><br><span class="line">    ...:</span><br><span class="line"></span><br><span class="line">In [<span class="number">49</span>]: g = np.fromfunction(f,(<span class="number">5</span>,<span class="number">4</span>),dtype=int)</span><br><span class="line"></span><br><span class="line">In [<span class="number">50</span>]: g</span><br><span class="line">Out[<span class="number">50</span>]:</span><br><span class="line">array([[ <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-2</span>, <span class="number">-3</span>],</span><br><span class="line">       [ <span class="number">2</span>,  <span class="number">1</span>,  <span class="number">0</span>, <span class="number">-1</span>],</span><br><span class="line">       [ <span class="number">4</span>,  <span class="number">3</span>,  <span class="number">2</span>,  <span class="number">1</span>],</span><br><span class="line">       [ <span class="number">6</span>,  <span class="number">5</span>,  <span class="number">4</span>,  <span class="number">3</span>],</span><br><span class="line">       [ <span class="number">8</span>,  <span class="number">7</span>,  <span class="number">6</span>,  <span class="number">5</span>]])</span><br><span class="line">In [<span class="number">51</span>]: g[<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">Out[<span class="number">51</span>]: <span class="number">1</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">52</span>]: g[<span class="number">0</span>:<span class="number">5</span>,<span class="number">1</span>]</span><br><span class="line">Out[<span class="number">52</span>]: array([<span class="number">-1</span>,  <span class="number">1</span>,  <span class="number">3</span>,  <span class="number">5</span>,  <span class="number">7</span>])</span><br><span class="line"></span><br><span class="line">In [<span class="number">53</span>]: g[:,<span class="number">1</span>]</span><br><span class="line">Out[<span class="number">53</span>]: array([<span class="number">-1</span>,  <span class="number">1</span>,  <span class="number">3</span>,  <span class="number">5</span>,  <span class="number">7</span>])</span><br></pre></td></tr></table></figure></p>
<h2 id="通用函数"><a href="#通用函数" class="headerlink" title="通用函数"></a>通用函数</h2><p>NumPy提供了相似的数学函数，例如<code>sin</code>,<code>cos</code>,<code>exp</code>等。在NumPy中，这些被叫做<code>universal function</code>，在NumPy里这些函数作用按数组的元素运算，然后产生一个新的数组作为输出。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>B = np.arange(<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>B</span><br><span class="line">array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.exp(B)</span><br><span class="line">array([ <span class="number">1.</span>        ,  <span class="number">2.71828183</span>,  <span class="number">7.3890561</span> ])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.sqrt(B)</span><br><span class="line">array([ <span class="number">0.</span>        ,  <span class="number">1.</span>        ,  <span class="number">1.41421356</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>C = np.array([<span class="number">2.</span>, <span class="number">-1.</span>, <span class="number">4.</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>np.add(B, C)</span><br><span class="line">array([ <span class="number">2.</span>,  <span class="number">0.</span>,  <span class="number">6.</span>])</span><br></pre></td></tr></table></figure>
<ul>
<li>单目运算</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>abs, fabs</td>
<td>计算基于元素的整形，浮点或复数的绝对值。fabs对于没有复数数据的快速版本</td>
</tr>
<tr>
<td>sqrt</td>
<td>计算每个元素的平方根。等价于 arr ** 0.5</td>
</tr>
<tr>
<td>square</td>
<td>计算每个元素的平方。等价于 arr ** 2</td>
</tr>
<tr>
<td>exp</td>
<td>计算每个元素的指数。</td>
</tr>
<tr>
<td>log, log10, log2, log1p</td>
<td>自然对数（基于e），基于10的对数，基于2的对数和 log(1 + x)</td>
</tr>
<tr>
<td>sign</td>
<td>计算每个元素的符号：1(positive)，0(zero)， -1(negative)</td>
</tr>
<tr>
<td>ceil</td>
<td>计算每个元素的天花板，即大于或等于每个元素的最小值</td>
</tr>
<tr>
<td>floor</td>
<td>计算每个元素的地板，即小于或等于每个元素的最大值</td>
</tr>
<tr>
<td>rint</td>
<td>圆整每个元素到最近的整数，保留dtype</td>
</tr>
<tr>
<td>modf</td>
<td>分别返回分数和整数部分的数组</td>
</tr>
<tr>
<td>isnan</td>
<td>返回布尔数组标识哪些元素是 NaN （不是一个数）</td>
</tr>
<tr>
<td>isfinite, isinf</td>
<td>分别返回布尔数组标识哪些元素是有限的（non-inf, non-NaN）或无限的</td>
</tr>
<tr>
<td>cos, cosh, sin sinh, tan, tanh  regular 和 hyperbolic</td>
<td>三角函数</td>
</tr>
<tr>
<td>arccos, arccosh, arcsin, arcsinh, arctan, arctanh</td>
<td>反三角函数</td>
</tr>
<tr>
<td>logical_not</td>
<td>计算基于元素的非x的真值。等价于 -arr</td>
</tr>
</tbody>
</table>
<ul>
<li>双目运算</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>add</td>
<td>在数组中添加相应的元素</td>
</tr>
<tr>
<td>substract</td>
<td>在第一个数组中减去第二个数组</td>
</tr>
<tr>
<td>multiply</td>
<td>对数组元素相乘</td>
</tr>
<tr>
<td>divide, floor_divide</td>
<td>除和地板除（去掉余数）</td>
</tr>
<tr>
<td>power</td>
<td>使用第二个数组作为指数提升第一个数组中的元素</td>
</tr>
<tr>
<td>maximum, fmax</td>
<td>基于元素的最大值。 fmax 忽略 NaN</td>
</tr>
<tr>
<td>minimum, fmin</td>
<td>基于元素的最小值。 fmin 忽略 NaN</td>
</tr>
<tr>
<td>mod</td>
<td>基于元素的模（取余）</td>
</tr>
<tr>
<td>copysign</td>
<td>拷贝第二个参数的符号到第一个参数</td>
</tr>
<tr>
<td>greater, greater_equal, less, less_equal, not_equal</td>
<td>基于元素的比较，产生布尔数组。等价于中缀操作符 &gt;, &gt;=, &lt;, &lt;=, ==, !=</td>
</tr>
<tr>
<td>logical_and, logical_or, logical_xor</td>
<td>计算各个元素逻辑操作的真值。等价于中缀操作符 &amp;, $\mid$ ,^</td>
</tr>
</tbody>
</table>
<h2 id="转置数组和交换坐标轴"><a href="#转置数组和交换坐标轴" class="headerlink" title="转置数组和交换坐标轴"></a>转置数组和交换坐标轴</h2><p>转置是一种特殊形式的变形，类似的它会返回基础数据的一个视窗，而不会拷贝任何东西。数组有<code>transpose</code>方法和专门的<code>T</code>属性：
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">55</span>]: arr = np.arange(<span class="number">15</span>).reshape((<span class="number">3</span>, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">In [<span class="number">56</span>]: arr</span><br><span class="line">Out[<span class="number">56</span>]:</span><br><span class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>,  <span class="number">4</span>],</span><br><span class="line">       [ <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>,  <span class="number">9</span>],</span><br><span class="line">       [<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">57</span>]: arr.T</span><br><span class="line">Out[<span class="number">57</span>]:</span><br><span class="line">array([[ <span class="number">0</span>,  <span class="number">5</span>, <span class="number">10</span>],</span><br><span class="line">       [ <span class="number">1</span>,  <span class="number">6</span>, <span class="number">11</span>],</span><br><span class="line">       [ <span class="number">2</span>,  <span class="number">7</span>, <span class="number">12</span>],</span><br><span class="line">       [ <span class="number">3</span>,  <span class="number">8</span>, <span class="number">13</span>],</span><br><span class="line">       [ <span class="number">4</span>,  <span class="number">9</span>, <span class="number">14</span>]])</span><br></pre></td></tr></table></figure></p>
<p>当进行矩阵运算时，，使用 np.dot 计算内部矩阵来产生$X^TX$ ：
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">58</span>]: np.dot(arr.T, arr)</span><br><span class="line">Out[<span class="number">58</span>]:</span><br><span class="line">array([[<span class="number">125</span>, <span class="number">140</span>, <span class="number">155</span>, <span class="number">170</span>, <span class="number">185</span>],</span><br><span class="line">       [<span class="number">140</span>, <span class="number">158</span>, <span class="number">176</span>, <span class="number">194</span>, <span class="number">212</span>],</span><br><span class="line">       [<span class="number">155</span>, <span class="number">176</span>, <span class="number">197</span>, <span class="number">218</span>, <span class="number">239</span>],</span><br><span class="line">       [<span class="number">170</span>, <span class="number">194</span>, <span class="number">218</span>, <span class="number">242</span>, <span class="number">266</span>],</span><br><span class="line">       [<span class="number">185</span>, <span class="number">212</span>, <span class="number">239</span>, <span class="number">266</span>, <span class="number">293</span>]])</span><br></pre></td></tr></table></figure></p>
<p>对于更高维的数组，<code>transpose</code>接受用于转置的坐标轴的号码的一个元组（for extra mind bending）：
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">59</span>]: arr = np.arange(<span class="number">16</span>).reshape((<span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">In [<span class="number">60</span>]: arr</span><br><span class="line">Out[<span class="number">60</span>]:</span><br><span class="line">array([[[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">        [ <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>]],</span><br><span class="line"></span><br><span class="line">       [[ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>],</span><br><span class="line">        [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>]]])</span><br><span class="line"></span><br><span class="line">In [<span class="number">61</span>]: arr.transpose((<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>))</span><br><span class="line">Out[<span class="number">61</span>]:</span><br><span class="line">array([[[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">        [ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]],</span><br><span class="line"></span><br><span class="line">       [[ <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>],</span><br><span class="line">        [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>]]])</span><br><span class="line">In [<span class="number">62</span>]: arr.swapaxes(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">Out[<span class="number">62</span>]:</span><br><span class="line">array([[[ <span class="number">0</span>,  <span class="number">4</span>],</span><br><span class="line">        [ <span class="number">1</span>,  <span class="number">5</span>],</span><br><span class="line">        [ <span class="number">2</span>,  <span class="number">6</span>],</span><br><span class="line">        [ <span class="number">3</span>,  <span class="number">7</span>]],</span><br><span class="line"></span><br><span class="line">       [[ <span class="number">8</span>, <span class="number">12</span>],</span><br><span class="line">        [ <span class="number">9</span>, <span class="number">13</span>],</span><br><span class="line">        [<span class="number">10</span>, <span class="number">14</span>],</span><br><span class="line">        [<span class="number">11</span>, <span class="number">15</span>]]])</span><br></pre></td></tr></table></figure></p>
<h2 id="数组合并"><a href="#数组合并" class="headerlink" title="数组合并"></a>数组合并</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#水平组合</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = arange(<span class="number">9</span>).reshape(<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = a * <span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hstack((a,b))</span><br><span class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">0</span>,  <span class="number">2</span>,  <span class="number">4</span>],</span><br><span class="line">       [ <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">       [ <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment">#垂直组合</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>vstack((a,b))</span><br><span class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>],</span><br><span class="line">       [ <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>],</span><br><span class="line">       [ <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">       [ <span class="number">0</span>,  <span class="number">2</span>,  <span class="number">4</span>],</span><br><span class="line">       [ <span class="number">6</span>,  <span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">       [<span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以通过concatenate函数来进行组合</span></span><br><span class="line"><span class="comment"># NumPy中维度(dimensions)叫做轴(axis)，轴的个数叫做秩(rank)</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>concatenate((a,b),axis=<span class="number">0</span>)</span><br><span class="line">array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>],</span><br><span class="line">       [ <span class="number">3</span>,  <span class="number">4</span>,  <span class="number">5</span>],</span><br><span class="line">       [ <span class="number">6</span>,  <span class="number">7</span>,  <span class="number">8</span>],</span><br><span class="line">       [ <span class="number">0</span>,  <span class="number">2</span>,  <span class="number">4</span>],</span><br><span class="line">       [ <span class="number">6</span>,  <span class="number">8</span>, <span class="number">10</span>],</span><br><span class="line">       [<span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 深度组合</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dstack((a,b))</span><br><span class="line">array([[[ <span class="number">0</span>,  <span class="number">0</span>],</span><br><span class="line">        [ <span class="number">1</span>,  <span class="number">2</span>],</span><br><span class="line">        [ <span class="number">2</span>,  <span class="number">4</span>]],</span><br><span class="line"></span><br><span class="line">       [[ <span class="number">3</span>,  <span class="number">6</span>],</span><br><span class="line">        [ <span class="number">4</span>,  <span class="number">8</span>],</span><br><span class="line">        [ <span class="number">5</span>, <span class="number">10</span>]],</span><br><span class="line"></span><br><span class="line">       [[ <span class="number">6</span>, <span class="number">12</span>],</span><br><span class="line">        [ <span class="number">7</span>, <span class="number">14</span>],</span><br><span class="line">        [ <span class="number">8</span>, <span class="number">16</span>]]])</span><br></pre></td></tr></table></figure>
<h2 id="数组分割"><a href="#数组分割" class="headerlink" title="数组分割"></a>数组分割</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = arange(<span class="number">9</span>).reshape(<span class="number">3</span>,<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> a</span><br><span class="line">[[<span class="number">0</span> <span class="number">1</span> <span class="number">2</span>]</span><br><span class="line"> [<span class="number">3</span> <span class="number">4</span> <span class="number">5</span>]</span><br><span class="line"> [<span class="number">6</span> <span class="number">7</span> <span class="number">8</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 水平分割</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>hsplit(a,<span class="number">3</span>)</span><br><span class="line">[array([[<span class="number">0</span>],</span><br><span class="line">       [<span class="number">3</span>],</span><br><span class="line">       [<span class="number">6</span>]]), array([[<span class="number">1</span>],</span><br><span class="line">       [<span class="number">4</span>],</span><br><span class="line">       [<span class="number">7</span>]]), array([[<span class="number">2</span>],</span><br><span class="line">       [<span class="number">5</span>],</span><br><span class="line">       [<span class="number">8</span>]])]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 垂直分割</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>vsplit(a,<span class="number">3</span>)</span><br><span class="line">[array([[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]]), array([[<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]]), array([[<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]])]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过split 指定轴进行分割</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>split(a,<span class="number">3</span>,axis=<span class="number">1</span>)</span><br><span class="line">[array([[<span class="number">0</span>],</span><br><span class="line">       [<span class="number">3</span>],</span><br><span class="line">       [<span class="number">6</span>]]), array([[<span class="number">1</span>],</span><br><span class="line">       [<span class="number">4</span>],</span><br><span class="line">       [<span class="number">7</span>]]), array([[<span class="number">2</span>],</span><br><span class="line">       [<span class="number">5</span>],</span><br><span class="line">       [<span class="number">8</span>]])]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 深度分割</span></span><br><span class="line"><span class="comment"># 必须三个维度以上的数组，</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = arange(<span class="number">24</span>).reshape(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dsplit(a,<span class="number">2</span>)</span><br><span class="line">[array([[[ <span class="number">0</span>,  <span class="number">1</span>],</span><br><span class="line">        [ <span class="number">4</span>,  <span class="number">5</span>],</span><br><span class="line">        [ <span class="number">8</span>,  <span class="number">9</span>]],</span><br><span class="line"></span><br><span class="line">       [[<span class="number">12</span>, <span class="number">13</span>],</span><br><span class="line">        [<span class="number">16</span>, <span class="number">17</span>],</span><br><span class="line">        [<span class="number">20</span>, <span class="number">21</span>]]]), array([[[ <span class="number">2</span>,  <span class="number">3</span>],</span><br><span class="line">        [ <span class="number">6</span>,  <span class="number">7</span>],</span><br><span class="line">        [<span class="number">10</span>, <span class="number">11</span>]],</span><br><span class="line"></span><br><span class="line">       [[<span class="number">14</span>, <span class="number">15</span>],</span><br><span class="line">        [<span class="number">18</span>, <span class="number">19</span>],</span><br><span class="line">        [<span class="number">22</span>, <span class="number">23</span>]]])]</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 基本数据结构]]></title>
      <url>http://keyunluo.github.io/2016/07/18/2016-07-18-python-datastructure.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文学习并总结Python的基本数据结构常用用法，包括基本数据类型和四个比较重要的基本数据结构：列表，元组，字典，集合。
<a id="more"></a></p>
</blockquote>
<h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><ul>
<li>数字：数字数据类型用于存储数值。他们是不可改变的数据类型，这意味着改变数字数据类型会分配一个新的对象。
Python支持四种不同的数字类型：<ul>
<li>int（有符号整型）</li>
<li>long（长整型[也可以代表八进制和十六进制]）</li>
<li>float（浮点型）</li>
<li>complex（复数）</li>
</ul>
</li>
<li>布尔型：True和False</li>
<li>字符串：字符串或串(String)是由数字、字母、下划线组成的一串字符。从左到右索引默认0开始的，最大范围是字符串长度少1，从右到左索引默认-1开始的，最大范围是字符串开头。</li>
</ul>
<h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><ul>
<li>基本方法</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>list.append(x)</td>
<td>把一个元素添加到列表的结尾，相当于 a[len(a):] = [x]。</td>
</tr>
<tr>
<td>list.extend(L)</td>
<td>通过添加指定列表的所有元素来扩充列表，相当于 a[len(a):] = L。</td>
</tr>
<tr>
<td>list.insert(i, x)</td>
<td>在指定位置插入一个元素。第一个参数是准备插入到其前面的那个元素的索引，例如 a.insert(0, x) 会插入到整个列表之前，而 a.insert(len(a), x) 相当于 a.append(x) 。</td>
</tr>
<tr>
<td>list.remove(x)</td>
<td>删除列表中值为 x 的第一个元素。如果没有这样的元素，就会返回一个错误。</td>
</tr>
<tr>
<td>list.pop([i])</td>
<td>从列表的指定位置删除元素，并将其返回。如果没有指定索引，a.pop()返回最后一个元素。元素随即从列表中被删除。（方法中 i 两边的方括号表示这个参数是可选的，而不是要求你输入一对方括号，你会经常在 Python 库参考手册中遇到这样的标记。）</td>
</tr>
<tr>
<td>list.clear()</td>
<td>移除列表中的所有项，等于del a[:]。</td>
</tr>
<tr>
<td>list.index(x)</td>
<td>返回列表中第一个值为 x 的元素的索引。如果没有匹配的元素就会返回一个错误。</td>
</tr>
<tr>
<td>list.count(x)</td>
<td>返回 x 在列表中出现的次数。</td>
</tr>
<tr>
<td>list.sort()</td>
<td>对列表中的元素进行排序。</td>
</tr>
<tr>
<td>list.reverse()</td>
<td>倒排列表中的元素。</td>
</tr>
<tr>
<td>list.copy()</td>
<td>返回列表的浅复制，等于a[:]。</td>
</tr>
</tbody>
</table>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">66.25</span>, <span class="number">333</span>, <span class="number">333</span>, <span class="number">1</span>, <span class="number">1234.5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(a.count(<span class="number">333</span>), a.count(<span class="number">66.25</span>), a.count(<span class="string">'x'</span>))</span><br><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.insert(<span class="number">2</span>, <span class="number">-1</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.append(<span class="number">333</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">66.25</span>, <span class="number">333</span>, <span class="number">-1</span>, <span class="number">333</span>, <span class="number">1</span>, <span class="number">1234.5</span>, <span class="number">333</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.index(<span class="number">333</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.remove(<span class="number">333</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">66.25</span>, <span class="number">-1</span>, <span class="number">333</span>, <span class="number">1</span>, <span class="number">1234.5</span>, <span class="number">333</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.reverse()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">333</span>, <span class="number">1234.5</span>, <span class="number">1</span>, <span class="number">333</span>, <span class="number">-1</span>, <span class="number">66.25</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.sort()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">-1</span>, <span class="number">1</span>, <span class="number">66.25</span>, <span class="number">333</span>, <span class="number">333</span>, <span class="number">1234.5</span>]</span><br></pre></td></tr></table></figure>
<ul>
<li>列表推导式</li>
</ul>
<p>列表推导式提供了从序列创建列表的简单途径。通常应用程序将一些操作应用于某个序列的每个元素，用其获得的结果作为生成新列表的元素，或者根据确定的判定条件创建子序列。
每个列表推导式都在 for 之后跟一个表达式，然后有零到多个 for 或 if 子句。返回结果是一个根据表达从其后的 for 和 if 上下文环境中生成出来的列表。如果希望表达式推导出一个元组，就必须使用括号。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares = [x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>squares</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(map(<span class="keyword">lambda</span> x: x**<span class="number">2</span>, range(<span class="number">10</span>)))</span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>[(x, y) <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] <span class="keyword">for</span> y <span class="keyword">in</span> [<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>] <span class="keyword">if</span> x != y]</span><br><span class="line">[(<span class="number">1</span>, <span class="number">3</span>), (<span class="number">1</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">3</span>), (<span class="number">2</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">4</span>), (<span class="number">3</span>, <span class="number">1</span>), (<span class="number">3</span>, <span class="number">4</span>)]</span><br></pre></td></tr></table></figure>
<h2 id="tuple"><a href="#tuple" class="headerlink" title="tuple"></a>tuple</h2><p>元组由若干逗号分隔的值组成，里面的值是不可改变的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>t = <span class="number">12345</span>, <span class="number">54321</span>, <span class="string">'hello!'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t[<span class="number">0</span>]</span><br><span class="line"><span class="number">12345</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>t</span><br><span class="line">(<span class="number">12345</span>, <span class="number">54321</span>, <span class="string">'hello!'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Tuples may be nested:</span></span><br><span class="line"><span class="meta">... </span>u = t, (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>u</span><br><span class="line">((<span class="number">12345</span>, <span class="number">54321</span>, <span class="string">'hello!'</span>), (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Tuples are immutable:</span></span><br><span class="line"><span class="meta">... </span>t[<span class="number">0</span>] = <span class="number">88888</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: <span class="string">'tuple'</span> object does <span class="keyword">not</span> support item assignment</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># but they can contain mutable objects:</span></span><br><span class="line"><span class="meta">... </span>v = ([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>v</span><br><span class="line">([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<h2 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h2><p>另一个非常有用的 Python 内建数据类型是字典。列表是以连续的整数为索引，与此不同的是，字典以关键字为索引，关键字可以是任意不可变类型，通常用字符串或数值。
理解字典的最佳方式是把它看做无序的键=&gt;值对集合。在同一个字典之内，关键字必须是互不相同。一对大括号创建一个空的字典：{}。</p>
<p>字典的主要操作是依据键来存储和析取值。也可以用 del来删除键：值对（key:value）。如果你用一个已经存在的关键字存储值，以前为该关键字分配的值就会被遗忘。试图从一个不存在的键中取值会导致错误。</p>
<p>对一个字典执行 list(d.keys()) 将返回一个字典中所有关键字组成的无序列表（如果你想要排序，只需使用 sorted(d.keys()) ）。使用 in 关键字（指Python语法）可以检查字典中是否存在某个关键字（指字典）。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel = &#123;<span class="string">'jack'</span>: <span class="number">4098</span>, <span class="string">'sape'</span>: <span class="number">4139</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel[<span class="string">'guido'</span>] = <span class="number">4127</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel</span><br><span class="line">&#123;<span class="string">'sape'</span>: <span class="number">4139</span>, <span class="string">'guido'</span>: <span class="number">4127</span>, <span class="string">'jack'</span>: <span class="number">4098</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel[<span class="string">'jack'</span>]</span><br><span class="line"><span class="number">4098</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> tel[<span class="string">'sape'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel[<span class="string">'irv'</span>] = <span class="number">4127</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tel</span><br><span class="line">&#123;<span class="string">'guido'</span>: <span class="number">4127</span>, <span class="string">'irv'</span>: <span class="number">4127</span>, <span class="string">'jack'</span>: <span class="number">4098</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(tel.keys())</span><br><span class="line">[<span class="string">'irv'</span>, <span class="string">'guido'</span>, <span class="string">'jack'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sorted(tel.keys())</span><br><span class="line">[<span class="string">'guido'</span>, <span class="string">'irv'</span>, <span class="string">'jack'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'guido'</span> <span class="keyword">in</span> tel</span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'jack'</span> <span class="keyword">not</span> <span class="keyword">in</span> tel</span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure>
<p>dict() 构造函数可以直接从 key-value 对中创建字典:
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict([(<span class="string">'sape'</span>, <span class="number">4139</span>), (<span class="string">'guido'</span>, <span class="number">4127</span>), (<span class="string">'jack'</span>, <span class="number">4098</span>)])</span><br><span class="line">&#123;<span class="string">'sape'</span>: <span class="number">4139</span>, <span class="string">'jack'</span>: <span class="number">4098</span>, <span class="string">'guido'</span>: <span class="number">4127</span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>此外，字典推导式可以从任意的键值表达式中创建字典:
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;x: x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>)&#125;</span><br><span class="line">&#123;<span class="number">2</span>: <span class="number">4</span>, <span class="number">4</span>: <span class="number">16</span>, <span class="number">6</span>: <span class="number">36</span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>如果关键字都是简单的字符串，有时通过关键字参数指定 key-value 对更为方便:
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dict(sape=<span class="number">4139</span>, guido=<span class="number">4127</span>, jack=<span class="number">4098</span>)</span><br><span class="line">&#123;<span class="string">'sape'</span>: <span class="number">4139</span>, <span class="string">'jack'</span>: <span class="number">4098</span>, <span class="string">'guido'</span>: <span class="number">4127</span>&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><p>Python 还包含了一个数据类型 —— set （集合）。集合是一个无序不重复元素的集。基本功能包括关系测试和消除重复元素。集合对象还支持 union（联合），intersection（交），difference（差）和 sysmmetric difference（对称差集）等数学运算。</p>
<p>大括号或 set() 函数可以用来创建集合。注意：想要创建空集合，你必须使用 set() 而不是 {},后者用于创建空字典。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>basket = &#123;<span class="string">'apple'</span>, <span class="string">'orange'</span>, <span class="string">'apple'</span>, <span class="string">'pear'</span>, <span class="string">'orange'</span>, <span class="string">'banana'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(basket)                      <span class="comment"># show that duplicates have been removed</span></span><br><span class="line">&#123;<span class="string">'orange'</span>, <span class="string">'banana'</span>, <span class="string">'pear'</span>, <span class="string">'apple'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'orange'</span> <span class="keyword">in</span> basket                 <span class="comment"># fast membership testing</span></span><br><span class="line"><span class="keyword">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'crabgrass'</span> <span class="keyword">in</span> basket</span><br><span class="line"><span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment"># Demonstrate set operations on unique letters from two words</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = set(<span class="string">'abracadabra'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = set(<span class="string">'alacazam'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a                                  <span class="comment"># unique letters in a</span></span><br><span class="line">&#123;<span class="string">'a'</span>, <span class="string">'r'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a - b                              <span class="comment"># letters in a but not in b</span></span><br><span class="line">&#123;<span class="string">'r'</span>, <span class="string">'d'</span>, <span class="string">'b'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a | b                              <span class="comment"># letters in either a or b</span></span><br><span class="line">&#123;<span class="string">'a'</span>, <span class="string">'c'</span>, <span class="string">'r'</span>, <span class="string">'d'</span>, <span class="string">'b'</span>, <span class="string">'m'</span>, <span class="string">'z'</span>, <span class="string">'l'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a &amp; b                              <span class="comment"># letters in both a and b</span></span><br><span class="line">&#123;<span class="string">'a'</span>, <span class="string">'c'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a ^ b                              <span class="comment"># letters in a or b but not both</span></span><br><span class="line">&#123;<span class="string">'r'</span>, <span class="string">'d'</span>, <span class="string">'b'</span>, <span class="string">'m'</span>, <span class="string">'z'</span>, <span class="string">'l'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">'abracadabra'</span> <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">'abc'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">&#123;<span class="string">'r'</span>, <span class="string">'d'</span>&#125;</span><br></pre></td></tr></table></figure>
<h2 id="遍历技巧"><a href="#遍历技巧" class="headerlink" title="遍历技巧"></a>遍历技巧</h2><ul>
<li>在字典中遍历时，关键字和对应的值可以使用 items() 方法同时解读出来：</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>knights = &#123;<span class="string">'gallahad'</span>: <span class="string">'the pure'</span>, <span class="string">'robin'</span>: <span class="string">'the brave'</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> k, v <span class="keyword">in</span> knights.items():</span><br><span class="line"><span class="meta">... </span>    print(k, v)</span><br><span class="line">...</span><br><span class="line">gallahad the pure</span><br><span class="line">robin the brave</span><br></pre></td></tr></table></figure>
<ul>
<li>在序列中遍历时，索引位置和对应值可以使用 enumerate() 函数同时得到：</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate([<span class="string">'tic'</span>, <span class="string">'tac'</span>, <span class="string">'toe'</span>]):</span><br><span class="line"><span class="meta">... </span>    print(i, v)</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span> tic</span><br><span class="line"><span class="number">1</span> tac</span><br><span class="line"><span class="number">2</span> toe</span><br></pre></td></tr></table></figure>
<ul>
<li>同时循环两个或更多的序列，可以使用 zip() 整体打包:</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; questions = ['name', 'quest', 'favorite color']</span><br><span class="line">&gt;&gt;&gt; answers = ['lancelot', 'the holy grail', 'blue']</span><br><span class="line">&gt;&gt;&gt; for q, a in zip(questions, answers):</span><br><span class="line">...     print('What is your &#123;0&#125;?  It is &#123;1&#125;.'.format(q, a))</span><br><span class="line">...</span><br><span class="line">What is your name?  It is lancelot.</span><br><span class="line">What is your quest?  It is the holy grail.</span><br><span class="line">What is your favorite color?  It is blue.</span><br></pre></td></tr></table></figure>
<ul>
<li>需要逆向循环序列的话，先正向定位序列，然后调用 reversed() 函数:</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> reversed(range(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>)):</span><br><span class="line"><span class="meta">... </span>    print(i)</span><br><span class="line">...</span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>
<ul>
<li>要按排序后的顺序循环序列的话，使用 sorted() 函数，它不改动原序列，而是生成一个新的已排序的序列:</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>basket = [<span class="string">'apple'</span>, <span class="string">'orange'</span>, <span class="string">'apple'</span>, <span class="string">'pear'</span>, <span class="string">'orange'</span>, <span class="string">'banana'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> f <span class="keyword">in</span> sorted(set(basket)):</span><br><span class="line"><span class="meta">... </span>    print(f)</span><br><span class="line">...</span><br><span class="line">apple</span><br><span class="line">banana</span><br><span class="line">orange</span><br><span class="line">pear</span><br></pre></td></tr></table></figure>
<ul>
<li>若要在循环内部修改正在遍历的序列（例如复制某些元素），建议您首先制作副本。在序列上循环不会隐式地创建副本。切片表示法使这尤其方便:</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>words = [<span class="string">'cat'</span>, <span class="string">'window'</span>, <span class="string">'defenestrate'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> w <span class="keyword">in</span> words[:]:  <span class="comment"># Loop over a slice copy of the entire list.</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> len(w) &gt; <span class="number">6</span>:</span><br><span class="line"><span class="meta">... </span>        words.insert(<span class="number">0</span>, w)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>words</span><br><span class="line">[<span class="string">'defenestrate'</span>, <span class="string">'cat'</span>, <span class="string">'window'</span>, <span class="string">'defenestrate'</span>]</span><br></pre></td></tr></table></figure>
<h2 id="Python数据类型转换"><a href="#Python数据类型转换" class="headerlink" title="Python数据类型转换"></a>Python数据类型转换</h2><p>有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。
以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象，表示转换的值。</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>int(x [,base])</td>
<td>将x转换为一个整数。</td>
</tr>
<tr>
<td>long(x [,base] )</td>
<td>将x转换为一个长整数。</td>
</tr>
<tr>
<td>float(x)</td>
<td>将x转换到一个浮点数。</td>
</tr>
<tr>
<td>complex(real [,imag])</td>
<td>创建一个复数。</td>
</tr>
<tr>
<td>str(x)</td>
<td>将对象 x 转换为字符串。</td>
</tr>
<tr>
<td>repr(x)</td>
<td>将对象 x 转换为表达式字符串。</td>
</tr>
<tr>
<td>eval(str)</td>
<td>用来计算在字符串中的有效Python表达式,并返回一个对象。</td>
</tr>
<tr>
<td>tuple(s)</td>
<td>将序列 s 转换为一个元组。</td>
</tr>
<tr>
<td>list(s)</td>
<td>将序列 s 转换为一个列表。</td>
</tr>
<tr>
<td>set(s)</td>
<td>转换为可变集合。</td>
</tr>
<tr>
<td>dict(d)</td>
<td>创建一个字典。d 必须是一个序列 (key,value)元组。</td>
</tr>
<tr>
<td>frozenset(s)</td>
<td>转换为不可变集合。</td>
</tr>
<tr>
<td>chr(x)</td>
<td>将一个整数转换为一个字符。</td>
</tr>
<tr>
<td>unichr(x)</td>
<td>将一个整数转换为Unicode字符。</td>
</tr>
<tr>
<td>ord(x)</td>
<td>将一个字符转换为它的整数值。</td>
</tr>
<tr>
<td>hex(x)</td>
<td>将一个整数转换为一个十六进制字符串。</td>
</tr>
<tr>
<td>oct(x)</td>
<td>将一个整数转换为一个八进制字符串。</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Anaconda Python科学计算包]]></title>
      <url>http://keyunluo.github.io/2016/07/17/2016-07-17-anaconda-python.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录在Ubuntu16.04上配置Python的科学计算环境包，使用anaconda发行版和清华大学的镜像服务。</p>
</blockquote>
<a id="more"></a>
<h2 id="Anaconda下载与安装"><a href="#Anaconda下载与安装" class="headerlink" title="Anaconda下载与安装"></a>Anaconda下载与安装</h2><p>由于使用教育网，便可以很方便的使用IPV6资源，其中就包括镜像服务。Anaconda 是一个用于科学计算的 Python 发行版，支持 Linux, Mac, Windows, 包含了众多流行的科学计算、数据分析的 Python 包。</p>
<p><code>Anaconda</code> 安装包可以到 <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="external">清华大学镜像站</a> 下载，本文使用了<code>Anaconda3-4.1.1-Linux-x86_64.sh</code>。</p>
<p>安装完成后，默认是已经添加了环境变量的，这里在Ubuntu16.04上安装的，会与系统的Python3版本冲突，因此需要修改环境，为了不影响系统的Python3，将Anaconda的Python路径放至PATH的最后，即在<code>/etc/profile</code>的最后一行添加<code>export PATH=$PATH:/usr/local/anaconda3/bin</code>。同时为了抛弃系统的Python3，一个解决方案是使用软链将Anaconda的<code>python</code>指向<code>/usr/local/bin/python3</code>,具体入下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/anaconda3/bin/python /usr/local/bin/python3</span><br></pre></td></tr></table></figure>
<h2 id="镜像源与PyPi配置"><a href="#镜像源与PyPi配置" class="headerlink" title="镜像源与PyPi配置"></a>镜像源与PyPi配置</h2><p>通常Anaconda的官方源速度无法忍受，因此需要更改为国内的源，这里可以清华大学的镜像源：Anaconda Python 免费仓库。</p>
<p>Linux下在终端中输入：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels <span class="string">'https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/'</span></span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure>
<p>Windows下在CMD中输入：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure>
<p>一般我们使用PyPi的安装大部分的Python组件，同理，官方速度也很够呛，因此在这里配置国内的源。
编辑<code>~/.pip/pip.conf</code>(没有就创建一个)，里面改为清华源：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<p>或中科大源，速度都很给力</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line">index-url = https://pypi.mirrors.ustc.edu.cn/simple</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>由于安装了Anaconda Python3，所以安装软件时可以用<code>conda install XXX</code>安装或<code>conda update XXX</code>来更新，当然也可以用<code>pip3</code>。</p>
<p>当要为系统的Python2版本安装Numpy时，先安装一些编译依赖项,如果直接用pip安装最新的numpy时会编译错误，原因是缺少必要的库，因此需要先安装这些库，一个简单的做法是使用Ubuntu的build-dep命令：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt build-dep python-numpy python-scipy python-matplotlib</span><br></pre></td></tr></table></figure>
<p>然后就可以直接安装了：<code>sudo -H pip install -U numpy</code>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu16.04配置L2TP-VPN]]></title>
      <url>http://keyunluo.github.io/2016/07/17/2016-07-17-ubuntu16-l2tp-vpn.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录在Ubuntu16.04上安装L2TP插件,之前记录了在<a href="/2016/03/20/2016-03-20-ubuntu14-l2tp-vpn.html">Ubuntu14.04</a>上安装L2TP插件，但ppa上还没有更新这个软件包，故只有手动从源代码编译安装。</p>
</blockquote>
<a id="more"></a>
<h2 id="安装依赖软件"><a href="#安装依赖软件" class="headerlink" title="安装依赖软件"></a>安装依赖软件</h2><p>从源代码编译时需要很多第三方软件，因此首先需要在系统中安装这些库，具体如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt  install git libtool automake libglib2.0-dev  intltool ppp-dev libgtk+-3-dev libnma-dev libsecret-1-dev libnm-gtk-dev libnm-glib-dev  libnm-glib-vpn-dev xl2tpd</span><br></pre></td></tr></table></figure>
<p>安装好这些库后便可以从<code>github</code>上<code>clone</code>最新的代码:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/nm-l2tp/network-manager-l2tp</span><br></pre></td></tr></table></figure>
<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>使用终端进入源代码目录<code>network-manager-l2tp</code>，运行如下的<code>configure</code>命令：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./configure \</span><br><span class="line">  --prefix=/usr --localstatedir=/var --sysconfdir=/etc \</span><br><span class="line">  --libexecdir=/usr/lib/NetworkManager \</span><br><span class="line">  --<span class="keyword">with</span>-pppd-plugin-dir=/usr/lib/pppd/<span class="number">2.4</span><span class="number">.7</span> \</span><br><span class="line">  --enable-absolute-paths</span><br></pre></td></tr></table></figure>
<p>没有报错后，接着便<code>make</code>和<code>make install</code> :</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>安装完成后，还不能直接使用，需要关闭<code>xl2tp</code>，然后机器重新启动:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service xl2tpd stop</span><br><span class="line">sudo update-rc.d xl2tpd disable</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>
<p>此时，通过<code>网络-编辑连接-增加-第二层隧道协议</code>便可以配置L2TP-VPN了。</p>
<p><img src="/resource/blog/2016-07/L2TP.png" alt="L2TP-VPN"></p>
<p>配置好用户名，密码，地址后，基本上就OK了。不过由于笔者实验室配置的L2TP貌似有问题，导致部分网页打不开，比如微博。。。然而却能Ping的通，经过一番摸索后，发现是VPN的<code>PPP</code>设置中的<code>MTU</code>值过大，于是将其改到了一个较小的数值，便可以愉快的玩耍了。</p>
<p><img src="/resource/blog/2016-07/PPP设置.png" alt="PPP设置"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[TODO-LIST]]></title>
      <url>http://keyunluo.github.io/2016/06/30/2016-06-30-todolist.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>2016-07月-2017-01月待做事项</p>
</blockquote>
<a id="more"></a>
<h2 id="基础算法"><a href="#基础算法" class="headerlink" title="基础算法"></a>基础算法</h2><p>参考书籍:</p>
<ul>
<li><em>Data Structures and Algorithms in C++, 2nd edition</em> Michael T. Goodrich等著</li>
<li><em>Data Structures and Algorithms in Java, 6th Edition</em> James Aspnes著</li>
<li><em>Data Structures and Algorithms in Python</em> Michael T. Goodrich等著</li>
<li><em>Data Structures and Algorithms with JavaScript</em> Michael McMillan等著</li>
<li><em>算法导论</em> 第三版，殷建平 等译</li>
<li><em>快学Scala</em>  高宇翔 译</li>
</ul>
<p>学习课题:</p>
<ul>
<li><em>[x]</em> 数组</li>
<li><em>[x]</em> 链表</li>
<li><em>[x]</em> 栈和队列</li>
<li><em>[x]</em> 树</li>
<li><em>[x]</em> 堆和优先队列</li>
<li><em>[x]</em> 哈希</li>
<li><em>[x]</em> 搜索树</li>
<li><em>[x]</em> 集合</li>
<li><em>[x]</em> STL</li>
<li><em>[x]</em> 排序</li>
<li><em>[x]</em> 图论</li>
<li><em>[x]</em> 动态规划</li>
</ul>
<h2 id="分布式系统"><a href="#分布式系统" class="headerlink" title="分布式系统"></a>分布式系统</h2><p>参考书籍:</p>
<ul>
<li><em>大规模分布式系统架构与设计实战</em> 彭渊编 著</li>
<li><em>Notes on Theory of Distributed Systems</em> James Aspnes 著</li>
</ul>
<p>学习课题:</p>
<ul>
<li><em>[x]</em> 分布式并行计算的原理与实践</li>
<li><em>[x]</em> 分布式协调的实现</li>
<li><em>[x]</em> 分布式缓存的实现</li>
<li><em>[x]</em> 消息队列的实现</li>
<li><em>[x]</em> 分布式文件系统的实现</li>
<li><em>[x]</em> 分布式作业调度平台的实现</li>
<li><em>[x]</em> Message passing</li>
<li><em>[x]</em> Shared memory</li>
</ul>
<h2 id="PRML"><a href="#PRML" class="headerlink" title="PRML"></a>PRML</h2><p>参考书籍:</p>
<ul>
<li><em>统计学习方法</em> 李航编著</li>
<li><em>模式识别与机器学习</em> 马春鹏  译</li>
<li><em>Machine Learning A Bayesian and Optimization Perspective</em> Sergios Theodoridis 编著</li>
</ul>
<p>学习课题:</p>
<ul>
<li><em>[x]</em> 统计学习方法</li>
<li><em>[x]</em> 感知机</li>
<li><em>[x]</em> k近邻</li>
<li><em>[x]</em> 朴素贝叶斯</li>
<li><em>[x]</em> 决策树</li>
<li><em>[x]</em> 逻辑回归与最大熵模型</li>
<li><em>[x]</em> 支持向量机</li>
<li><em>[x]</em> 提升方法</li>
<li><em>[x]</em> EM算法及其推广</li>
<li><em>[x]</em> 隐马尔科夫模型</li>
<li><em>[x]</em> 条件随机场</li>
<li><em>[x]</em> 概率分布</li>
<li><em>[x]</em> 回归的线性模型</li>
<li><em>[x]</em> 分类的线性模型</li>
<li><em>[x]</em> 神经网络</li>
<li><em>[x]</em> 核方法</li>
<li><em>[x]</em> 稀疏核机</li>
<li><em>[x]</em> 图模型</li>
<li><em>[x]</em> 混合模型和EM</li>
<li><em>[x]</em> 近似推断</li>
<li><em>[x]</em> 采样方法</li>
<li><em>[x]</em> 连续潜在变量</li>
<li><em>[x]</em> 顺序数据</li>
<li><em>[x]</em> 组合模型</li>
</ul>
<h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><p>参考书籍:</p>
<ul>
<li><em>Data algorithms recipes for scaling up with hadoop and spark</em> Mahmoud Parsian编著</li>
<li><em>Mastering Apache Spark</em> Mike Frampton编著</li>
<li><em>HBase- The Definitive Guide, 2nd Edition</em> Lars George编著</li>
<li><em>Apache Mahout Beyond MapReduce</em> Dmitriy Lyubimov等</li>
</ul>
<p>学习课题:</p>
<ul>
<li><em>[✔]</em> Secondary Sort</li>
<li><em>[x]</em> Top 10 List</li>
<li><em>[x]</em> Left Outer Join</li>
<li><em>[x]</em> Order Inversion</li>
<li><em>[x]</em> Moving Average</li>
<li><em>[x]</em> Market Basket Analysis</li>
<li><em>[x]</em> Common Friends</li>
<li><em>[x]</em> Recommendation Engines Using MapReduce</li>
<li><em>[x]</em> Content-Based Recommendation: Movies</li>
<li><em>[x]</em> Smarter Email Marketing with the Markov Model</li>
<li><em>[x]</em> K-Means Clustering</li>
<li><em>[x]</em> k-Nearest Neighbors</li>
<li><em>[x]</em> Naive Bayes</li>
<li><em>[x]</em> Sentiment Analysis</li>
<li><em>[x]</em> Finding, Counting, and Listing All Triangles in Large Graphs</li>
<li><em>[x]</em> K-mer Counting</li>
<li><em>[x]</em> DNA Sequencing</li>
<li><em>[x]</em> Cox Regression</li>
<li><em>[x]</em> Cochran-Armitage Test for Trend</li>
<li><em>[x]</em> Allelic Frequency</li>
<li><em>[x]</em> The T-Test</li>
<li><em>[x]</em> Pearson Correlation</li>
<li><em>[x]</em> DNA Base Count</li>
<li><em>[x]</em> RNA Sequencing</li>
<li><em>[x]</em> Gene Aggregation</li>
<li><em>[x]</em> Linear Regression</li>
<li><em>[x]</em> MapReduce and Monoids</li>
<li><em>[x]</em> The Small Files Problem</li>
<li><em>[x]</em> Huge Cache for MapReduce</li>
<li><em>[x]</em> The Bloom Filter</li>
<li><em>[x]</em> HBase Client API: The Basics<ul>
<li>[x] Data Types and Hierarchy</li>
<li>[x] CRUD Operations</li>
<li>[x] Batch Operations</li>
<li>[x] Scans</li>
<li>[x] Miscellaneous Features</li>
</ul>
</li>
<li><em>[x]</em> HBase Client API: Advanced Features<ul>
<li>[x] Filters</li>
<li>[x] Counters</li>
<li>[x] Coprocessors</li>
</ul>
</li>
<li><em>[x]</em> HBase Client API: Administrative Features<ul>
<li>[x] Schema Definition</li>
<li>[x] HBaseAdmin</li>
<li>[x] ReplicationAdmin</li>
</ul>
</li>
<li><em>[x]</em> HBase Available Clients<ul>
<li>[x] Gateway Clients</li>
<li>[x] FrameworkClients</li>
<li>[x] Shell</li>
<li>[x] Web-based UI</li>
</ul>
</li>
<li><em>[x]</em> Mahout’s in-core algebra</li>
<li><em>[x]</em> Mahout’s Distributed Algebra</li>
<li><em>[x]</em> Stochastic SVD</li>
<li><em>[x]</em> Stochastic PCA</li>
<li><em>[x]</em> Data Sketching with Bahmani sketch</li>
<li><em>[x]</em> Naive Bayes Example</li>
</ul>
<h2 id="系统技能"><a href="#系统技能" class="headerlink" title="系统技能"></a>系统技能</h2><h3 id="LaTeX"><a href="#LaTeX" class="headerlink" title="LaTeX"></a>LaTeX</h3><p>参考书籍:</p>
<ul>
<li><strong>LaTeX入门</strong> 刘海洋编著<ul>
<li><em>[x]</em> 文本组织</li>
<li><em>[x]</em> 自动化工具</li>
<li><em>[x]</em> 数学公式</li>
<li><em>[x]</em> 图表</li>
<li><em>[x]</em> 幻灯片</li>
</ul>
</li>
</ul>
<h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><p>参考书籍:</p>
<ul>
<li><strong>Linux Shell脚本攻略</strong>  第二版，门佳译</li>
<li><p><strong>Linux Shell 编程艺术</strong>  张泽编著</p>
<ul>
<li><em>[x]</em> shell基础</li>
<li><em>[x]</em> 常用命令</li>
<li><em>[x]</em> 文件操作</li>
<li><em>[x]</em> 文本处理</li>
<li><em>[x]</em> Web网页</li>
<li><em>[x]</em> 压缩归档</li>
<li><em>[x]</em> 网络设置</li>
<li><em>[x]</em> 磁盘管理</li>
<li><em>[x]</em> 进程管理</li>
<li><em>[x]</em> IO重定向</li>
<li><em>[x]</em> 函数编写</li>
<li><em>[x]</em> 正则表达式</li>
<li><em>[x]</em> 脚本调试</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[正当毕业时]]></title>
      <url>http://keyunluo.github.io/2016/06/21/2016-06-21-graduation.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>就算新的开始依旧美丽，而此刻的心情也必然暗淡。</p>
</blockquote>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=109864&auto=0&height=66"></iframe>



<h2 id="时光缝隙里的记忆"><a href="#时光缝隙里的记忆" class="headerlink" title="时光缝隙里的记忆"></a>时光缝隙里的记忆</h2><p>&nbsp;&nbsp;紧张的毕业答辩之后，整个人顿时轻松了不少，收拾好东西和搬家后，不知不觉间感到些许失落和无所事事。毕业典礼上全院三百多人集体煽情了一把，毕竟这一别很有可能好多人将很难再见上一面。毕业典礼一结束，顺便吃了个学校发的毕业纪念餐，意味着这将是在这个学校的最后一天了。虽然宿舍有些破旧并且并不宽敞，但我依然记得刚开始入学时第一次躺在这张床上的感觉。我是个随遇而安的人，也许在中学时代的羁畔太多，刚入大学的我对这一切新鲜的生活感到异常兴奋和温馨。而如今，生活了四年，严格来说大概三年多一点的日子，依然感到舒适。此时此刻，用白驹过隙、时光荏苒这些曾经“为赋新词强说愁”的词汇来表达此时的心境却感到越发真实贴切。</p>
<p>&nbsp;&nbsp;曾经以为，我的大学不值得留恋，既没有轰轰烈烈的爱情，也没有叱咤风云的专业技能，日子过得平平淡淡甚至很Dull，所谓的星辰大海依旧虚无缥缈，总体的感觉就是不会玩，也不会学习。然而一路走来，细细回想，在稀里糊涂地走过的四年的青春时光里，越想经历的越多，感悟的更多，到头来才发现虽然没有他人过的精彩，却也在不断地探索前行，在发现一个更大的世界的旅程中磕磕碰碰，所有惯常的令人感动的场景也会让我潸然。</p>
<h2 id="间歇性踌躇满志，持续性混吃等死"><a href="#间歇性踌躇满志，持续性混吃等死" class="headerlink" title="间歇性踌躇满志，持续性混吃等死"></a>间歇性踌躇满志，持续性混吃等死</h2><p>&nbsp;&nbsp;那时虽然天气炎热，寝室也没有空调，却满腔热情，早起早睡，精神饱满，而后渐渐地越起越晚，到大一下基本上就有起床困难症了。刚入大学那会，由于上的课主要是数学基础课，做习题花费的时间比较多，总体感觉不是很吃力，但也不是特别用功钻研，并且对程序设计语言课不太感兴趣，归结起来就是很浮躁，这种状态一直延续了整个大学四年。大二时开始上专业基础课，各种实验课搞得我很是困倦，几门硬件相关的课程学习得很是吃力，这也直接导致我对这一方向失去兴趣，后来又参加科创，学习一些数字图像处理的课程，课外花了不少时间，但总感觉收获有限，这一年算过得比较失败。大三开始真正上专业课，对学科开始有了一个初步的了解，下学期就开始考虑保研和实习的事，开始是准备去华为这样的公司实习的，奈何内推时填写实习时间三个月后直接没有了下文，一个偶然的机会就去了中科院电子所苏州研究院，这样暑假就奔波于北京、苏州了。大四开学后就面临着保研的问题，机试不是很好，但凭着底子厚还是有惊无险的获得了保研资格，继续读书。在苏州实习四个月后，十一月底回到学校，后来联系导师，导师让过去做毕设，这样大四后半年就在南大度过的，直到毕设论文答辩前夕。</p>
<p>&nbsp;&nbsp;归结起来，大学前三年几乎宅在学校，大四到处奔波，从北京、苏州往返于南京，整个大学的状态是“三分钟热度”，“浅尝辄止”成为常态。每次都想在图书馆坐下来好好学习一番，可是不到半小时便注意力分散，看一些技术书籍，常痴迷于各种计算机新技术，常纠结于各种术语之间，最喜欢瞎折腾，装系统编译软件，浪费了好多时间，做不了极客，却积攒了不少吹牛的资本。大学里面的专业课就从来没有认真上过，平时也没有什么预习复习，基本上上课听多少就多少，考前开始认真预习刷试卷，保持着一个伪学霸的状态，成绩不是最好，但也说得过去。</p>
<h2 id="努力学习的意义"><a href="#努力学习的意义" class="headerlink" title="努力学习的意义"></a>努力学习的意义</h2><p>&nbsp;&nbsp;<code>谁没有不切实际的梦想，把未来的人生精彩的幻想 常常一个人悄悄的描绘，欣赏那种假设的辉煌</code></p>
<p>&nbsp;&nbsp;以前一直没有认真考虑过这个问题，直到大四这一年东奔西走，渐渐领悟到努力学习的意义。努力和有钱的意义差不多，让你在未来的生活中有更多选择。努力的最大动力，在于你可以选择你想要的生活，而不是被生活选择。努力就意味着掌握了主动权，掌握了改变自身状态的能力，在一个更大的世界里过自己想要的生活。为此，现在的我懊悔不已，既然学习技术，就要做那个最厉害的一个，大多数人都很弱，你只要稍微精通某些方面的知识就会脱颖而出。</p>
<p>&nbsp;&nbsp;我一直认为我很幸运，从上大学一开始就进入计算机软件培优班到科创获得一等奖，从保研到南大到最终毕设成绩优秀。虽然我不是足够优秀，但运气不会太差。我坚信越努力，越幸运，积极乐观，用努力学习使当初的选择变得正确，一直做个幸运的人。</p>
<h2 id="向着自由的未来前行"><a href="#向着自由的未来前行" class="headerlink" title="向着自由的未来前行"></a>向着自由的未来前行</h2><p>&nbsp;&nbsp;<code>我飞出五行之内三界之外，我心头无牵无挂无限自在，我知道生亦何苦死亦何哀，如来如不来一样死性不改。</code></p>
<p>&nbsp;&nbsp;大学毕业，既是终点，也是起点，以后的路也越走越宽。现在的我，希望自己能放下手机，能做一个努力上进，能掌控我的未来的人。积极锻炼身体，保持一个健康的体魄；玩就玩个痛快，尽情释放自我；读书做事不贪图多，唯求精益求精。通往卓越的路只有一条，就是静下心来积累，天下武功，唯快不破。</p>
<p>&nbsp;&nbsp;我不想被束缚，我希望自由自在的活着，我想看世间最美的一切。</p>
<p>&nbsp;&nbsp;祝所有在意我的人和我在意的人，人生的道路越走越宽，后会有期。</p>
<p><img src="/resource/blog/2016-06/学位证.jpg" alt="学位照"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Elasticsearch入门学习(3)——查询]]></title>
      <url>http://keyunluo.github.io/2016/05/27/2016-05-27-elasticsearch-3.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>ElasticSearch</strong>提供了丰富的REST风格的API来满足不同的场景需求，本篇介绍Elasticsearch的查询相关的基础和高级操作。</p>
</blockquote>
<a id="more"></a>
<h2 id="检索文档"><a href="#检索文档" class="headerlink" title="检索文档"></a>检索文档</h2><ul>
<li><strong>通过ID直接查询</strong>
执行<code>HTTP GET</code>请求，通过<code>索引-类型-ID</code>便可以返回原始的JSON格式的文档，原始的JSON文档在<code>_source</code>字段里。</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dislab@server:~$ curl -XGET <span class="string">'http://server:9200/gps_data/20160205/3201000061%2010:20:54?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"gps_data"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"20160205"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"3201000061 10:20:54"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">"found"</span> : true,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"ZDBH"</span> : <span class="string">"3201000061"</span>,</span><br><span class="line">    <span class="string">"ROWKEY"</span> : <span class="string">"3201000061 10:20:54"</span>,</span><br><span class="line">    <span class="string">"GPSSJ"</span> : <span class="string">"2016-02-05 10:20:54"</span>,</span><br><span class="line">    <span class="string">"XLMC"</span> : <span class="string">"80路"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意到<code>ID</code>字段插入了<code>%20</code>的字段，这是因为<code>curl</code>命令中不能有空格，若有空格则必须替换掉。</p>
<ul>
<li><strong>简单搜索</strong>
简单搜索不需要指定<code>ID</code>,需要指定查询字符串，格式为<code>_search?q=key:value</code></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dislab@server:~$ curl -XGET  http://server:9200/gps_data/20160205/_search?q=GPSSJ:“2016-02-05 10:20:54”</span><br><span class="line">&#123;"took":695,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":10093722,"max_score":0.3666257,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201000158 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201000158","ROWKEY":"3201000158 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"13路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200106 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201200106","ROWKEY":"3201200106 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"170路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200154 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201200154","ROWKEY":"3201200154 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"125路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200126 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201200126","ROWKEY":"3201200126 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"8路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300190 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201300190","ROWKEY":"3201300190 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"48路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300169 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201300169","ROWKEY":"3201300169 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"48路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100008 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201100008","ROWKEY":"3201100008 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"306路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000166 05:05:05","_score":0.36632675,"_source":&#123;"ZDBH":"3201000166","ROWKEY":"3201000166 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"13路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000179 05:05:05","_score":0.36632675,"_source":&#123;"ZDBH":"3201000179","ROWKEY":"3201000179 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"13路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000019 05:05:05","_score":0.36632675,"_source":&#123;"ZDBH":"3201000019","ROWKEY":"3201000019 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"166路"&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>DSL语句查询</strong>
DSL(Domain Specific Language特定领域语言)以JSON请求体的形式出现，可以构建复杂的查询。
上述查询可写成如下的<code>DSL</code>查询方式</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dislab@server:~$ curl -XGET 'http://server:9200/gps_data/20160205/_search' -d '</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;     "query" : &#123;</span><br><span class="line">&gt;         "match" : &#123;</span><br><span class="line">&gt;             "GPSSJ" : "2016-02-05 10:20:54"</span><br><span class="line">&gt;         &#125;</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; '</span><br><span class="line">&#123;"took":854,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":10093722,"max_score":2.7672434,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201200801 20:54:10","_score":2.7672434,"_source":&#123;"ZDBH":"3201200801","ROWKEY":"3201200801 20:54:10","GPSSJ":"2016-02-05 20:54:10","XLMC":"170路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300063 20:54:10","_score":2.7672434,"_source":&#123;"ZDBH":"3201300063","ROWKEY":"3201300063 20:54:10","GPSSJ":"2016-02-05 20:54:10","XLMC":"D9路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000027 20:10:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201000027","ROWKEY":"3201000027 20:10:54","GPSSJ":"2016-02-05 20:10:54","XLMC":"7路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000193 10:54:20","_score":2.7672434,"_source":&#123;"ZDBH":"3201000193","ROWKEY":"3201000193 10:54:20","GPSSJ":"2016-02-05 10:54:20","XLMC":"13路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000115 20:10:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201000115","ROWKEY":"3201000115 20:10:54","GPSSJ":"2016-02-05 20:10:54","XLMC":"13路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 10:54:20","_score":2.7672434,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 10:54:20","GPSSJ":"2016-02-05 10:54:20","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200163 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201200163","ROWKEY":"3201200163 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"201路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200200 20:10:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201200200","ROWKEY":"3201200200 20:10:54","GPSSJ":"2016-02-05 20:10:54","XLMC":"170路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200127 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201200127","ROWKEY":"3201200127 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"125路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200127 10:54:20","_score":2.7672434,"_source":&#123;"ZDBH":"3201200127","ROWKEY":"3201200127 10:54:20","GPSSJ":"2016-02-05 10:54:20","XLMC":"125路"&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>复杂DSL语句查询</strong>
<code>DSL</code>查询可嵌套多种条件形成复杂查询。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">dislab@server:~$ curl -XGET 'http://server:9200/gps_data/20160205/_search' -d '</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;     "query" : &#123;</span><br><span class="line">&gt;         "filtered" : &#123;</span><br><span class="line">&gt;             "filter" : &#123;</span><br><span class="line">&gt;                 "range" : &#123;</span><br><span class="line">&gt;                     "ZDBH" : &#123; "gt" : 3201300108 &#125;</span><br><span class="line">&gt;                 &#125;</span><br><span class="line">&gt;             &#125;,</span><br><span class="line">&gt;             "query" : &#123;</span><br><span class="line">&gt;                 "match" : &#123;</span><br><span class="line">&gt;                     "GPSSJ" : "2016-02-05 10:20:54"</span><br><span class="line">&gt;                 &#125;</span><br><span class="line">&gt;             &#125;</span><br><span class="line">&gt;         &#125;</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; '</span><br><span class="line">&#123;"took":657,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":645657,"max_score":2.7672434,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201300120 20:10:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201300120","ROWKEY":"3201300120 20:10:54","GPSSJ":"2016-02-05 20:10:54","XLMC":"41路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300220 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201300220","ROWKEY":"3201300220 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"306路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300131 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201300131","ROWKEY":"3201300131 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"48路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300162 10:54:20","_score":2.7672434,"_source":&#123;"ZDBH":"3201300162","ROWKEY":"3201300162 10:54:20","GPSSJ":"2016-02-05 10:54:20","XLMC":"182路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300177 20:54:10","_score":2.7672434,"_source":&#123;"ZDBH":"3201300177","ROWKEY":"3201300177 20:54:10","GPSSJ":"2016-02-05 20:54:10","XLMC":"56路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300165 10:54:20","_score":2.7672434,"_source":&#123;"ZDBH":"3201300165","ROWKEY":"3201300165 10:54:20","GPSSJ":"2016-02-05 10:54:20","XLMC":"48路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300115 20:54:10","_score":2.7672434,"_source":&#123;"ZDBH":"3201300115","ROWKEY":"3201300115 20:54:10","GPSSJ":"2016-02-05 20:54:10","XLMC":"48路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300120 20:54:10","_score":2.7672434,"_source":&#123;"ZDBH":"3201300120","ROWKEY":"3201300120 20:54:10","GPSSJ":"2016-02-05 20:54:10","XLMC":"41路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300171 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201300171","ROWKEY":"3201300171 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"56路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300200 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201300200","ROWKEY":"3201300200 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"306路"&#125;&#125;]&#125;&#125;dislab@server:~$</span><br></pre></td></tr></table></figure>
<p>上述查询主要包括一个区间过滤器和match语句。</p>
<ul>
<li><strong>全文搜索</strong>
使用<code>match</code>匹配计算相关性，根据结果相关性评分来对结果集进行排序。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dislab@server:~$ curl -XGET 'http://server:9200/gps_data/20160205/_search' -d '</span><br><span class="line">&#123;</span><br><span class="line">     "query" : &#123;</span><br><span class="line">         "match" : &#123;</span><br><span class="line">             "XLMC" : "57"</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line">'</span><br><span class="line">&#123;"took":146,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":143481,"max_score":2.9686642,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:12","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:12","GPSSJ":"2016-02-05 07:17:12","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:38","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:38","GPSSJ":"2016-02-05 07:17:38","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:42","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:42","GPSSJ":"2016-02-05 07:17:42","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:01","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:01","GPSSJ":"2016-02-05 07:18:01","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:15","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:15","GPSSJ":"2016-02-05 07:18:15","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:17","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:17","GPSSJ":"2016-02-05 07:18:17","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:23","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:23","GPSSJ":"2016-02-05 07:18:23","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:30","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:30","GPSSJ":"2016-02-05 07:18:30","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:48","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:48","GPSSJ":"2016-02-05 07:18:48","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:49","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:49","GPSSJ":"2016-02-05 07:18:49","XLMC":"57路"&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>短语搜索</strong>
关键字之间是<code>与</code>关系的短语搜素，要求在搜索过程中关键字是相邻的。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET 'http://server:9200/gps_data/20160205/_search' -d '</span><br><span class="line">&#123;</span><br><span class="line">    "query" : &#123;</span><br><span class="line">        "match_phrase" : &#123;</span><br><span class="line">            "XLMC" : "57 路"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br><span class="line">&#123;"took":236,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":143481,"max_score":3.5936642,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:22:40","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:22:40","GPSSJ":"2016-02-05 14:22:40","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:22:52","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:22:52","GPSSJ":"2016-02-05 14:22:52","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:23:06","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:23:06","GPSSJ":"2016-02-05 14:23:06","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:23:37","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:23:37","GPSSJ":"2016-02-05 14:23:37","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:23:39","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:23:39","GPSSJ":"2016-02-05 14:23:39","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:23:47","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:23:47","GPSSJ":"2016-02-05 14:23:47","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:23:58","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:23:58","GPSSJ":"2016-02-05 14:23:58","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:24:31","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:24:31","GPSSJ":"2016-02-05 14:24:31","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:24:35","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:24:35","GPSSJ":"2016-02-05 14:24:35","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:25:15","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:25:15","GPSSJ":"2016-02-05 14:25:15","XLMC":"57路"&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>搜索结果高亮</strong>
使用<code>highlight</code>高亮搜索到的匹配关键字。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET 'http://server:9200/gps_data/20160205/_search' -d '</span><br><span class="line">&#123;</span><br><span class="line">    "query" : &#123;</span><br><span class="line">        "match_phrase" : &#123;</span><br><span class="line">            "XLMC" : "57 路"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    "highlight": &#123;</span><br><span class="line">        "fields" : &#123;</span><br><span class="line">            "XLMC" : &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br><span class="line">&#123;"took":375,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":143481,"max_score":3.5936642,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:12","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:12","GPSSJ":"2016-02-05 07:17:12","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:38","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:38","GPSSJ":"2016-02-05 07:17:38","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:42","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:42","GPSSJ":"2016-02-05 07:17:42","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:01","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:01","GPSSJ":"2016-02-05 07:18:01","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:15","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:15","GPSSJ":"2016-02-05 07:18:15","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:17","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:17","GPSSJ":"2016-02-05 07:18:17","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:23","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:23","GPSSJ":"2016-02-05 07:18:23","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:30","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:30","GPSSJ":"2016-02-05 07:18:30","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:48","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:48","GPSSJ":"2016-02-05 07:18:48","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:49","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:49","GPSSJ":"2016-02-05 07:18:49","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Elasticsearch入门学习(2)——服务URL]]></title>
      <url>http://keyunluo.github.io/2016/04/11/2016-04-11-elasticsearch-2.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>ElasticSearch</strong> 将各种功能、配置、服务都以API的形式暴露，这也是elasticsearch区别于其他搜索引擎框架的一个特征，本文将ES中常用的URL整理以供查询。</p>
</blockquote>
<a id="more"></a>
<h2 id="与Elasticsearch交互"><a href="#与Elasticsearch交互" class="headerlink" title="与Elasticsearch交互"></a>与Elasticsearch交互</h2><p>如何与Elasticsearch交互取决于你是否使用Java，可以分为<code>Java API交互</code>和<code>基于HTTP协议，以JSON为数据交互格式的RESTful API</code>两种，本文主要讲解使用RESTful API，通过9200端口的与Elasticsearch进行通信。使用java则端口为9300.</p>
<p>向Elasticsearch发出的请求的组成部分与其它普通的HTTP请求是一样的：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X&lt;VERB&gt; '&lt;PROTOCOL&gt;://&lt;HOST&gt;:&lt;PORT&gt;/&lt;PATH&gt;?&lt;QUERY_STRING&gt;' -d '&lt;BODY&gt;'</span><br></pre></td></tr></table></figure>
<ul>
<li>VERB HTTP方法：GET, POST, PUT, HEAD, DELETE</li>
<li>PROTOCOL http或者https协议（只有在Elasticsearch前面有https代理的时候可用）</li>
<li>HOST Elasticsearch集群中的任何一个节点的主机名，如果是在本地的节点，那么就叫localhost</li>
<li>PORT Elasticsearch HTTP服务所在的端口，默认为9200</li>
<li>PATH API路径（例如_count将返回集群中文档的数量），PATH可以包含多个组件，例如_cluster/stats或者_nodes/stats/jvm</li>
<li>QUERY_STRING 一些可选的查询请求参数，例如?pretty参数将使请求返回更加美观易读的JSON数据</li>
<li>BODY 一个JSON格式的请求主体（如果请求需要的话）</li>
</ul>
<p>例如，为了计算集群中的文档数量，我们可以这样做：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave01 ~]$ curl -XGET 'http://localhost:9200/_count?pretty' -d '</span><br><span class="line">&#123;</span><br><span class="line">    "query": &#123;</span><br><span class="line">        "match_all": &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br><span class="line">&#123;</span><br><span class="line">  "count" : 3498781,</span><br><span class="line">  "_shards" : &#123;</span><br><span class="line">    "total" : 37,</span><br><span class="line">    "successful" : 37,</span><br><span class="line">    "failed" : 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Elasticsearch返回一个类似200 OK的HTTP状态码和JSON格式的响应主体（除了HEAD请求）。</p>
<h2 id="Elasticsearch常见服务URL"><a href="#Elasticsearch常见服务URL" class="headerlink" title="Elasticsearch常见服务URL"></a>Elasticsearch常见服务URL</h2><ul>
<li><p>HTTP方法: POST新增，PUT更新，GET获取，DELETE删除，HEAD判断是否存在</p>
</li>
<li><p>集群健康查看:<code>curl  &#39;http://server:9200/_cat/health?v&#39;</code></p>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">epoch      timestamp cluster       status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</span><br><span class="line"><span class="number">1460378717</span> <span class="number">20</span>:<span class="number">45</span>:<span class="number">17</span>  Elasticsearch green           <span class="number">3</span>         <span class="number">3</span>     <span class="number">74</span>  <span class="number">37</span>    <span class="number">0</span>    <span class="number">0</span>        <span class="number">0</span>             <span class="number">0</span>                  -                <span class="number">100.0</span>%</span><br></pre></td></tr></table></figure>
<ul>
<li>节点健康查看:<code>curl  &#39;http://server:9200/_cat/nodes?v&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host            ip              heap.percent ram.percent load node.role master name</span><br><span class="line"><span class="number">192.168</span><span class="number">.100</span><span class="number">.107</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.107</span>           <span class="number">30</span>          <span class="number">22</span> <span class="number">0.00</span> d         -      ES-Hadoop-Spark-Node1</span><br><span class="line"><span class="number">192.168</span><span class="number">.100</span><span class="number">.110</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.110</span>           <span class="number">11</span>          <span class="number">23</span> <span class="number">0.01</span> d         -      ES-Hadoop-Spark-Node2</span><br><span class="line"><span class="number">192.168</span><span class="number">.100</span><span class="number">.101</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.101</span>           <span class="number">19</span>          <span class="number">27</span> <span class="number">1.80</span> d         *      ES-Hadoop-Spark-Master</span><br></pre></td></tr></table></figure>
<ul>
<li>列出集群索引:<code>curl  &#39;http://server:9200/_cat/indices?v&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">health status index                 pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">green  open   demo                    <span class="number">5</span>   <span class="number">1</span>          <span class="number">1</span>            <span class="number">0</span>      <span class="number">7.9</span>kb          <span class="number">3.9</span>kb</span><br><span class="line">green  open   my_index                <span class="number">5</span>   <span class="number">1</span>         <span class="number">11</span>            <span class="number">0</span>     <span class="number">53.4</span>kb         <span class="number">26.7</span>kb</span><br><span class="line">green  open   .marvel-es<span class="number">-2016.03</span><span class="number">.29</span>   <span class="number">1</span>   <span class="number">1</span>     <span class="number">162773</span>           <span class="number">54</span>     <span class="number">94.6</span>mb         <span class="number">47.3</span>mb</span><br></pre></td></tr></table></figure>
<ul>
<li>创建customer索引,pretty表示打印json响应:<code>curl -XPUT &#39;http://server:9200/customer?pretty&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"acknowledged"</span> : <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>索引数据：<code>curl -XPUT &#39;http://server:9200/customer/external/1?pretty&#39; &#39;-d { &quot;name&quot;:&quot;JOhn Doe&quot;}&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"customer"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"external"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"successful"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"created"</span> : <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>查询数据：<code>curl -XGET &#39;http://server:9200/customer/external/1?pretty&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"customer"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"external"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"JOhn Doe"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>删除索引:<code>curl -XDELETE &#39;http://server:9200/customer?pretty</code> `</p>
</li>
<li><p>通过id更新索引数据:<code>curl -XPUT &#39;http://server:9200/customer/external/1?pretty&#39; &#39;-d { &quot;name&quot;:&quot;JOhn Doe&quot;}&#39;</code></p>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"customer"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"external"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"successful"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"created"</span> : <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>添加索引数据随机id:<code>curl -XPOST &#39;http://server:9200/customer/external?pretty&#39; &#39;-d { &quot;name&quot;:&quot;JOhn Doe&quot;}&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"customer"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"external"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"AVQFbXxylcDfhGhMoLpJ"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"successful"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"created"</span> : <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>通过id删除：<code>curl -XDELETE &#39;http://server:9200/customer/external/2?pretty&#39;</code></p>
</li>
<li><p>通过查询删除:</p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -XDELETE 'http://server:9200/customer/external/_query?pretty' -d '</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; "match": &#123; "name": "John" &#125; &#125;</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure>
<ul>
<li>批量新增</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST 'http://server:9200/customer/external/_bulk?pretty' -d '</span><br><span class="line">&#123;"index":&#123;"_id":"1"&#125;&#125;</span><br><span class="line">&#123;"name": "John Doe" &#125;</span><br><span class="line">&#123;"index":&#123;"_id":"2"&#125;&#125;</span><br><span class="line">&#123;"name": "Jane Doe" &#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure>
<ul>
<li>批量更新/删除</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST 'http://server:9200/customer/external/_bulk?pretty' -d '</span><br><span class="line">&#123;"update":&#123;"_id":"1"&#125;&#125;</span><br><span class="line">&#123;"doc": &#123; "name": "John Doe becomes Jane Doe" &#125; &#125;</span><br><span class="line">&#123;"delete":&#123;"_id":"2"&#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>读文件批量索引</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST 'http://server:9200/bank/account/_bulk?pretty' --data-binary @accounts.json</span><br></pre></td></tr></table></figure>
<ul>
<li>批量索引操作</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST 'http://server:9200/bank/_search?pretty' -d '</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123;</span><br><span class="line">    "bool": &#123;</span><br><span class="line">      "must": [</span><br><span class="line">        &#123; "match": &#123; "address": "mill" &#125; &#125;,</span><br><span class="line">        &#123; "match": &#123; "address": "lane" &#125; &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure>
<ul>
<li>查看进程信息，包括打开文件数，是否锁定内存等:<code>curl &#39;http://server:9200/_nodes/process?pretty&#39;</code></li>
</ul>
<h2 id="索引相关"><a href="#索引相关" class="headerlink" title="索引相关"></a>索引相关</h2><table>
<thead>
<tr>
<th style="text-align:left">URL</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/index/_search</td>
<td style="text-align:left">不解释</td>
</tr>
<tr>
<td style="text-align:left">/_aliases</td>
<td style="text-align:left">获取或操作索引的别名</td>
</tr>
<tr>
<td style="text-align:left">/index/</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">/index/type/</td>
<td style="text-align:left">创建或操作类型</td>
</tr>
<tr>
<td style="text-align:left">/index/_mapping</td>
<td style="text-align:left">创建或操作mapping</td>
</tr>
<tr>
<td style="text-align:left">/index/_settings</td>
<td style="text-align:left">创建或操作设置(number_of_shards是不可更改的)</td>
</tr>
<tr>
<td style="text-align:left">/index/_open</td>
<td style="text-align:left">打开被关闭的索引</td>
</tr>
<tr>
<td style="text-align:left">/index/_close</td>
<td style="text-align:left">关闭索引</td>
</tr>
<tr>
<td style="text-align:left">/index/_refresh</td>
<td style="text-align:left">刷新索引（使新加内容对搜索可见）</td>
</tr>
<tr>
<td style="text-align:left">/index/_flush</td>
<td style="text-align:left">刷新索引，将变动提交到lucene索引文件中，并清空elasticsearch的transaction log</td>
</tr>
<tr>
<td style="text-align:left">/index/_optimize</td>
<td style="text-align:left">优化segement，个人认为主要是对segement进行合并</td>
</tr>
<tr>
<td style="text-align:left">/index/_status</td>
<td style="text-align:left">获得索引的状态信息</td>
</tr>
<tr>
<td style="text-align:left">/index/_segments</td>
<td style="text-align:left">获得索引的segments的状态信息</td>
</tr>
<tr>
<td style="text-align:left">/index/_explain</td>
<td style="text-align:left">不执行实际搜索，而返回解释信息</td>
</tr>
<tr>
<td style="text-align:left">/index/_analyze</td>
<td style="text-align:left">不执行实际搜索，根据输入的参数进行文本分析</td>
</tr>
<tr>
<td style="text-align:left">/index/type/id</td>
<td style="text-align:left">操作指定文档，不解释</td>
</tr>
<tr>
<td style="text-align:left">/index/type/id/_create</td>
<td style="text-align:left">创建一个文档，如果该文件已经存在，则返回失败</td>
</tr>
<tr>
<td style="text-align:left">/index/type/id/_update</td>
<td style="text-align:left">更新一个文件，如果改文件不存在，则返回失败</td>
</tr>
</tbody>
</table>
<h2 id="集群相关"><a href="#集群相关" class="headerlink" title="集群相关"></a>集群相关</h2><table>
<thead>
<tr>
<th style="text-align:left">URL</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/_cluster/nodes</td>
<td style="text-align:left">获得集群中的节点列表和信息</td>
</tr>
<tr>
<td style="text-align:left">/_cluster/health</td>
<td style="text-align:left">获得集群信息</td>
</tr>
<tr>
<td style="text-align:left">/_cluster/state</td>
<td style="text-align:left">获得集群里的所有信息（集群信息、节点信息、mapping信息等）</td>
</tr>
</tbody>
</table>
<h2 id="节点相关"><a href="#节点相关" class="headerlink" title="节点相关"></a>节点相关</h2><table>
<thead>
<tr>
<th style="text-align:left">URL</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/_nodes/process</td>
<td style="text-align:left">主要看file descriptor 这个信息</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/process/stats</td>
<td style="text-align:left">统计信息（内存、CPU等）</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/jvm</td>
<td style="text-align:left">获得各节点的虚拟机统计和配置信息</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/jvm/stats</td>
<td style="text-align:left">更详细的虚拟机信息</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/http</td>
<td style="text-align:left">获得各个节点的http信息（如ip地址）</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/http/stats</td>
<td style="text-align:left">获得各个节点处理http请求的统计情况</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/thread_pool</td>
<td style="text-align:left">获得各种类型的线程池，（elasticsearch分别对不同的操作提供不同的线程池）的配置信息</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/thread_pool/stats</td>
<td style="text-align:left">获得各种类型的线程池的统计信息</td>
</tr>
</tbody>
</table>
<p>以上这些操作可以通过如：</p>
<p><code>/_nodes/${nodeId}/jvm/stats</code>，<code>/_nodes/${nodeip}/jvm/stats</code>，<code>/_nodes/${nodeattribute}/jvm/stats</code>的形式针对指定节点的操作。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Elasticsearch入门学习(1)——安装]]></title>
      <url>http://keyunluo.github.io/2016/04/11/2016-04-11-elasticsearch-1.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>ElasticSearch</strong>是一个基于Lucene的接近实时的搜索平台。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口，是当前流行的企业级搜索引擎。本文先从安装Elasticsearch开始，一步一步探索。</p>
</blockquote>
<a id="more"></a>
<h2 id="ES下载和安装"><a href="#ES下载和安装" class="headerlink" title="ES下载和安装"></a>ES下载和安装</h2><ul>
<li><p>es(官方下载地址)[<a href="https://www.elastic.co/downloads/elasticsearch]，最新版本为2.3.1。不过github上有一个更好的选择(ElasticSearch-RTF)[https://github.com/medcl/elasticsearch-rtf.git],这个版本中已经集成了中文分词插件等，并且已经将插件配置好了，最新版本为2.2.1" target="_blank" rel="external">https://www.elastic.co/downloads/elasticsearch]，最新版本为2.3.1。不过github上有一个更好的选择(ElasticSearch-RTF)[https://github.com/medcl/elasticsearch-rtf.git],这个版本中已经集成了中文分词插件等，并且已经将插件配置好了，最新版本为2.2.1</a> ，非常适合初学者。安装时注意了，不要使用root权限用户安装es，否则es启动会报错，应该创建一个普通的用户安装es。</p>
</li>
<li><p>运行环境</p>
<ul>
<li>Linux和windows均可</li>
<li>jdk7+</li>
<li>32位/64位</li>
</ul>
</li>
<li><p>配置文件</p>
</li>
</ul>
<p>本文将Elasticsearch安装在<code>/opt/bigdata/elasticsearch</code>目录下，版本为<code>2.2.0</code>，集群为<code>Redhat7</code>，配置文件为<code>/opt/bigdata/elasticsearch/config/elasticsearch.yml</code>，下面贴上配置文件：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"># ======================== Elasticsearch Configuration =========================</span><br><span class="line">#</span><br><span class="line"># NOTE: Elasticsearch comes with reasonable defaults <span class="keyword">for</span> most settings.</span><br><span class="line">#       Before you <span class="built_in">set</span> out to tweak and tune the configuration, make sure you</span><br><span class="line">#       understand what are you trying to accomplish and the consequences.</span><br><span class="line">#</span><br><span class="line"># The primary way of configuring a node is via <span class="keyword">this</span> file. This <span class="keyword">template</span> lists</span><br><span class="line"># the most important settings you may want to configure <span class="keyword">for</span> a production cluster.</span><br><span class="line">#</span><br><span class="line"># Please see the documentation <span class="keyword">for</span> further information on configuration options:</span><br><span class="line"># &lt;http:<span class="comment">//www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration.html&gt;</span></span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Cluster -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Use a descriptive name <span class="keyword">for</span> your cluster:</span><br><span class="line"># 集群名称</span><br><span class="line"> cluster.name: Elasticsearch</span><br><span class="line">#</span><br><span class="line"># ------------------------------------ Node ------------------------------------</span><br><span class="line">#</span><br><span class="line"># Use a descriptive name <span class="keyword">for</span> the node:</span><br><span class="line"># 节点信息</span><br><span class="line"> node.name: ES-Hadoop-Spark-Master</span><br><span class="line"> node.master: <span class="literal">true</span></span><br><span class="line"> node.data: <span class="literal">true</span></span><br><span class="line"> index.number_of_replicas: <span class="number">1</span></span><br><span class="line">#</span><br><span class="line"># Add custom attributes to the node:</span><br><span class="line">#</span><br><span class="line"># node.rack: r1</span><br><span class="line">#</span><br><span class="line"># ----------------------------------- Paths ------------------------------------</span><br><span class="line">#</span><br><span class="line"># Path to directory where to store the data (separate multiple locations by comma):</span><br><span class="line"># 数据路径</span><br><span class="line"> path.data: /opt/elasticsearch/data</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Path to <span class="built_in">log</span> files:</span><br><span class="line">#</span><br><span class="line"># path.logs: /path/to/logs</span><br><span class="line"> path.logs: /opt/elasticsearch/logs</span><br><span class="line"> path.work: /opt/elasticsearch/work</span><br><span class="line"># ----------------------------------- Memory -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Lock the memory on startup:</span><br><span class="line">#</span><br><span class="line"># bootstrap.mlockall: <span class="literal">true</span></span><br><span class="line">#</span><br><span class="line"># Make sure that the `ES_HEAP_SIZE` environment variable is <span class="built_in">set</span> to about half the memory</span><br><span class="line"># available on the system and that the owner of the process is allowed to use <span class="keyword">this</span> limit.</span><br><span class="line">#</span><br><span class="line"># Elasticsearch performs poorly when the system is swapping the memory.</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Network -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Set the bind address to a specific IP (IPv4 or IPv6):</span><br><span class="line"># 网络，设置为外网可以访问</span><br><span class="line"> network.host: <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">#</span><br><span class="line"># Set a custom port <span class="keyword">for</span> HTTP:</span><br><span class="line"># 端口，默认<span class="number">9200</span></span><br><span class="line"> http.port: <span class="number">9200</span></span><br><span class="line">#</span><br><span class="line"># For more information, see the documentation at:</span><br><span class="line"># &lt;http:<span class="comment">//www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html&gt;</span></span><br><span class="line">#</span><br><span class="line"># --------------------------------- Discovery ----------------------------------</span><br><span class="line">#</span><br><span class="line"># Pass an initial <span class="built_in">list</span> of hosts to perform discovery when <span class="keyword">new</span> node is started:</span><br><span class="line"># The <span class="keyword">default</span> <span class="built_in">list</span> of hosts is [<span class="string">"127.0.0.1"</span>, <span class="string">"[::1]"</span>]</span><br><span class="line">#</span><br><span class="line"># discovery.zen.ping.unicast.hosts: [<span class="string">"host1"</span>, <span class="string">"host2"</span>]</span><br><span class="line">#</span><br><span class="line"># Prevent the <span class="string">"split brain"</span> by configuring the majority of nodes (total number of nodes / <span class="number">2</span> + <span class="number">1</span>):</span><br><span class="line">#</span><br><span class="line"># discovery.zen.minimum_master_nodes: <span class="number">3</span></span><br><span class="line">#</span><br><span class="line"># For more information, see the documentation at:</span><br><span class="line"># &lt;http:<span class="comment">//www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery.html&gt;</span></span><br><span class="line"># 设置节点自动发现</span><br><span class="line"> discovery.zen.minimum_master_nodes: <span class="number">1</span></span><br><span class="line"> discovery.zen.ping.timeout: <span class="number">3</span>s    ##节点间自动发现的响应时间</span><br><span class="line"> discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.100.101"</span>]</span><br><span class="line"># ---------------------------------- Gateway -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Block initial recovery after a full cluster restart until N nodes are started:</span><br><span class="line">#</span><br><span class="line"># gateway.recover_after_nodes: <span class="number">3</span></span><br><span class="line">#</span><br><span class="line"># For more information, see the documentation at:</span><br><span class="line"># &lt;http:<span class="comment">//www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html&gt;</span></span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Various -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Disable starting multiple nodes on a single system:</span><br><span class="line">#</span><br><span class="line"># node.max_local_storage_nodes: <span class="number">1</span></span><br><span class="line">#</span><br><span class="line"># Require <span class="keyword">explicit</span> names when deleting indices:</span><br><span class="line">#</span><br><span class="line"># action.destructive_requires_name: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>在上述配置中，已经设置主节点为<code>192.168.100.101</code>，还有两个从节点<code>192.168.100.107</code>以及<code>192.168.100.110</code>，它们的配置不同点在于<code>Node</code>的设置，从节点中设置如下：<code>node.name: ES-Hadoop-Spark-Node1</code>，<code>node.master: false</code>,因为设置了节点的自动发现机制，所以在启动Elasticsearch后，集群会自动根据<code>cluster.name: Elasticsearch</code>来添加数据节点。</p>
<ul>
<li>启动集群
进入<code>/opt/bigdata/elasticsearch</code>，运行<code>bin/elasticsearch</code>,便可以启动<code>elasticsearch</code>，如果想当shell关闭时任然要在后台运行elasticsearch服务，可以运行命令<code>nohub bin/elasticsearch &amp;</code>,这样当shell关闭时，仍可访问服务。分别进入到两个数据节点，运行同样的命令，这样，集群便搭建好了。
当然我们也可以在启动的时候修改集群的名称和节点的名称。例如：
<code>bin/elasticsearch --cluster.name my_cluster_name --node.name my_node_name</code>来指定集群名字和主节点。</li>
</ul>
<h2 id="ES插件安装"><a href="#ES插件安装" class="headerlink" title="ES插件安装"></a>ES插件安装</h2><p><code>head</code>插件可以很方便的查询数据和监控集群健康状况，下面以<code>head</code>插件安装为例，介绍下ES2.x下插件安装的一般步骤。</p>
<p>进入<code>/opt/bigdata/elasticsearch</code>目录，运行<code>bin/plugin install mobz/elasticsearch-head</code>, 下载完成后，访问网址<code>http://server:9200/_plugin/head/</code>，便可以看到如下界面，说明安装成功。
<img src="/resource/blog/2016-04/elasticsearch-head.png" alt="head"></p>
<p>插件可以分为核心插件和非核心插件，核心插件是官方提供的，可以直接安装，例如<code>bin/plugin install analysis-icu</code>，这样就会下载合适的版本安装到Elasticsearch中。非核心插件可以是官方提供的，也可以是社区提供的，可以从官方，Maven或者GitHub中下载安装：<code>bin/plugin install [org]/[user|component]/[version]</code>。</p>
<p>例如，安装github上的插件，<code>plugin install lmenezes/elasticsearch-kopf</code>，插件会尝试先到官方去下载，如果没有找到会到maven.com中去下载，如果在没有找到回到github中去下载。脚本还是非常智能的。当我们从直接maven中央库中安装时可以直接使用下面的方式，最后的版本号是必须要写的。
<code>plugin install org.elasticsearch.plugin/mapper-attachments/3.0.0</code>
从自定义网址或者本地安装：<code>plugin install [url]</code>，例如，在本地文件系统中安装一个插件，可以运行：<code>plugin install file:///path/to/plugin.zip</code>。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Sqoop从Oracle中导入数据到hadoop]]></title>
      <url>http://keyunluo.github.io/2016/04/09/2016-04-09-using-sqoop2-oracledb-hadoop.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录从Oracle12c导入数据到Hadoop中的流程，使用Sqoop2工具,目前Sqoop2只支持将oracle/mysql数据库中的数据与HDFS中数据相互导入导出，目前并不支持导入到HBase/Hive中，因此在实际业务中并不好用，后面介绍使用Sqoop1导入数据到Hbase的流程。</p>
</blockquote>
<a id="more"></a>
<hr>
<h2 id="Sqoop2安装过程"><a href="#Sqoop2安装过程" class="headerlink" title="Sqoop2安装过程"></a>Sqoop2安装过程</h2><ul>
<li><em>1</em>: 下载最新版本的sqoop2:sqoop1.99.6</li>
</ul>
<p><code>wget http://mirrors.ustc.edu.cn/apache/sqoop/1.99.6/sqoop-1.99.6-bin-hadoop200.tar.gz</code></p>
<p>本人将其安装在服务器<code>slave01</code>中的<code>/opt/bigdata/sqoop</code>目录下。</p>
<ul>
<li><em>2</em>:配置环境变量:在<code>/etc/profile</code>中配置环境变量</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export SQOOP2_HOME=/opt/bigdata/sqoop</span><br><span class="line">export PATH=$PATH:$SQOOP2_HOME/bin</span><br><span class="line">export CATALINA_BASE=$SQOOP2_HOME/server</span><br><span class="line">export LOGDIR=$SQOOP2_HOME/logs</span><br></pre></td></tr></table></figure>
<p>在Bash中运行<code>source /etc/profile</code>使环境变量立即生效。</p>
<ul>
<li><em>3</em>: Sqoop服务端配置</li>
</ul>
<p>编辑<code>$SQOOP2_HOME/server/conf/catalina.properties</code>文件，修改<code>common.loader</code>配置，将Hadoop路径下的jar包全部包括进去。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">common.loader=$&#123;catalina.base&#125;/lib/*.jar,$&#123;catalina.base&#125;/lib/*.jar,$&#123;catalina.home&#125;/lib/*.jar,$&#123;catalina.home&#125;/lib/*.jar,$&#123;catalina.home&#125;/../lib/*.jar,/opt/bigdata/sqoop/server/lib/*.jar,/opt/hadoop-2.7.1/etc/hadoop,/opt/hadoop-2.7.1/share/hadoop/common/lib/*.jar,/opt/hadoop-2.7.1/share/hadoop/common/*.jar,/opt/hadoop-2.7.1/share/hadoop/hdfs/*.jar,/opt/hadoop-2.7.1/share/hadoop/hdfs/lib/*.jar,/opt/hadoop-2.7.1/share/hadoop/hdfs/*.jar,/opt/hadoop-2.7.1/share/hadoop/yarn/lib/*.jar,/opt/hadoop-2.7.1/share/hadoop/yarn/*.jar,/opt/hadoop-2.7.1/share/hadoop/mapreduce/lib/*.jar,/opt/hadoop-2.7.1/share/hadoop/mapreduce/*.jar,/opt/bigdata/hbase/lib/*.jar</span><br></pre></td></tr></table></figure>
<p>编辑<code>$SQOOP2_HOME/server/conf/sqoop.properties</code>文件，修改Hadoop安装的配置目录:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.sqoop.submission.engine.mapreduce.configuration.directory=/opt/hadoop-2.7.1/etc/hadoop/</span><br></pre></td></tr></table></figure>
<p>找到这行<code>org.apache.sqoop.repository.jdbc.url=jdbc:derby:@BASEDIR@/repository/db;create=true</code>,修改<code>@BASEDIR@</code>为<code>sqoop2</code>安装目录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.sqoop.repository.jdbc.url=jdbc:derby:/opt/bigdata/sqoop/repository/db;create=true</span><br></pre></td></tr></table></figure>
<ul>
<li><em>4</em>:下载数据库驱动</li>
</ul>
<p>必备驱动：Mysql数据取驱动是必须使用的，这里使用的是<code>mysql-connector-java-5.1.37-bin.jar</code></p>
<p>Oracle驱动：因为要连接Oracle数据库，所以还要使用oracle的驱动：<code>ojdbc7.jar</code></p>
<p>将上述两个驱动复制到<code>$SQOOP2_HOME/server/lib</code>目录下，至此，配置完成。</p>
<h2 id="验证sqoop2安装"><a href="#验证sqoop2安装" class="headerlink" title="验证sqoop2安装"></a>验证sqoop2安装</h2><p>使用<code>sqoop2-tool verify</code>验证Sqoo2是否安装成功：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave01 sqoop]$ sqoop2-tool verify</span><br><span class="line">Sqoop home directory: /opt/bigdata/sqoop</span><br><span class="line">Setting SQOOP_HTTP_PORT:     12000</span><br><span class="line">Setting SQOOP_ADMIN_PORT:     12001</span><br><span class="line">Using   CATALINA_OPTS:</span><br><span class="line">Adding to CATALINA_OPTS:    -Dsqoop.http.port=12000 -Dsqoop.admin.port=12001</span><br><span class="line">Apr 09, 2016 4:13:03 PM org.apache.catalina.startup.ClassLoaderFactory validateFile</span><br><span class="line">WARNING: Problem with directory [/opt/bigdata/sqoop/lib], exists: [false], isDirectory: [false], canRead: [false]</span><br><span class="line">Sqoop tool executor:</span><br><span class="line">	Version: 1.99.6</span><br><span class="line">	Revision: 07244c3915975f26f03d9e1edf09ab7d06619bb8</span><br><span class="line">	Compiled on Wed Apr 29 10:40:43 CST 2015 by root</span><br><span class="line">Running tool: class org.apache.sqoop.tools.tool.VerifyTool</span><br><span class="line">16/04/09 16:13:03 INFO core.SqoopServer: Booting up Sqoop server</span><br><span class="line">16/04/09 16:13:03 INFO core.PropertiesConfigurationProvider: Starting config file poller thread</span><br><span class="line">log4j: Parsing for [root] with value=[WARN, file].</span><br><span class="line">log4j: Level token is [WARN].</span><br><span class="line">log4j: Category root set to WARN</span><br><span class="line">log4j: Parsing appender named "file".</span><br><span class="line">log4j: Parsing layout options for "file".</span><br><span class="line">log4j: Setting property [conversionPattern] to [%d&#123;ISO8601&#125; %-5p %c&#123;2&#125; [%l] %m%n].</span><br><span class="line">log4j: End of parsing for "file".</span><br><span class="line">log4j: Setting property [file] to [@LOGDIR@/sqoop.log].</span><br><span class="line">log4j: Setting property [maxBackupIndex] to [5].</span><br><span class="line">log4j: Setting property [maxFileSize] to [25MB].</span><br><span class="line">log4j: setFile called: @LOGDIR@/sqoop.log, true</span><br><span class="line">log4j: setFile ended</span><br><span class="line">log4j: Parsed "file" options.</span><br><span class="line">log4j: Parsing for [org.apache.sqoop] with value=[DEBUG].</span><br><span class="line">log4j: Level token is [DEBUG].</span><br><span class="line">log4j: Category org.apache.sqoop set to DEBUG</span><br><span class="line">log4j: Handling log4j.additivity.org.apache.sqoop=[null]</span><br><span class="line">log4j: Parsing for [org.apache.derby] with value=[INFO].</span><br><span class="line">log4j: Level token is [INFO].</span><br><span class="line">log4j: Category org.apache.derby set to INFO</span><br><span class="line">log4j: Handling log4j.additivity.org.apache.derby=[null]</span><br><span class="line">log4j: Finished configuring.</span><br><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding in [jar:file:/opt/hadoop-2.7.1/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: Found binding in [jar:file:/opt/bigdata/hbase/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.</span><br><span class="line">SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]</span><br><span class="line">log4j: Could not find root logger information. Is this OK?</span><br><span class="line">log4j: Parsing for [default] with value=[INFO,defaultAppender].</span><br><span class="line">log4j: Level token is [INFO].</span><br><span class="line">log4j: Category default set to INFO</span><br><span class="line">log4j: Parsing appender named "defaultAppender".</span><br><span class="line">log4j: Parsing layout options for "defaultAppender".</span><br><span class="line">log4j: Setting property [conversionPattern] to [%d %-5p %c: %m%n].</span><br><span class="line">log4j: End of parsing for "defaultAppender".</span><br><span class="line">log4j: Setting property [file] to [@LOGDIR@/default.audit].</span><br><span class="line">log4j: setFile called: @LOGDIR@/default.audit, true</span><br><span class="line">log4j: setFile ended</span><br><span class="line">log4j: Parsed "defaultAppender" options.</span><br><span class="line">log4j: Handling log4j.additivity.default=[null]</span><br><span class="line">log4j: Finished configuring.</span><br><span class="line">log4j: Finalizing appender named [EventCounter].</span><br><span class="line">Exception in thread "PurgeThread" org.apache.sqoop.common.SqoopException: JDBCREPO_0009:Failed to finalize transaction</span><br><span class="line">	at org.apache.sqoop.repository.JdbcRepositoryTransaction.close(JdbcRepositoryTransaction.java:115)</span><br><span class="line">	at org.apache.sqoop.repository.JdbcRepository.doWithConnection(JdbcRepository.java:111)</span><br><span class="line">	at org.apache.sqoop.repository.JdbcRepository.doWithConnection(JdbcRepository.java:63)</span><br><span class="line">	at org.apache.sqoop.repository.JdbcRepository.purgeSubmissions(JdbcRepository.java:591)</span><br><span class="line">	at org.apache.sqoop.driver.JobManager$PurgeThread.run(JobManager.java:660)</span><br><span class="line">Caused by: java.sql.SQLNonTransientConnectionException: No current connection.</span><br><span class="line">	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStack(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)</span><br><span class="line">	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)</span><br><span class="line">	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)</span><br><span class="line">	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:211)</span><br><span class="line">	at org.apache.sqoop.repository.JdbcRepositoryTransaction.close(JdbcRepositoryTransaction.java:112)</span><br><span class="line">	... 4 more</span><br><span class="line">Caused by: java.sql.SQLException: No current connection.</span><br><span class="line">	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)</span><br><span class="line">	... 15 more</span><br><span class="line">Verification was successful.</span><br><span class="line">Tool class org.apache.sqoop.tools.tool.VerifyTool has finished correctly.</span><br><span class="line">[hadoop@slave01 sqoop]$</span><br></pre></td></tr></table></figure>
<p>忽略<code>JDBCREPO_0009</code>异常，出现<code>Verification was successful</code>则说明安装是没有问题的。</p>
<h2 id="连接Oracle数据库"><a href="#连接Oracle数据库" class="headerlink" title="连接Oracle数据库"></a>连接Oracle数据库</h2><ul>
<li>1 启动sqoop</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave01 sqoop]$ sqoop.sh server start</span><br><span class="line">Sqoop home directory: /opt/bigdata/sqoop</span><br><span class="line">Setting SQOOP_HTTP_PORT:     <span class="number">12000</span></span><br><span class="line">Setting SQOOP_ADMIN_PORT:     <span class="number">12001</span></span><br><span class="line">Using   CATALINA_OPTS:</span><br><span class="line">Adding to CATALINA_OPTS:    -Dsqoop.http.port=<span class="number">12000</span> -Dsqoop.admin.port=<span class="number">12001</span></span><br><span class="line">Using CATALINA_BASE:   /opt/bigdata/sqoop/server</span><br><span class="line">Using CATALINA_HOME:   /opt/bigdata/sqoop/server</span><br><span class="line">Using CATALINA_TMPDIR: /opt/bigdata/sqoop/server/temp</span><br><span class="line">Using JRE_HOME:        /opt/oracle_jdk_1<span class="number">.7</span></span><br><span class="line">Using CLASSPATH:       /opt/bigdata/sqoop/server/bin/bootstrap.jar</span><br></pre></td></tr></table></figure>
<ul>
<li>2 使用<code>sqoop2-shell</code>操作</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave01 sqoop]$ sqoop2-shell</span><br><span class="line">Sqoop home directory: /opt/bigdata/sqoop</span><br><span class="line">Sqoop Shell: Type <span class="string">'help'</span> <span class="keyword">or</span> <span class="string">'\h'</span> <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">sqoop:<span class="number">000</span>&gt; show version --all</span><br><span class="line">client version:</span><br><span class="line">  Sqoop <span class="number">1.99</span><span class="number">.6</span> source revision <span class="number">07244</span>c3915975f26f03d9e1edf09ab7d06619bb8</span><br><span class="line">  Compiled by root on Wed Apr <span class="number">29</span> <span class="number">10</span>:<span class="number">40</span>:<span class="number">43</span> CST <span class="number">2015</span></span><br><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/opt/hadoop<span class="number">-2.7</span><span class="number">.1</span>/share/hadoop/common/lib/slf4j-log4j12<span class="number">-1.7</span><span class="number">.10</span>.jar!/org/slf4j/impl/StaticLoggerBinder.<span class="keyword">class</span>]</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/opt/bigdata/sqoop/shell/lib/slf4j-log4j12<span class="number">-1.6</span><span class="number">.1</span>.jar!/org/slf4j/impl/StaticLoggerBinder.<span class="keyword">class</span>]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html<span class="comment">#multiple_bindings for an explanation.</span></span><br><span class="line">SLF4J: Actual binding <span class="keyword">is</span> of type [org.slf4j.impl.Log4jLoggerFactory]</span><br><span class="line"><span class="number">16</span>/<span class="number">04</span>/<span class="number">09</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">50</span> WARN util.NativeCodeLoader: Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</span><br><span class="line">server version:</span><br><span class="line">  Sqoop <span class="number">1.99</span><span class="number">.6</span> source revision <span class="number">07244</span>c3915975f26f03d9e1edf09ab7d06619bb8</span><br><span class="line">  Compiled by root on Wed Apr <span class="number">29</span> <span class="number">10</span>:<span class="number">40</span>:<span class="number">43</span> CST <span class="number">2015</span></span><br><span class="line">API versions:</span><br><span class="line">  [v1]</span><br><span class="line">sqoop:<span class="number">000</span>&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>3 查看可用的connectors</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; show connector</span><br><span class="line">+----+------------------------+---------+------------------------------------------------------+----------------------+</span><br><span class="line">| Id |          Name          | Version |                        Class                         | Supported Directions |</span><br><span class="line">+----+------------------------+---------+------------------------------------------------------+----------------------+</span><br><span class="line">| <span class="number">1</span>  | kite-connector         | <span class="number">1.99</span><span class="number">.6</span>  | org.apache.sqoop.connector.kite.KiteConnector        | FROM/TO              |</span><br><span class="line">| <span class="number">2</span>  | kafka-connector        | <span class="number">1.99</span><span class="number">.6</span>  | org.apache.sqoop.connector.kafka.KafkaConnector      | TO                   |</span><br><span class="line">| <span class="number">3</span>  | hdfs-connector         | <span class="number">1.99</span><span class="number">.6</span>  | org.apache.sqoop.connector.hdfs.HdfsConnector        | FROM/TO              |</span><br><span class="line">| <span class="number">4</span>  | generic-jdbc-connector | <span class="number">1.99</span><span class="number">.6</span>  | org.apache.sqoop.connector.jdbc.GenericJdbcConnector | FROM/TO              |</span><br><span class="line">+----+------------------------+---------+------------------------------------------------------+----------------------+</span><br><span class="line">sqoop:<span class="number">000</span>&gt;</span><br></pre></td></tr></table></figure>
<p>可以看到，我们将要使用的是hdfs和jdbc连接。</p>
<ul>
<li>4 创建Oracle连接</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; create link -c <span class="number">4</span></span><br><span class="line">Creating link <span class="keyword">for</span> connector <span class="keyword">with</span> id <span class="number">4</span></span><br><span class="line">Please fill following values to create new link object</span><br><span class="line">Name: Oracle DB</span><br><span class="line"></span><br><span class="line">Link configuration</span><br><span class="line"></span><br><span class="line">JDBC Driver Class: oracle.jdbc.OracleDriver</span><br><span class="line">JDBC Connection String: jdbc:oracle:thin:@//<span class="number">192.168</span><span class="number">.100</span><span class="number">.108</span>/orcl</span><br><span class="line">Username: c<span class="comment">##hadoop</span></span><br><span class="line">Password: ******</span><br><span class="line">JDBC Connection Properties:</span><br><span class="line">There are currently <span class="number">0</span> values <span class="keyword">in</span> the map:</span><br><span class="line">entry<span class="comment">#</span></span><br><span class="line">New link was successfully created <span class="keyword">with</span> validation status OK <span class="keyword">and</span> persistent id <span class="number">6</span></span><br></pre></td></tr></table></figure>
<ul>
<li>5 创建HDFS连接</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; create link -c <span class="number">3</span></span><br><span class="line">Creating link <span class="keyword">for</span> connector <span class="keyword">with</span> id <span class="number">3</span></span><br><span class="line">Please fill following values to create new link object</span><br><span class="line">Name: HDFS Link</span><br><span class="line"></span><br><span class="line">Link configuration</span><br><span class="line"></span><br><span class="line">HDFS URI: hdfs://slave01:<span class="number">9000</span>/</span><br><span class="line">Hadoop conf directory: /opt/hadoop<span class="number">-2.7</span><span class="number">.1</span>/etc/hadoop</span><br><span class="line">New link was successfully created <span class="keyword">with</span> validation status OK <span class="keyword">and</span> persistent id <span class="number">7</span></span><br></pre></td></tr></table></figure>
<ul>
<li>6 验证连接</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; show link</span><br><span class="line">+----+------------+--------------+------------------------+---------+</span><br><span class="line">| Id |    Name    | Connector Id |     Connector Name     | Enabled |</span><br><span class="line">+----+------------+--------------+------------------------+---------+</span><br><span class="line">| <span class="number">6</span>  | Oracle DB  | <span class="number">4</span>            | generic-jdbc-connector | true    |</span><br><span class="line">| <span class="number">7</span>  | HDFS Link  | <span class="number">3</span>            | hdfs-connector         | true    |</span><br><span class="line">+----+------------+--------------+------------------------+---------+</span><br></pre></td></tr></table></figure>
<ul>
<li>7 创建<code>Sqoop Job</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; create job -f <span class="number">6</span> -t <span class="number">7</span></span><br><span class="line">Creating job <span class="keyword">for</span> links <span class="keyword">with</span> <span class="keyword">from</span> id <span class="number">6</span> <span class="keyword">and</span> to id <span class="number">7</span></span><br><span class="line">Please fill following values to create new job object</span><br><span class="line">Name: Oracle HDFS</span><br><span class="line"></span><br><span class="line">From database configuration</span><br><span class="line"></span><br><span class="line">Schema name: C<span class="comment">##hadoop</span></span><br><span class="line">Table name: T_DTXX_GPSXX20160317</span><br><span class="line">Table SQL statement:</span><br><span class="line">Table column names: ID,ZDBH,GPSSJ,JLSJ,CCSJ,JD,WD,WXSL,BZ</span><br><span class="line">Partition column name: ID</span><br><span class="line">Null value allowed <span class="keyword">for</span> the partition column:</span><br><span class="line">Boundary query:</span><br><span class="line"></span><br><span class="line">Incremental read</span><br><span class="line"></span><br><span class="line">Check column:</span><br><span class="line">Last value:</span><br><span class="line"></span><br><span class="line">To HDFS configuration</span><br><span class="line"></span><br><span class="line">Override null value:</span><br><span class="line">Null value:</span><br><span class="line">Output format:</span><br><span class="line">  <span class="number">0</span> : TEXT_FILE</span><br><span class="line">  <span class="number">1</span> : SEQUENCE_FILE</span><br><span class="line">Choose: <span class="number">0</span></span><br><span class="line">Compression format:</span><br><span class="line">  <span class="number">0</span> : NONE</span><br><span class="line">  <span class="number">1</span> : DEFAULT</span><br><span class="line">  <span class="number">2</span> : DEFLATE</span><br><span class="line">  <span class="number">3</span> : GZIP</span><br><span class="line">  <span class="number">4</span> : BZIP2</span><br><span class="line">  <span class="number">5</span> : LZO</span><br><span class="line">  <span class="number">6</span> : LZ4</span><br><span class="line">  <span class="number">7</span> : SNAPPY</span><br><span class="line">  <span class="number">8</span> : CUSTOM</span><br><span class="line">Choose: <span class="number">0</span></span><br><span class="line">Custom compression format:</span><br><span class="line">Output directory: /user/hadoop/oracledata</span><br><span class="line">Append mode:</span><br><span class="line"></span><br><span class="line">Throttling resources</span><br><span class="line"></span><br><span class="line">Extractors:</span><br><span class="line">Loaders:</span><br><span class="line">New job was successfully created <span class="keyword">with</span> validation status OK  <span class="keyword">and</span> persistent id <span class="number">3</span></span><br><span class="line">sqoop:<span class="number">000</span>&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>8 查看Job</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; show job</span><br><span class="line">+----+--------------+----------------+--------------+---------+</span><br><span class="line">| Id |     Name     | From Connector | To Connector | Enabled |</span><br><span class="line">+----+--------------+----------------+--------------+---------+</span><br><span class="line">| <span class="number">1</span>  | OH           | <span class="number">4</span>              | <span class="number">3</span>            | true    |</span><br><span class="line">| <span class="number">2</span>  | <span class="number">1519</span>         | <span class="number">4</span>              | <span class="number">3</span>            | true    |</span><br><span class="line">| <span class="number">3</span>  | Oracle HDFS  | <span class="number">4</span>              | <span class="number">3</span>            | true    |</span><br><span class="line">+----+--------------+----------------+--------------+---------+</span><br></pre></td></tr></table></figure>
<p>其中<code>3</code>就是我们刚刚创建的Job。</p>
<ul>
<li>9 启动Job</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; start job -j <span class="number">3</span></span><br><span class="line">Submission details</span><br><span class="line">Job ID: <span class="number">3</span></span><br><span class="line">Server URL: http://localhost:<span class="number">12000</span>/sqoop/</span><br><span class="line">Created by: hadoop</span><br><span class="line">Creation date: <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">46</span>:<span class="number">57</span> CST</span><br><span class="line">Lastly updated by: hadoop</span><br><span class="line">External ID: job_1459172324738_0017</span><br><span class="line">	http://slave01:<span class="number">8088</span>/proxy/application_1459172324738_0017/</span><br><span class="line">Source Connector schema: Schema&#123;name=C<span class="comment">##hadoop.T_DTXX_GPSXX20160317,columns=[</span></span><br><span class="line">	Text&#123;name=ID,nullable=true,type=TEXT,charSize=null&#125;,</span><br><span class="line">	Text&#123;name=ZDBH,nullable=true,type=TEXT,charSize=null&#125;,</span><br><span class="line">	Date&#123;name=GPSSJ,nullable=true,type=DATE_TIME,hasFraction=true,hasTimezone=false&#125;,</span><br><span class="line">	Date&#123;name=JLSJ,nullable=true,type=DATE_TIME,hasFraction=true,hasTimezone=false&#125;,</span><br><span class="line">	Date&#123;name=CCSJ,nullable=true,type=DATE_TIME,hasFraction=true,hasTimezone=false&#125;,</span><br><span class="line">	Text&#123;name=JD,nullable=true,type=TEXT,charSize=null&#125;,</span><br><span class="line">	Text&#123;name=WD,nullable=true,type=TEXT,charSize=null&#125;,</span><br><span class="line">	Decimal&#123;name=WXSL,nullable=true,type=DECIMAL,precision=<span class="number">2</span>,scale=<span class="number">0</span>&#125;,</span><br><span class="line">	Text&#123;name=BZ,nullable=true,type=TEXT,charSize=null&#125;]&#125;</span><br><span class="line"><span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">46</span>:<span class="number">57</span> CST: BOOTING  - Progress <span class="keyword">is</span> <span class="keyword">not</span> available</span><br></pre></td></tr></table></figure>
<p>没有抛出异常后，sqoop就已经在后台开始运行了，这时候可以查看Hadoop JobServer,可以看到任务已经在运行了。</p>
<ul>
<li>10 查看HDFS上数据</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave01 sqoop]$ hdfs dfs -ls oracledata</span><br><span class="line">Found <span class="number">8</span> items</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup   <span class="number">46362076</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">47</span> oracledata/<span class="number">034</span>fd092-bd7a<span class="number">-462</span>a-a566<span class="number">-05</span>cd123d11ed.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup   <span class="number">92831643</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">47</span> oracledata/<span class="number">0</span>b537981<span class="number">-1711</span><span class="number">-411</span>a-bb09-d304c83839ea.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup   <span class="number">46547213</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">47</span> oracledata/<span class="number">1526e2</span>d2-b385<span class="number">-4</span>a45<span class="number">-9841</span>-f8001fc74a7e.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup  <span class="number">185898348</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">48</span> oracledata/<span class="number">851645</span>db-b5a3<span class="number">-4265</span><span class="number">-8</span>ead<span class="number">-916</span>c8680dc11.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup   <span class="number">92913401</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">47</span> oracledata/da722cf7<span class="number">-38</span>d9<span class="number">-41</span>c0-b17f-dcd5a19a69e6.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup  <span class="number">139531748</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">48</span> oracledata/dacf1fc9-ca48<span class="number">-4058</span><span class="number">-837e-9380</span>aefc2dfe.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup  <span class="number">139583915</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">48</span> oracledata/e393d0f5-f05a<span class="number">-4790</span>-bde0<span class="number">-9</span>d8d8d4a7b06.txt</span><br></pre></td></tr></table></figure>
<p>至此，数据已经导入了</p>
<h2 id="常用命令总结"><a href="#常用命令总结" class="headerlink" title="常用命令总结"></a>常用命令总结</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">set option --name verbose --value true 设置异常显示，便于查错</span><br><span class="line">sqoop.sh server start    启动</span><br><span class="line">sqoop.sh server stop     停止</span><br><span class="line">sqoop.sh client          进入客户端</span><br><span class="line">set server --host hadoopMaster --port <span class="number">12000</span> --webapp sqoop 设置服务器，注意hadoopMaster为hdfs主机名</span><br><span class="line">show connector --all    查看连接类型</span><br><span class="line">create link --cid <span class="number">1</span>    创建连接，cid为连接类型id</span><br><span class="line">show link 查看连接</span><br><span class="line">update link -l <span class="number">1</span> 修改id为<span class="number">1</span>的连接</span><br><span class="line">delete link -l <span class="number">1</span> 删除id为<span class="number">1</span>的连接</span><br><span class="line">create job -f <span class="number">1</span> -t <span class="number">2</span> 创建从连接<span class="number">1</span>到连接<span class="number">2</span>的job</span><br><span class="line">show job 查看job</span><br><span class="line">update job -jid <span class="number">1</span>    修改job</span><br><span class="line">delete job -jid <span class="number">1</span>    删除job</span><br><span class="line">status job -jid <span class="number">1</span>    看看job状态</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Oracle 12c 使用入门(1) ——SQL*Plus]]></title>
      <url>http://keyunluo.github.io/2016/03/25/2016-03-25-oracle-12c-using.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录开始使用Oracle12c的一些步骤以及注意事项。</p>
</blockquote>
<a id="more"></a>
<hr>
<h2 id="启动和关闭Oracle数据库"><a href="#启动和关闭Oracle数据库" class="headerlink" title="启动和关闭Oracle数据库"></a>启动和关闭Oracle数据库</h2><p>刚开始安装完Oracle数据库时，如果数据库未设置成自动启动，则启动服务后还需要启动数据库。启动数据库需要以<code>sys</code>用户在<code>SQL * PLUS</code>中执行<code>startup</code>命令。下面命令以操作系统验证的方式连接数据库，不需要输入账号和密码，连接数据库后，以sys用户执行各个操作：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave08 ~]$ sqlplus / as sysdba</span><br><span class="line"></span><br><span class="line">SQL*Plus: Release 12.1.0.2.0 Production on Sat Mar 26 15:43:16 2016</span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2014, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">Oracle Database 12c Enterprise Edition Release 12.1.0.2.0 - 64bit Production</span><br><span class="line">With the Partitioning, OLAP, Advanced Analytics and Real Application Testing options</span><br><span class="line"></span><br><span class="line">SQL&gt; startup</span><br><span class="line">ORA-01081: cannot start already-running ORACLE - shut it down first</span><br><span class="line">SQL&gt; shutdown immediate</span><br><span class="line">Database closed.</span><br><span class="line">Database dismounted.</span><br><span class="line">ORACLE instance shut down.</span><br><span class="line">SQL&gt; startup</span><br><span class="line">ORACLE instance started.</span><br><span class="line"></span><br><span class="line">Total System Global Area 4.0534E+10 bytes</span><br><span class="line">Fixed Size		    7653432 bytes</span><br><span class="line">Variable Size		 6308235208 bytes</span><br><span class="line">Database Buffers	 3.4091E+10 bytes</span><br><span class="line">Redo Buffers		  126562304 bytes</span><br><span class="line">Database mounted.</span><br><span class="line">Database opened.</span><br><span class="line">SQL&gt;</span><br></pre></td></tr></table></figure>
<p>关闭数据库使用shutdown命令，可以附加normal,transactional,immediate以及abort选项，默认选项为normal，会等待所有用户退出连接后再关闭数据库，一般使用<code>immediate</code>。</p>
<h2 id="常用SQL-PLus操作"><a href="#常用SQL-PLus操作" class="headerlink" title="常用SQL*PLus操作"></a>常用SQL*PLus操作</h2><p>Oracle数据库的客户端工具主要有SQL * Plus(字符界面数据库工具，面向应用开发人员以及数据库管理人员，用于执行SQL命令，编写存储过程，以及各种数据库管理任务) ,SQL Developer(Java编写的一个图形界面工具，面向对象主要是数据库应用开发人员) ,Enterprise Manager(OEM，使用浏览器管理数据，面向对象为数据库管理员)。</p>
<h4 id="使用SQL-Plus连接到本地数据库"><a href="#使用SQL-Plus连接到本地数据库" class="headerlink" title="使用SQL*Plus连接到本地数据库"></a>使用SQL*Plus连接到本地数据库</h4><p>要使用数据库，必须使用合法的用户及密码， 有以下三种方式:</p>
<ul>
<li>启动SQL*Plus的同时，输入用户名及密码。</li>
<li>使用 nolog选项，单独启动SQL*Plus，然后再输入用户名和密码。</li>
<li>单独启动SQL*Plus，根据提示输入用户名和密码。</li>
</ul>
<h4 id="切换连接用户"><a href="#切换连接用户" class="headerlink" title="切换连接用户"></a>切换连接用户</h4><p>SQL*Plus使用<code>connect</code>命令切换用户，<code>connect</code>关键字可以简写为<code>conn</code>,使用<code>show user</code>命令可以查看当前的数据库的用户名称。</p>
<h4 id="切换数据库"><a href="#切换数据库" class="headerlink" title="切换数据库"></a>切换数据库</h4><p>oracle的一个数据库对应一个服务，切换数据库也就是切换数据库服务。本地服务器如果创建了多个数据库，可以通过设置ORACLE_SID环境变量切换SQL*Plus默认连接的数据库。例如：<code>set oracle_sid=law12</code>便可以改变默认连接的数据库。</p>
<h4 id="执行SQL脚本文件"><a href="#执行SQL脚本文件" class="headerlink" title="执行SQL脚本文件"></a>执行SQL脚本文件</h4><p>可以在文本文件中编辑任意SQL命令，然后保存为sql脚本文件，便可以在SQL*Plus中执行该脚本，使用<code>Start</code>或<code>@</code> 该脚本。</p>
<h2 id="设置SQL-Plus环境"><a href="#设置SQL-Plus环境" class="headerlink" title="设置SQL*Plus环境"></a>设置SQL*Plus环境</h2><p>SQL*Plus在启动时，会自动执行<code>%ORACLE_HOME%\sqlplus\admin</code>目录下的<code>glogin.sql</code>文件，可以把经常使用的环境命令设置添加到次文件中。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">define_editor=vim  #设置ED命令默认使用的编辑器</span><br><span class="line">set pagesize 100    #每页大小</span><br><span class="line">set linesize 300    #设置每行容纳的字符数量</span><br><span class="line">set sqlprompt `&amp;_user&amp;_connect_identifier&gt;`  #把SQL提示符修改为当前用户名称以及连接的字符串</span><br></pre></td></tr></table></figure>
<p>在SQL*Plus中，可以使用<code>column column_name format an</code>来设置字符串列的显示宽度，以避免显示结果因为换行而显得凌乱，其中的column以及format可以分别简写为col及for,a后面的数字用于指定字符的数量。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">col table_name for a8</span><br><span class="line">col file_name  for a60</span><br><span class="line">col segment_name for a8</span><br><span class="line">col tablespace_name for a8</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu14.04配置L2TP-VPN]]></title>
      <url>http://keyunluo.github.io/2016/03/20/2016-03-20-ubuntu14-l2tp-vpn.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录在Ubuntu14.04上安装L2TP插件。</p>
</blockquote>
<a id="more"></a>
<h2 id="添加PPA"><a href="#添加PPA" class="headerlink" title="添加PPA"></a>添加PPA</h2><p><code>sudo apt-add-repository ppa:seriy-pr/network-manager-l2tp</code></p>
<h2 id="刷新软件包缓存"><a href="#刷新软件包缓存" class="headerlink" title="刷新软件包缓存"></a>刷新软件包缓存</h2><p><code>sudo apt-get update</code></p>
<h2 id="安装network-manager-l2tp"><a href="#安装network-manager-l2tp" class="headerlink" title="安装network-manager-l2tp"></a>安装network-manager-l2tp</h2><p><code>sudo apt-get install network-manager-l2tp-gnome</code></p>
<h2 id="由于墙问题无法添加PPA"><a href="#由于墙问题无法添加PPA" class="headerlink" title="由于墙问题无法添加PPA"></a>由于墙问题无法添加PPA</h2><p> 若无法进行上述操作，则可以在<a href="https://launchpad.net/~seriy-pr/+archive/ubuntu/network-manager-l2tp/+packages" target="_blank" rel="external">网站</a>下载软件包<code>network-manager-l2tp</code>，<code>network-manager-l2tp-gnome</code>，根据系统是32位还是64位下载相应版本的<code>deb</code>包后先后安装(注意：需要联网下载一些依赖包，需要联网,注意顺序)。</p>
<h2 id="安装完之后需要运行下面命令"><a href="#安装完之后需要运行下面命令" class="headerlink" title="安装完之后需要运行下面命令"></a>安装完之后需要运行下面命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service xl2tpd stop</span><br><span class="line">sudo update-rc.d xl2tpd disable</span><br></pre></td></tr></table></figure>
<h2 id="重启机器，新建VPN"><a href="#重启机器，新建VPN" class="headerlink" title="重启机器，新建VPN"></a>重启机器，新建VPN</h2><p>在<code>网络</code>-<code>编辑连接</code>-<code>添加</code>-<code>选择连接类型</code>-<code>VPN</code>-<code>L2TP</code>,然后配置网关，用户名密码，若需要共享密钥，则点击<code>ipses settings</code>,在<code>pre-shared key</code>内填入公司分配的共享密钥，否则就可以直接连接VPN了。</p>
<p>图：选择VPN类型</p>
<p><img src="/resource/blog/2016-03/L2TP-VPN.png" alt="L2TP-VPN"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[大数据二次排序]]></title>
      <url>http://keyunluo.github.io/2016/03/07/2016-03-07-hadoop-secondary-sort.html</url>
      <content type="html"><![CDATA[<h2 id="问题概述"><a href="#问题概述" class="headerlink" title="问题概述"></a>问题概述</h2><blockquote>
<p>在hadoop中每个reduce的输入的key都是有序的，而value则是无序的。而且同一个job运行多次，由于map完成顺序不同，reduce收到的value顺序是不固定的,为了使reduce收到有序的value,便产生了二次排序的概念。</p>
</blockquote>
<a id="more"></a>
<p><strong>二次排序实例</strong>
考虑到在科学实验中的温度数据，它们可能的格式如下，每一列分别为 <code>year</code>,<code>month</code>,<code>day</code>,<code>temperature</code>:
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">01</span>,<span class="number">5</span></span><br><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">02</span>,<span class="number">6</span></span><br><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">03</span>,<span class="number">2</span></span><br><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">04</span>,<span class="number">1</span></span><br><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">05</span>,<span class="number">10</span></span><br><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">06</span>,<span class="number">4</span></span><br><span class="line">...</span><br><span class="line"><span class="number">2001</span>,<span class="number">11</span>,<span class="number">01</span>,<span class="number">18</span></span><br><span class="line"><span class="number">2001</span>,<span class="number">11</span>,<span class="number">02</span>,<span class="number">19</span></span><br><span class="line"><span class="number">2001</span>,<span class="number">11</span>,<span class="number">03</span>,<span class="number">15</span></span><br><span class="line"><span class="number">2001</span>,<span class="number">11</span>,<span class="number">04</span>,<span class="number">12</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>我们想按照<code>year-month</code>对温度数据进行升序排序并输出，并且我们希望对<code>reducer</code>中的迭代值是已经排序的。因此，期望的输出为：
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2012</span><span class="number">-01</span>: <span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">10.</span>..</span><br><span class="line"><span class="number">2001</span><span class="number">-11</span>: <span class="number">12</span>,<span class="number">15</span>,<span class="number">18</span>,<span class="number">19.</span>..</span><br></pre></td></tr></table></figure></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>为了使用MapReduce编程框架,当数据量很大时在reduce阶段在内存中对同一个key里面的值进行排序是不太可能的，因此<code>通过向原生key增加一部分或全部值(value)作为复合key来实现排序操作</code>。</p>
<p><strong>方法概要</strong>:</p>
<ul>
<li><em>1</em>:使用<code>Value-to-Key</code>设计模式：设计复合Key-Value,<code>(K，V1,V2)=&gt;(K1,V2)</code>，其中K是原生Key，V1是要排序的值，V2是其他值，K1是复合Key，显然K1=(K,V1)。</li>
<li><em>2</em>:使用MapReduce执行框架进行排序(注意：不是直接在内存中排序，而是利用集群节点进行排序)。</li>
<li><em>3</em>:在多个Key-Value键值对中保存状态来进行处理，可以通过原生键对mapper输出的中间结果进行partition操作。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git 常用命令整理]]></title>
      <url>http://keyunluo.github.io/2016/03/07/2016-03-07-git-common-command.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>Git</strong>简单记录Git的常用方法，以备查询。</p>
</blockquote>
<a id="more"></a>
<h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置使用git仓库的人员姓名</span></span><br><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">"Your Name Comes Here"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置使用git仓库的人员email</span></span><br><span class="line">git config --<span class="keyword">global</span> user.email you@yourdomain.example.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置到缓存 默认15分钟</span></span><br><span class="line">git config --<span class="keyword">global</span> credential.helper cache</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改缓存时间</span></span><br><span class="line">git config --<span class="keyword">global</span> credential.helper <span class="string">'cache --timeout=3600'</span></span><br><span class="line"></span><br><span class="line">git config --<span class="keyword">global</span> color.ui true</span><br><span class="line">git config --<span class="keyword">global</span> alias.co checkout</span><br><span class="line">git config --<span class="keyword">global</span> alias.ci commit</span><br><span class="line">git config --<span class="keyword">global</span> alias.st status</span><br><span class="line">git config --<span class="keyword">global</span> alias.br branch</span><br><span class="line">git config --<span class="keyword">global</span> core.editor <span class="string">"mate -w"</span>    <span class="comment"># 设置Editor使用textmate</span></span><br><span class="line">git config <span class="number">-1</span> <span class="comment">#列举所有配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#用户的git配置文件~/.gitconfig</span></span><br></pre></td></tr></table></figure>
<!-- more -->
<hr>
<h2 id="查看、添加、提交、删除、找回，重置修改文件"><a href="#查看、添加、提交、删除、找回，重置修改文件" class="headerlink" title="查看、添加、提交、删除、找回，重置修改文件"></a>查看、添加、提交、删除、找回，重置修改文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">git help &lt;command&gt;  <span class="comment"># 显示command的help</span></span><br><span class="line">git show            <span class="comment"># 显示某次提交的内容</span></span><br><span class="line">git show $id</span><br><span class="line"></span><br><span class="line">git co  -- &lt;file&gt;   <span class="comment"># 抛弃工作区修改</span></span><br><span class="line">git co  .           <span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line">git add &lt;file&gt;      <span class="comment"># 将工作文件修改提交到本地暂存区</span></span><br><span class="line">git add .           <span class="comment"># 将所有修改过的工作文件提交暂存区</span></span><br><span class="line"></span><br><span class="line">git rm &lt;file&gt;       <span class="comment"># 从版本库中删除文件</span></span><br><span class="line">git rm &lt;file&gt; --cached  <span class="comment"># 从版本库中删除文件，但不删除文件</span></span><br><span class="line"></span><br><span class="line">git reset &lt;file&gt;    <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line">git reset -- .      <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line">git reset --hard    <span class="comment"># 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span></span><br><span class="line"></span><br><span class="line">git ci &lt;file&gt;</span><br><span class="line">git ci .</span><br><span class="line">git ci -a           <span class="comment"># 将git add, git rm和git ci等操作都合并在一起做</span></span><br><span class="line">git ci -am <span class="string">"some comments"</span></span><br><span class="line">git ci --amend      <span class="comment"># 修改最后一次提交记录</span></span><br><span class="line"></span><br><span class="line">git revert &lt;$id&gt;    <span class="comment"># 恢复某次提交的状态，恢复动作本身也创建了一次提交对象</span></span><br><span class="line">git revert HEAD     <span class="comment"># 恢复最后一次提交的状态</span></span><br><span class="line"><span class="comment">#恢复</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="查看文件diff"><a href="#查看文件diff" class="headerlink" title="查看文件diff"></a>查看文件diff</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git diff &lt;file&gt;     <span class="comment"># 比较当前文件和暂存区文件差异</span></span><br><span class="line">git diff</span><br><span class="line">git diff &lt;$id1&gt; &lt;$id2&gt;   <span class="comment"># 比较两次提交之间的差异</span></span><br><span class="line">git diff &lt;branch1&gt;..&lt;branch2&gt; <span class="comment"># 在两个分支之间比较</span></span><br><span class="line">git diff --staged   <span class="comment"># 比较暂存区和版本库差异</span></span><br><span class="line">git diff --cached   <span class="comment"># 比较暂存区和版本库差异</span></span><br><span class="line">git diff --stat     <span class="comment"># 仅仅比较统计信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#退出diff查看状态直接输入Q即可.</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git log &lt;file&gt;      <span class="comment"># 查看该文件每次提交记录</span></span><br><span class="line">git log -p &lt;file&gt;   <span class="comment"># 查看每次详细修改内容的diff</span></span><br><span class="line">git log -p <span class="number">-2</span>       <span class="comment"># 查看最近两次详细修改内容的diff</span></span><br><span class="line">git log --stat      <span class="comment">#查看提交统计信息</span></span><br></pre></td></tr></table></figure>
<p> tig
Mac上可以使用tig代替diff和log，brew install tig</p>
<hr>
<h2 id="取得Git仓库"><a href="#取得Git仓库" class="headerlink" title="取得Git仓库"></a>取得Git仓库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#初始化一个版本仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment">#Clone远程版本库</span></span><br><span class="line">git clone git@xbc.me:wordpress.gi</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加远程版本库origin，语法为 git remote add [shortname] [url]</span></span><br><span class="line">git remote add origin git@xbc.me:wordpress.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看远程仓库</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示远程信息</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="提交你的修改"><a href="#提交你的修改" class="headerlink" title="提交你的修改"></a>提交你的修改</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加当前修改的文件到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果你自动追踪文件，包括你已经手动删除的，状态为Deleted的文件</span></span><br><span class="line">git add -u</span><br><span class="line"></span><br><span class="line"><span class="comment">#提交你的修改</span></span><br><span class="line">git commit –m <span class="string">"你的注释"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#推送你的更新到远程服务器,语法为 git push [远程名] [本地分支]:[远程分支]</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件状态</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment">#跟踪新文件</span></span><br><span class="line">git add readme.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#从当前跟踪列表移除文件，并完全删除</span></span><br><span class="line">git rm readme.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#仅在暂存区删除，保留文件在当前目录，不再跟踪</span></span><br><span class="line">git rm –cached readme.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#重命名文件</span></span><br><span class="line">git mv reademe.txt readme</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看提交的历史记录</span></span><br><span class="line">git log</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改最后一次提交注释的，利用–amend参数</span></span><br><span class="line">git commit --amend</span><br><span class="line"></span><br><span class="line"><span class="comment">#忘记提交某些修改，下面的三条命令只会得到一个提交。</span></span><br><span class="line">git commit –m &amp;quot;add readme.txt&amp;quot;</span><br><span class="line">git add readme_forgotten</span><br><span class="line">git commit –amend</span><br><span class="line"></span><br><span class="line"><span class="comment">#假设你已经使用git add .，将修改过的文件a、b加到暂存区</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#现在你只想提交a文件，不想提交b文件，应该这样</span></span><br><span class="line">git reset HEAD b</span><br><span class="line"></span><br><span class="line"><span class="comment">#取消对文件的修改</span></span><br><span class="line">git checkout –- readme.txt</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="查看、切换、创建和删除分支"><a href="#查看、切换、创建和删除分支" class="headerlink" title="查看、切换、创建和删除分支"></a>查看、切换、创建和删除分支</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">git br -r           <span class="comment"># 查看远程分支</span></span><br><span class="line">git br &lt;new_branch&gt; <span class="comment"># 创建新的分支</span></span><br><span class="line">git br -v           <span class="comment"># 查看各个分支最后提交信息</span></span><br><span class="line">git br --merged     <span class="comment"># 查看已经被合并到当前分支的分支</span></span><br><span class="line">git br --no-merged  <span class="comment"># 查看尚未被合并到当前分支的分支</span></span><br><span class="line"></span><br><span class="line">git co &lt;branch&gt;     <span class="comment"># 切换到某个分支</span></span><br><span class="line">git co -b &lt;new_branch&gt; <span class="comment"># 创建新的分支，并且切换过去</span></span><br><span class="line">git co -b &lt;new_branch&gt; &lt;branch&gt;  <span class="comment"># 基于branch创建新的new_branch</span></span><br><span class="line"></span><br><span class="line">git co $id          <span class="comment"># 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span></span><br><span class="line">git co $id -b &lt;new_branch&gt;  <span class="comment"># 把某次历史提交记录checkout出来，创建成一个分支</span></span><br><span class="line"></span><br><span class="line">git br -d &lt;branch&gt;  <span class="comment"># 删除某个分支</span></span><br><span class="line">git br -D &lt;branch&gt;  <span class="comment"># 强制删除某个分支（未被合并的分支被删除的时候需要强制）</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="分支合并和rebase"><a href="#分支合并和rebase" class="headerlink" title="分支合并和rebase"></a>分支合并和rebase</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;branch&gt;               <span class="comment"># 将branch分支合并到当前分支</span></span><br><span class="line">git merge origin/master --no-ff  <span class="comment"># 不要Fast-Foward合并，这样可以生成merge提交</span></span><br><span class="line"></span><br><span class="line">git rebase master &lt;branch&gt;       <span class="comment"># 将master rebase到branch，相当于：</span></span><br><span class="line">git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Git补丁管理-方便在多台机器上开发同步时用"><a href="#Git补丁管理-方便在多台机器上开发同步时用" class="headerlink" title="Git补丁管理(方便在多台机器上开发同步时用)"></a>Git补丁管理(方便在多台机器上开发同步时用)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff &gt; ../sync.patch         <span class="comment"># 生成补丁</span></span><br><span class="line">git apply ../sync.patch          <span class="comment"># 打补丁</span></span><br><span class="line">git apply --check ../sync.patch  <span class="comment">#测试补丁能否成功</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Git暂存管理"><a href="#Git暂存管理" class="headerlink" title="Git暂存管理"></a>Git暂存管理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git stash                        <span class="comment"># 暂存</span></span><br><span class="line">git stash list                   <span class="comment"># 列所有stash</span></span><br><span class="line">git stash apply                  <span class="comment"># 恢复暂存的内容</span></span><br><span class="line">git stash drop                   <span class="comment"># 删除暂存区</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Git远程分支管理"><a href="#Git远程分支管理" class="headerlink" title="Git远程分支管理"></a>Git远程分支管理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git pull                         <span class="comment"># 抓取远程仓库所有分支更新并合并到本地</span></span><br><span class="line">git pull --no-ff                 <span class="comment"># 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span></span><br><span class="line">git fetch origin                 <span class="comment"># 抓取远程仓库更新</span></span><br><span class="line">git merge origin/master          <span class="comment"># 将远程主分支合并到本地当前分支</span></span><br><span class="line">git co --track origin/branch     <span class="comment"># 跟踪某个远程分支创建相应的本地分支</span></span><br><span class="line">git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt;  <span class="comment"># 基于远程分支创建本地分支，功能同上</span></span><br><span class="line"></span><br><span class="line">git push                         <span class="comment"># push所有分支</span></span><br><span class="line">git push origin master           <span class="comment"># 将本地主分支推到远程主分支</span></span><br><span class="line">git push -u origin master        <span class="comment"># 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span></span><br><span class="line">git push origin &lt;local_branch&gt;   <span class="comment"># 创建远程分支， origin是远程仓库名</span></span><br><span class="line">git push origin &lt;local_branch&gt;:&lt;remote_branch&gt;  <span class="comment"># 创建远程分支</span></span><br><span class="line">git push origin :&lt;remote_branch&gt;  <span class="comment">#先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="基本的分支管理"><a href="#基本的分支管理" class="headerlink" title="基本的分支管理"></a>基本的分支管理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个分支</span></span><br><span class="line">git branch iss53</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换工作目录到iss53</span></span><br><span class="line">git chekcout iss53</span><br><span class="line"></span><br><span class="line"><span class="comment">#将上面的命令合在一起，创建iss53分支并切换到iss53</span></span><br><span class="line">git chekcout –b iss53</span><br><span class="line"></span><br><span class="line"><span class="comment">#合并iss53分支，当前工作目录为master</span></span><br><span class="line">git merge iss53</span><br><span class="line"></span><br><span class="line"><span class="comment">#合并完成后，没有出现冲突，删除iss53分支</span></span><br><span class="line">git branch –d iss53</span><br><span class="line"></span><br><span class="line"><span class="comment">#拉去远程仓库的数据，语法为 git fetch [remote-name]</span></span><br><span class="line">git fetch</span><br><span class="line"></span><br><span class="line"><span class="comment">#fetch 会拉去最新的远程仓库数据，但不会自动到当前目录下，要自动合并</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看远程仓库的信息</span></span><br><span class="line">git remote show origin</span><br><span class="line"></span><br><span class="line"><span class="comment">#建立本地的dev分支追踪远程仓库的develop分支</span></span><br><span class="line">git checkout –b dev origin/develop</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Git远程仓库管理"><a href="#Git远程仓库管理" class="headerlink" title="Git远程仓库管理"></a>Git远程仓库管理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git remote -v                    <span class="comment"># 查看远程服务器地址和仓库名称</span></span><br><span class="line">git remote show origin           <span class="comment"># 查看远程服务器仓库状态</span></span><br><span class="line">git remote add origin git@ github:robbin/robbin_site.git         <span class="comment"># 添加远程仓库地址</span></span><br><span class="line">git remote set-url origin git@ github.com:robbin/robbin_site.git <span class="comment"># 设置远程仓库地址(用于修改远程仓库地址)</span></span><br><span class="line">git remote rm &lt;repository&gt;       <span class="comment"># 删除远程仓库</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git clone --bare robbin_site robbin_site.git  <span class="comment"># 用带版本的项目创建纯版本仓库</span></span><br><span class="line">scp -r my_project.git git@ git.csdn.net:~      <span class="comment"># 将纯仓库上传到服务器上</span></span><br><span class="line"></span><br><span class="line">mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git --bare init <span class="comment"># 在服务器创建纯仓库</span></span><br><span class="line">git remote add origin git@ github.com:robbin/robbin_site.git    <span class="comment"># 设置远程仓库地址</span></span><br><span class="line">git push -u origin master                                      <span class="comment"># 客户端首次提交</span></span><br><span class="line">git push -u origin develop  <span class="comment"># 首次将本地develop分支提交到远程develop分支，并且track</span></span><br><span class="line"></span><br><span class="line">git remote set-head origin master   <span class="comment"># 设置远程仓库的HEAD指向master分支</span></span><br></pre></td></tr></table></figure>
<p>也可以命令设置跟踪远程库和本地库</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream master origin/master</span><br><span class="line">git branch --set-upstream develop origin/develop</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Github协同流程："><a href="#Github协同流程：" class="headerlink" title="Github协同流程："></a>Github协同流程：</h2><p>fork给自己 → clone到本地 → coding → push回自己 → github上提出Pull Request即可
之后，本地添加fork源为远端源 → 工作前先pull下fork源保持代码较新 → coding → …</p>
<hr>
<h2 id="GitHub更新fork的版本实践"><a href="#GitHub更新fork的版本实践" class="headerlink" title="GitHub更新fork的版本实践:"></a>GitHub更新fork的版本实践:</h2><p>前提
你已经在github上fork了别人的分支，并且弄好了跟github的ssh连接。(如果没有ssh连接可使用HTTP,操作的时候会多一个输入用户名密码操作)
相关配置详情参考：<a href="https://help.github.com" target="_blank" rel="external">https://help.github.com</a></p>
<p>详细操作:</p>
<p>1.检出自己在github上fork别人的分支</p>
<pre><code>git clone git@github.com:streamers/hadoop.git
</code></pre><p>2.然后增加远程分支（也就是你fork那个人的分支）名为atcic（这个名字任意）到你本地。</p>
<pre><code>git remote add atcic git@github.com:apache/hadoop.git
</code></pre><p>如果你运行命令：git remote -v你会发现多出来了一个Bob的远程分支。如下：</p>
<pre><code>atcic   git@github.com:apache/hadoop.git   (fetch)
atcic   git@github.com:apache/hadoop.git   (push)
origin  git@github.com:apache/hadoop.git   (fetch)
origin  git@github.com:apache/hadoop.git   (push)
</code></pre><p>3.然后，把对方的代码拉到你本地。</p>
<pre><code>git fetch atcic
</code></pre><p>4.最后，合并对方的代码。</p>
<pre><code>git merge atcic/master
</code></pre><p>5.最最后，把最新的代码推送到你的github上。</p>
<pre><code>git push origin master
</code></pre><p>这样就完成了自己的代码更新。</p>
<hr>
<p>Git版本控制大全:</p>
<p><a href="http://git-scm.com/book/zh/v1" target="_blank" rel="external">http://git-scm.com/book/zh/v1</a></p>
]]></content>
    </entry>
    
  
  
</search>
