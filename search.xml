<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[使用Anaconda Python科学计算包]]></title>
      <url>http://keyunluo.github.io/2016/07/17/2016-07-17-anaconda-python.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录在Ubuntu16.04上配置Python的科学计算环境包，使用anaconda发行版和清华大学的镜像服务。</p>
</blockquote>
<a id="more"></a>
<h2 id="Anaconda下载与安装"><a href="#Anaconda下载与安装" class="headerlink" title="Anaconda下载与安装"></a>Anaconda下载与安装</h2><p>由于使用教育网，便可以很方便的使用IPV6资源，其中就包括镜像服务。Anaconda 是一个用于科学计算的 Python 发行版，支持 Linux, Mac, Windows, 包含了众多流行的科学计算、数据分析的 Python 包。</p>
<p><code>Anaconda</code> 安装包可以到 <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="external">清华大学镜像站</a> 下载，本文使用了<code>Anaconda3-4.1.1-Linux-x86_64.sh</code>。</p>
<p>安装完成后，默认是已经添加了环境变量的，这里在Ubuntu16.04上安装的，会与系统的Python3版本冲突，因此需要修改环境，为了不影响系统的Python3，将Anaconda的Python路径放至PATH的最后，即在<code>/etc/profile</code>的最后一行添加<code>export PATH=$PATH:/usr/local/anaconda3/bin</code>。同时为了抛弃系统的Python3，一个解决方案是使用软链将Anaconda的<code>python</code>指向<code>/usr/local/bin/python3</code>,具体入下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/anaconda3/bin/python /usr/local/bin/python3</span><br></pre></td></tr></table></figure>
<h2 id="镜像源与PyPi配置"><a href="#镜像源与PyPi配置" class="headerlink" title="镜像源与PyPi配置"></a>镜像源与PyPi配置</h2><p>通常Anaconda的官方源速度无法忍受，因此需要更改为国内的源，这里可以清华大学的镜像源：Anaconda Python 免费仓库。</p>
<p>Linux下在终端中输入：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels <span class="string">'https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/'</span></span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure>
<p>Windows下在CMD中输入：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure>
<p>一般我们使用PyPi的安装大部分的Python组件，同理，官方速度也很够呛，因此在这里配置国内的源。
编辑<code>~/.pip/pip.conf</code>(没有就创建一个)，里面改为清华源：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<p>或中科大源，速度都很给力</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line">index-url = https://pypi.mirrors.ustc.edu.cn/simple</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>由于安装了Anaconda Python3，所以安装软件时可以用<code>conda install XXX</code>安装或<code>conda update XXX</code>来更新，当然也可以用<code>pip3</code>。</p>
<p>当要为系统的Python2版本安装Numpy时，先安装一些编译依赖项,比如直接用pip安装最新的numpy时会编译错误，原因是缺少必要的库，因此需要安装这些库，一个简介的做法是使用Ubuntu的build-dep命令：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt build-dep numpy scipy matplotlib</span><br></pre></td></tr></table></figure>
<p>然后就可以直接安装了：<code>sudo -H pip install -U numpy</code>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu16.04配置L2TP-VPN]]></title>
      <url>http://keyunluo.github.io/2016/07/17/2016-07-17-ubuntu16-l2tp-vpn.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录在Ubuntu16.04上安装L2TP插件,之前记录了在<a href="/2016/03/20/2016-03-20-ubuntu14-l2tp-vpn.html">Ubuntu14.04</a>上安装L2TP插件，但ppa上还没有更新这个软件包，故只有手动从源代码编译安装。</p>
</blockquote>
<a id="more"></a>
<h2 id="安装依赖软件"><a href="#安装依赖软件" class="headerlink" title="安装依赖软件"></a>安装依赖软件</h2><p>从源代码编译时需要很多第三方软件，因此首先需要在系统中安装这些库，具体如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt  install git libtool automake libglib2.0-dev  intltool ppp-dev libgtk+-3-dev libnma-dev libsecret-1-dev libnm-gtk-dev libnm-glib-dev  libnm-glib-vpn-dev xl2tpd</span><br></pre></td></tr></table></figure>
<p>安装好这些库后便可以从<code>github</code>上<code>clone</code>最新的代码:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/nm-l2tp/network-manager-l2tp</span><br></pre></td></tr></table></figure>
<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>使用终端进入源代码目录<code>network-manager-l2tp</code>，运行如下的<code>configure</code>命令：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./configure \</span><br><span class="line">  --prefix=/usr --localstatedir=/var --sysconfdir=/etc \</span><br><span class="line">  --libexecdir=/usr/lib/NetworkManager \</span><br><span class="line">  --<span class="keyword">with</span>-pppd-plugin-dir=/usr/lib/pppd/<span class="number">2.4</span><span class="number">.7</span> \</span><br><span class="line">  --enable-absolute-paths</span><br></pre></td></tr></table></figure>
<p>没有报错后，接着便<code>make</code>和<code>make install</code> :</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>安装完成后，还不能直接使用，需要关闭<code>xl2tp</code>，然后机器重新启动:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service xl2tpd stop</span><br><span class="line">sudo update-rc.d xl2tpd disable</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>
<p>此时，通过<code>网络-编辑连接-增加-第二层隧道协议</code>便可以配置L2TP-VPN了。</p>
<p><img src="/resource/blog/2016-07/L2TP.png" alt="L2TP-VPN"></p>
<p>配置好用户名，密码，地址后，基本上就OK了。不过由于笔者实验室配置的L2TP貌似有问题，导致部分网页打不开，比如微博。。。然而却能Ping的通，经过一番摸索后，发现是VPN的<code>PPP</code>设置中的<code>MTU</code>值过大，于是将其改到了一个较小的数值，便可以愉快的玩耍了。</p>
<p><img src="/resource/blog/2016-07/PPP设置.png" alt="PPP设置"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[TODO-LIST]]></title>
      <url>http://keyunluo.github.io/2016/06/30/2016-06-30-todolist.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>2016-07月-2017-01月待做事项</p>
</blockquote>
<a id="more"></a>
<h2 id="基础算法"><a href="#基础算法" class="headerlink" title="基础算法"></a>基础算法</h2><p>参考书籍:</p>
<ul>
<li><em>Data Structures and Algorithms in C++, 2nd edition</em> Michael T. Goodrich等著</li>
<li><em>Data Structures and Algorithms in Java, 6th Edition</em> James Aspnes著</li>
<li><em>Data Structures and Algorithms in Python</em> Michael T. Goodrich等著</li>
<li><em>Data Structures and Algorithms with JavaScript</em> Michael McMillan等著</li>
<li><em>算法导论</em> 第三版，殷建平 等译</li>
<li><em>快学Scala</em>  高宇翔 译</li>
</ul>
<p>学习课题:</p>
<ul>
<li><em>[x]</em> 数组</li>
<li><em>[x]</em> 链表</li>
<li><em>[x]</em> 栈和队列</li>
<li><em>[x]</em> 树</li>
<li><em>[x]</em> 堆和优先队列</li>
<li><em>[x]</em> 哈希</li>
<li><em>[x]</em> 搜索树</li>
<li><em>[x]</em> 集合</li>
<li><em>[x]</em> STL</li>
<li><em>[x]</em> 排序</li>
<li><em>[x]</em> 图论</li>
<li><em>[x]</em> 动态规划</li>
</ul>
<h2 id="分布式系统"><a href="#分布式系统" class="headerlink" title="分布式系统"></a>分布式系统</h2><p>参考书籍:</p>
<ul>
<li><em>大规模分布式系统架构与设计实战</em> 彭渊编 著</li>
<li><em>Notes on Theory of Distributed Systems</em> James Aspnes 著</li>
</ul>
<p>学习课题:</p>
<ul>
<li><em>[x]</em> 分布式并行计算的原理与实践</li>
<li><em>[x]</em> 分布式协调的实现</li>
<li><em>[x]</em> 分布式缓存的实现</li>
<li><em>[x]</em> 消息队列的实现</li>
<li><em>[x]</em> 分布式文件系统的实现</li>
<li><em>[x]</em> 分布式作业调度平台的实现</li>
<li><em>[x]</em> Message passing</li>
<li><em>[x]</em> Shared memory</li>
</ul>
<h2 id="PRML"><a href="#PRML" class="headerlink" title="PRML"></a>PRML</h2><p>参考书籍:</p>
<ul>
<li><em>统计学习方法</em> 李航编著</li>
<li><em>模式识别与机器学习</em> 马春鹏  译</li>
<li><em>Machine Learning A Bayesian and Optimization Perspective</em> Sergios Theodoridis 编著</li>
</ul>
<p>学习课题:</p>
<ul>
<li><em>[x]</em> 统计学习方法</li>
<li><em>[x]</em> 感知机</li>
<li><em>[x]</em> k近邻</li>
<li><em>[x]</em> 朴素贝叶斯</li>
<li><em>[x]</em> 决策树</li>
<li><em>[x]</em> 逻辑回归与最大熵模型</li>
<li><em>[x]</em> 支持向量机</li>
<li><em>[x]</em> 提升方法</li>
<li><em>[x]</em> EM算法及其推广</li>
<li><em>[x]</em> 隐马尔科夫模型</li>
<li><em>[x]</em> 条件随机场</li>
<li><em>[x]</em> 概率分布</li>
<li><em>[x]</em> 回归的线性模型</li>
<li><em>[x]</em> 分类的线性模型</li>
<li><em>[x]</em> 神经网络</li>
<li><em>[x]</em> 核方法</li>
<li><em>[x]</em> 稀疏核机</li>
<li><em>[x]</em> 图模型</li>
<li><em>[x]</em> 混合模型和EM</li>
<li><em>[x]</em> 近似推断</li>
<li><em>[x]</em> 采样方法</li>
<li><em>[x]</em> 连续潜在变量</li>
<li><em>[x]</em> 顺序数据</li>
<li><em>[x]</em> 组合模型</li>
</ul>
<h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><p>参考书籍:</p>
<ul>
<li><em>Data algorithms recipes for scaling up with hadoop and spark</em> Mahmoud Parsian编著</li>
<li><em>Mastering Apache Spark</em> Mike Frampton编著</li>
<li><em>HBase- The Definitive Guide, 2nd Edition</em> Lars George编著</li>
<li><em>Apache Mahout Beyond MapReduce</em> Dmitriy Lyubimov等</li>
</ul>
<p>学习课题:</p>
<ul>
<li><em>[✔]</em> Secondary Sort</li>
<li><em>[x]</em> Top 10 List</li>
<li><em>[x]</em> Left Outer Join</li>
<li><em>[x]</em> Order Inversion</li>
<li><em>[x]</em> Moving Average</li>
<li><em>[x]</em> Market Basket Analysis</li>
<li><em>[x]</em> Common Friends</li>
<li><em>[x]</em> Recommendation Engines Using MapReduce</li>
<li><em>[x]</em> Content-Based Recommendation: Movies</li>
<li><em>[x]</em> Smarter Email Marketing with the Markov Model</li>
<li><em>[x]</em> K-Means Clustering</li>
<li><em>[x]</em> k-Nearest Neighbors</li>
<li><em>[x]</em> Naive Bayes</li>
<li><em>[x]</em> Sentiment Analysis</li>
<li><em>[x]</em> Finding, Counting, and Listing All Triangles in Large Graphs</li>
<li><em>[x]</em> K-mer Counting</li>
<li><em>[x]</em> DNA Sequencing</li>
<li><em>[x]</em> Cox Regression</li>
<li><em>[x]</em> Cochran-Armitage Test for Trend</li>
<li><em>[x]</em> Allelic Frequency</li>
<li><em>[x]</em> The T-Test</li>
<li><em>[x]</em> Pearson Correlation</li>
<li><em>[x]</em> DNA Base Count</li>
<li><em>[x]</em> RNA Sequencing</li>
<li><em>[x]</em> Gene Aggregation</li>
<li><em>[x]</em> Linear Regression</li>
<li><em>[x]</em> MapReduce and Monoids</li>
<li><em>[x]</em> The Small Files Problem</li>
<li><em>[x]</em> Huge Cache for MapReduce</li>
<li><em>[x]</em> The Bloom Filter</li>
<li><em>[x]</em> HBase Client API: The Basics<ul>
<li>[x] Data Types and Hierarchy</li>
<li>[x] CRUD Operations</li>
<li>[x] Batch Operations</li>
<li>[x] Scans</li>
<li>[x] Miscellaneous Features</li>
</ul>
</li>
<li><em>[x]</em> HBase Client API: Advanced Features<ul>
<li>[x] Filters</li>
<li>[x] Counters</li>
<li>[x] Coprocessors</li>
</ul>
</li>
<li><em>[x]</em> HBase Client API: Administrative Features<ul>
<li>[x] Schema Definition</li>
<li>[x] HBaseAdmin</li>
<li>[x] ReplicationAdmin</li>
</ul>
</li>
<li><em>[x]</em> HBase Available Clients<ul>
<li>[x] Gateway Clients</li>
<li>[x] FrameworkClients</li>
<li>[x] Shell</li>
<li>[x] Web-based UI</li>
</ul>
</li>
<li><em>[x]</em> Mahout’s in-core algebra</li>
<li><em>[x]</em> Mahout’s Distributed Algebra</li>
<li><em>[x]</em> Stochastic SVD</li>
<li><em>[x]</em> Stochastic PCA</li>
<li><em>[x]</em> Data Sketching with Bahmani sketch</li>
<li><em>[x]</em> Naive Bayes Example</li>
</ul>
<h2 id="系统技能"><a href="#系统技能" class="headerlink" title="系统技能"></a>系统技能</h2><h3 id="LaTeX"><a href="#LaTeX" class="headerlink" title="LaTeX"></a>LaTeX</h3><p>参考书籍:</p>
<ul>
<li><strong>LaTeX入门</strong> 刘海洋编著<ul>
<li><em>[x]</em> 文本组织</li>
<li><em>[x]</em> 自动化工具</li>
<li><em>[x]</em> 数学公式</li>
<li><em>[x]</em> 图表</li>
<li><em>[x]</em> 幻灯片</li>
</ul>
</li>
</ul>
<h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><p>参考书籍:</p>
<ul>
<li><strong>Linux Shell脚本攻略</strong>  第二版，门佳译</li>
<li><p><strong>Linux Shell 编程艺术</strong>  张泽编著</p>
<ul>
<li><em>[x]</em> shell基础</li>
<li><em>[x]</em> 常用命令</li>
<li><em>[x]</em> 文件操作</li>
<li><em>[x]</em> 文本处理</li>
<li><em>[x]</em> Web网页</li>
<li><em>[x]</em> 压缩归档</li>
<li><em>[x]</em> 网络设置</li>
<li><em>[x]</em> 磁盘管理</li>
<li><em>[x]</em> 进程管理</li>
<li><em>[x]</em> IO重定向</li>
<li><em>[x]</em> 函数编写</li>
<li><em>[x]</em> 正则表达式</li>
<li><em>[x]</em> 脚本调试</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[正当毕业时]]></title>
      <url>http://keyunluo.github.io/2016/06/21/2016-06-21-graduation.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>就算新的开始依旧美丽，而此刻的心情也必然暗淡。</p>
</blockquote>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=109864&auto=0&height=66"></iframe>



<h2 id="时光缝隙里的记忆"><a href="#时光缝隙里的记忆" class="headerlink" title="时光缝隙里的记忆"></a>时光缝隙里的记忆</h2><p>&nbsp;&nbsp;紧张的毕业答辩之后，整个人顿时轻松了不少，收拾好东西和搬家后，不知不觉间感到些许失落和无所事事。毕业典礼上全院三百多人集体煽情了一把，毕竟这一别很有可能好多人将很难再见上一面。毕业典礼一结束，顺便吃了个学校发的毕业纪念餐，意味着这将是在这个学校的最后一天了。虽然宿舍有些破旧并且并不宽敞，但我依然记得刚开始入学时第一次躺在这张床上的感觉。我是个随遇而安的人，也许在中学时代的羁畔太多，刚入大学的我对这一切新鲜的生活感到异常兴奋和温馨。而如今，生活了四年，严格来说大概三年多一点的日子，依然感到舒适。此时此刻，用白驹过隙、时光荏苒这些曾经“为赋新词强说愁”的词汇来表达此时的心境却感到越发真实贴切。</p>
<p>&nbsp;&nbsp;曾经以为，我的大学不值得留恋，既没有轰轰烈烈的爱情，也没有叱咤风云的专业技能，日子过得平平淡淡甚至很Dull，所谓的星辰大海依旧虚无缥缈，总体的感觉就是不会玩，也不会学习。然而一路走来，细细回想，在稀里糊涂地走过的四年的青春时光里，越想经历的越多，感悟的更多，到头来才发现虽然没有他人过的精彩，却也在不断地探索前行，在发现一个更大的世界的旅程中磕磕碰碰，所有惯常的令人感动的场景也会让我潸然。</p>
<h2 id="间歇性踌躇满志，持续性混吃等死"><a href="#间歇性踌躇满志，持续性混吃等死" class="headerlink" title="间歇性踌躇满志，持续性混吃等死"></a>间歇性踌躇满志，持续性混吃等死</h2><p>&nbsp;&nbsp;那时虽然天气炎热，寝室也没有空调，却满腔热情，早起早睡，精神饱满，而后渐渐地越起越晚，到大一下基本上就有起床困难症了。刚入大学那会，由于上的课主要是数学基础课，做习题花费的时间比较多，总体感觉不是很吃力，但也不是特别用功钻研，并且对程序设计语言课不太感兴趣，归结起来就是很浮躁，这种状态一直延续了整个大学四年。大二时开始上专业基础课，各种实验课搞得我很是困倦，几门硬件相关的课程学习得很是吃力，这也直接导致我对这一方向失去兴趣，后来又参加科创，学习一些数字图像处理的课程，课外花了不少时间，但总感觉收获有限，这一年算过得比较失败。大三开始真正上专业课，对学科开始有了一个初步的了解，下学期就开始考虑保研和实习的事，开始是准备去华为这样的公司实习的，奈何内推时填写实习时间三个月后直接没有了下文，一个偶然的机会就去了中科院电子所苏州研究院，这样暑假就奔波于北京、苏州了。大四开学后就面临着保研的问题，机试不是很好，但凭着底子厚还是有惊无险的获得了保研资格，继续读书。在苏州实习四个月后，十一月底回到学校，后来联系导师，导师让过去做毕设，这样大四后半年就在南大度过的，直到毕设论文答辩前夕。</p>
<p>&nbsp;&nbsp;归结起来，大学前三年几乎宅在学校，大四到处奔波，从北京、苏州往返于南京，整个大学的状态是“三分钟热度”，“浅尝辄止”成为常态。每次都想在图书馆坐下来好好学习一番，可是不到半小时便注意力分散，看一些技术书籍，常痴迷于各种计算机新技术，常纠结于各种术语之间，最喜欢瞎折腾，装系统编译软件，浪费了好多时间，做不了极客，却积攒了不少吹牛的资本。大学里面的专业课就从来没有认真上过，平时也没有什么预习复习，基本上上课听多少就多少，考前开始认真预习刷试卷，保持着一个伪学霸的状态，成绩不是最好，但也说得过去。</p>
<h2 id="努力学习的意义"><a href="#努力学习的意义" class="headerlink" title="努力学习的意义"></a>努力学习的意义</h2><p>&nbsp;&nbsp;<code>谁没有不切实际的梦想，把未来的人生精彩的幻想 常常一个人悄悄的描绘，欣赏那种假设的辉煌</code></p>
<p>&nbsp;&nbsp;以前一直没有认真考虑过这个问题，直到大四这一年东奔西走，渐渐领悟到努力学习的意义。努力和有钱的意义差不多，让你在未来的生活中有更多选择。努力的最大动力，在于你可以选择你想要的生活，而不是被生活选择。努力就意味着掌握了主动权，掌握了改变自身状态的能力，在一个更大的世界里过自己想要的生活。为此，现在的我懊悔不已，既然学习技术，就要做那个最厉害的一个，大多数人都很弱，你只要稍微精通某些方面的知识就会脱颖而出。</p>
<p>&nbsp;&nbsp;我一直认为我很幸运，从上大学一开始就进入计算机软件培优班到科创获得一等奖，从保研到南大到最终毕设成绩优秀。虽然我不是足够优秀，但运气不会太差。我坚信越努力，越幸运，积极乐观，用努力学习使当初的选择变得正确，一直做个幸运的人。</p>
<h2 id="向着自由的未来前行"><a href="#向着自由的未来前行" class="headerlink" title="向着自由的未来前行"></a>向着自由的未来前行</h2><p>&nbsp;&nbsp;<code>我飞出五行之内三界之外，我心头无牵无挂无限自在，我知道生亦何苦死亦何哀，如来如不来一样死性不改。</code></p>
<p>&nbsp;&nbsp;大学毕业，既是终点，也是起点，以后的路也越走越宽。现在的我，希望自己能放下手机，能做一个努力上进，能掌控我的未来的人。积极锻炼身体，保持一个健康的体魄；玩就玩个痛快，尽情释放自我；读书做事不贪图多，唯求精益求精。通往卓越的路只有一条，就是静下心来积累，天下武功，唯快不破。</p>
<p>&nbsp;&nbsp;我不想被束缚，我希望自由自在的活着，我想看世间最美的一切。</p>
<p>&nbsp;&nbsp;祝所有在意我的人和我在意的人，人生的道路越走越宽，后会有期。</p>
<p><img src="/resource/blog/2016-06/学位证.jpg" alt="学位照"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Elasticsearch入门学习(3)——查询]]></title>
      <url>http://keyunluo.github.io/2016/05/27/2016-05-27-elasticsearch-3.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>ElasticSearch</strong>提供了丰富的REST风格的API来满足不同的场景需求，本篇介绍Elasticsearch的查询相关的基础和高级操作。</p>
</blockquote>
<a id="more"></a>
<h2 id="检索文档"><a href="#检索文档" class="headerlink" title="检索文档"></a>检索文档</h2><ul>
<li><strong>通过ID直接查询</strong>
执行<code>HTTP GET</code>请求，通过<code>索引-类型-ID</code>便可以返回原始的JSON格式的文档，原始的JSON文档在<code>_source</code>字段里。</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dislab@server:~$ curl -XGET <span class="string">'http://server:9200/gps_data/20160205/3201000061%2010:20:54?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"gps_data"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"20160205"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"3201000061 10:20:54"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">"found"</span> : true,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"ZDBH"</span> : <span class="string">"3201000061"</span>,</span><br><span class="line">    <span class="string">"ROWKEY"</span> : <span class="string">"3201000061 10:20:54"</span>,</span><br><span class="line">    <span class="string">"GPSSJ"</span> : <span class="string">"2016-02-05 10:20:54"</span>,</span><br><span class="line">    <span class="string">"XLMC"</span> : <span class="string">"80路"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意到<code>ID</code>字段插入了<code>%20</code>的字段，这是因为<code>curl</code>命令中不能有空格，若有空格则必须替换掉。</p>
<ul>
<li><strong>简单搜索</strong>
简单搜索不需要指定<code>ID</code>,需要指定查询字符串，格式为<code>_search?q=key:value</code></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dislab@server:~$ curl -XGET  http://server:9200/gps_data/20160205/_search?q=GPSSJ:“2016-02-05 10:20:54”</span><br><span class="line">&#123;"took":695,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":10093722,"max_score":0.3666257,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201000158 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201000158","ROWKEY":"3201000158 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"13路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200106 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201200106","ROWKEY":"3201200106 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"170路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200154 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201200154","ROWKEY":"3201200154 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"125路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200126 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201200126","ROWKEY":"3201200126 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"8路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300190 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201300190","ROWKEY":"3201300190 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"48路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300169 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201300169","ROWKEY":"3201300169 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"48路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100008 05:05:05","_score":0.3666257,"_source":&#123;"ZDBH":"3201100008","ROWKEY":"3201100008 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"306路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000166 05:05:05","_score":0.36632675,"_source":&#123;"ZDBH":"3201000166","ROWKEY":"3201000166 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"13路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000179 05:05:05","_score":0.36632675,"_source":&#123;"ZDBH":"3201000179","ROWKEY":"3201000179 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"13路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000019 05:05:05","_score":0.36632675,"_source":&#123;"ZDBH":"3201000019","ROWKEY":"3201000019 05:05:05","GPSSJ":"2016-02-05 05:05:05","XLMC":"166路"&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>DSL语句查询</strong>
DSL(Domain Specific Language特定领域语言)以JSON请求体的形式出现，可以构建复杂的查询。
上述查询可写成如下的<code>DSL</code>查询方式</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dislab@server:~$ curl -XGET 'http://server:9200/gps_data/20160205/_search' -d '</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;     "query" : &#123;</span><br><span class="line">&gt;         "match" : &#123;</span><br><span class="line">&gt;             "GPSSJ" : "2016-02-05 10:20:54"</span><br><span class="line">&gt;         &#125;</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; '</span><br><span class="line">&#123;"took":854,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":10093722,"max_score":2.7672434,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201200801 20:54:10","_score":2.7672434,"_source":&#123;"ZDBH":"3201200801","ROWKEY":"3201200801 20:54:10","GPSSJ":"2016-02-05 20:54:10","XLMC":"170路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300063 20:54:10","_score":2.7672434,"_source":&#123;"ZDBH":"3201300063","ROWKEY":"3201300063 20:54:10","GPSSJ":"2016-02-05 20:54:10","XLMC":"D9路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000027 20:10:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201000027","ROWKEY":"3201000027 20:10:54","GPSSJ":"2016-02-05 20:10:54","XLMC":"7路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000193 10:54:20","_score":2.7672434,"_source":&#123;"ZDBH":"3201000193","ROWKEY":"3201000193 10:54:20","GPSSJ":"2016-02-05 10:54:20","XLMC":"13路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201000115 20:10:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201000115","ROWKEY":"3201000115 20:10:54","GPSSJ":"2016-02-05 20:10:54","XLMC":"13路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 10:54:20","_score":2.7672434,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 10:54:20","GPSSJ":"2016-02-05 10:54:20","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200163 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201200163","ROWKEY":"3201200163 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"201路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200200 20:10:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201200200","ROWKEY":"3201200200 20:10:54","GPSSJ":"2016-02-05 20:10:54","XLMC":"170路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200127 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201200127","ROWKEY":"3201200127 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"125路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201200127 10:54:20","_score":2.7672434,"_source":&#123;"ZDBH":"3201200127","ROWKEY":"3201200127 10:54:20","GPSSJ":"2016-02-05 10:54:20","XLMC":"125路"&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>复杂DSL语句查询</strong>
<code>DSL</code>查询可嵌套多种条件形成复杂查询。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">dislab@server:~$ curl -XGET 'http://server:9200/gps_data/20160205/_search' -d '</span><br><span class="line">&gt; &#123;</span><br><span class="line">&gt;     "query" : &#123;</span><br><span class="line">&gt;         "filtered" : &#123;</span><br><span class="line">&gt;             "filter" : &#123;</span><br><span class="line">&gt;                 "range" : &#123;</span><br><span class="line">&gt;                     "ZDBH" : &#123; "gt" : 3201300108 &#125;</span><br><span class="line">&gt;                 &#125;</span><br><span class="line">&gt;             &#125;,</span><br><span class="line">&gt;             "query" : &#123;</span><br><span class="line">&gt;                 "match" : &#123;</span><br><span class="line">&gt;                     "GPSSJ" : "2016-02-05 10:20:54"</span><br><span class="line">&gt;                 &#125;</span><br><span class="line">&gt;             &#125;</span><br><span class="line">&gt;         &#125;</span><br><span class="line">&gt;     &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; '</span><br><span class="line">&#123;"took":657,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":645657,"max_score":2.7672434,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201300120 20:10:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201300120","ROWKEY":"3201300120 20:10:54","GPSSJ":"2016-02-05 20:10:54","XLMC":"41路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300220 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201300220","ROWKEY":"3201300220 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"306路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300131 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201300131","ROWKEY":"3201300131 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"48路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300162 10:54:20","_score":2.7672434,"_source":&#123;"ZDBH":"3201300162","ROWKEY":"3201300162 10:54:20","GPSSJ":"2016-02-05 10:54:20","XLMC":"182路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300177 20:54:10","_score":2.7672434,"_source":&#123;"ZDBH":"3201300177","ROWKEY":"3201300177 20:54:10","GPSSJ":"2016-02-05 20:54:10","XLMC":"56路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300165 10:54:20","_score":2.7672434,"_source":&#123;"ZDBH":"3201300165","ROWKEY":"3201300165 10:54:20","GPSSJ":"2016-02-05 10:54:20","XLMC":"48路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300115 20:54:10","_score":2.7672434,"_source":&#123;"ZDBH":"3201300115","ROWKEY":"3201300115 20:54:10","GPSSJ":"2016-02-05 20:54:10","XLMC":"48路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300120 20:54:10","_score":2.7672434,"_source":&#123;"ZDBH":"3201300120","ROWKEY":"3201300120 20:54:10","GPSSJ":"2016-02-05 20:54:10","XLMC":"41路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300171 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201300171","ROWKEY":"3201300171 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"56路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201300200 10:20:54","_score":2.7672434,"_source":&#123;"ZDBH":"3201300200","ROWKEY":"3201300200 10:20:54","GPSSJ":"2016-02-05 10:20:54","XLMC":"306路"&#125;&#125;]&#125;&#125;dislab@server:~$</span><br></pre></td></tr></table></figure>
<p>上述查询主要包括一个区间过滤器和match语句。</p>
<ul>
<li><strong>全文搜索</strong>
使用<code>match</code>匹配计算相关性，根据结果相关性评分来对结果集进行排序。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dislab@server:~$ curl -XGET 'http://server:9200/gps_data/20160205/_search' -d '</span><br><span class="line">&#123;</span><br><span class="line">     "query" : &#123;</span><br><span class="line">         "match" : &#123;</span><br><span class="line">             "XLMC" : "57"</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line">'</span><br><span class="line">&#123;"took":146,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":143481,"max_score":2.9686642,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:12","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:12","GPSSJ":"2016-02-05 07:17:12","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:38","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:38","GPSSJ":"2016-02-05 07:17:38","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:42","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:42","GPSSJ":"2016-02-05 07:17:42","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:01","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:01","GPSSJ":"2016-02-05 07:18:01","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:15","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:15","GPSSJ":"2016-02-05 07:18:15","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:17","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:17","GPSSJ":"2016-02-05 07:18:17","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:23","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:23","GPSSJ":"2016-02-05 07:18:23","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:30","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:30","GPSSJ":"2016-02-05 07:18:30","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:48","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:48","GPSSJ":"2016-02-05 07:18:48","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:49","_score":2.9686642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:49","GPSSJ":"2016-02-05 07:18:49","XLMC":"57路"&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>短语搜索</strong>
关键字之间是<code>与</code>关系的短语搜素，要求在搜索过程中关键字是相邻的。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET 'http://server:9200/gps_data/20160205/_search' -d '</span><br><span class="line">&#123;</span><br><span class="line">    "query" : &#123;</span><br><span class="line">        "match_phrase" : &#123;</span><br><span class="line">            "XLMC" : "57 路"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br><span class="line">&#123;"took":236,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":143481,"max_score":3.5936642,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:22:40","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:22:40","GPSSJ":"2016-02-05 14:22:40","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:22:52","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:22:52","GPSSJ":"2016-02-05 14:22:52","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:23:06","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:23:06","GPSSJ":"2016-02-05 14:23:06","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:23:37","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:23:37","GPSSJ":"2016-02-05 14:23:37","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:23:39","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:23:39","GPSSJ":"2016-02-05 14:23:39","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:23:47","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:23:47","GPSSJ":"2016-02-05 14:23:47","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:23:58","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:23:58","GPSSJ":"2016-02-05 14:23:58","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:24:31","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:24:31","GPSSJ":"2016-02-05 14:24:31","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:24:35","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:24:35","GPSSJ":"2016-02-05 14:24:35","XLMC":"57路"&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 14:25:15","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 14:25:15","GPSSJ":"2016-02-05 14:25:15","XLMC":"57路"&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>搜索结果高亮</strong>
使用<code>highlight</code>高亮搜索到的匹配关键字。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET 'http://server:9200/gps_data/20160205/_search' -d '</span><br><span class="line">&#123;</span><br><span class="line">    "query" : &#123;</span><br><span class="line">        "match_phrase" : &#123;</span><br><span class="line">            "XLMC" : "57 路"</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    "highlight": &#123;</span><br><span class="line">        "fields" : &#123;</span><br><span class="line">            "XLMC" : &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br><span class="line">&#123;"took":375,"timed_out":false,"_shards":&#123;"total":5,"successful":5,"failed":0&#125;,"hits":&#123;"total":143481,"max_score":3.5936642,"hits":[&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:12","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:12","GPSSJ":"2016-02-05 07:17:12","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:38","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:38","GPSSJ":"2016-02-05 07:17:38","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:17:42","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:17:42","GPSSJ":"2016-02-05 07:17:42","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:01","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:01","GPSSJ":"2016-02-05 07:18:01","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:15","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:15","GPSSJ":"2016-02-05 07:18:15","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:17","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:17","GPSSJ":"2016-02-05 07:18:17","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:23","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:23","GPSSJ":"2016-02-05 07:18:23","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:30","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:30","GPSSJ":"2016-02-05 07:18:30","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:48","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:48","GPSSJ":"2016-02-05 07:18:48","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;,&#123;"_index":"gps_data","_type":"20160205","_id":"3201100090 07:18:49","_score":3.5936642,"_source":&#123;"ZDBH":"3201100090","ROWKEY":"3201100090 07:18:49","GPSSJ":"2016-02-05 07:18:49","XLMC":"57路"&#125;,"highlight":&#123;"XLMC":["&lt;em&gt;57&lt;/em&gt;&lt;em&gt;路&lt;/em&gt;"]&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Elasticsearch入门学习(2)——服务URL]]></title>
      <url>http://keyunluo.github.io/2016/04/11/2016-04-11-elasticsearch-2.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>ElasticSearch</strong> 将各种功能、配置、服务都以API的形式暴露，这也是elasticsearch区别于其他搜索引擎框架的一个特征，本文将ES中常用的URL整理以供查询。</p>
</blockquote>
<a id="more"></a>
<h2 id="与Elasticsearch交互"><a href="#与Elasticsearch交互" class="headerlink" title="与Elasticsearch交互"></a>与Elasticsearch交互</h2><p>如何与Elasticsearch交互取决于你是否使用Java，可以分为<code>Java API交互</code>和<code>基于HTTP协议，以JSON为数据交互格式的RESTful API</code>两种，本文主要讲解使用RESTful API，通过9200端口的与Elasticsearch进行通信。使用java则端口为9300.</p>
<p>向Elasticsearch发出的请求的组成部分与其它普通的HTTP请求是一样的：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X&lt;VERB&gt; '&lt;PROTOCOL&gt;://&lt;HOST&gt;:&lt;PORT&gt;/&lt;PATH&gt;?&lt;QUERY_STRING&gt;' -d '&lt;BODY&gt;'</span><br></pre></td></tr></table></figure>
<ul>
<li>VERB HTTP方法：GET, POST, PUT, HEAD, DELETE</li>
<li>PROTOCOL http或者https协议（只有在Elasticsearch前面有https代理的时候可用）</li>
<li>HOST Elasticsearch集群中的任何一个节点的主机名，如果是在本地的节点，那么就叫localhost</li>
<li>PORT Elasticsearch HTTP服务所在的端口，默认为9200</li>
<li>PATH API路径（例如_count将返回集群中文档的数量），PATH可以包含多个组件，例如_cluster/stats或者_nodes/stats/jvm</li>
<li>QUERY_STRING 一些可选的查询请求参数，例如?pretty参数将使请求返回更加美观易读的JSON数据</li>
<li>BODY 一个JSON格式的请求主体（如果请求需要的话）</li>
</ul>
<p>例如，为了计算集群中的文档数量，我们可以这样做：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave01 ~]$ curl -XGET 'http://localhost:9200/_count?pretty' -d '</span><br><span class="line">&#123;</span><br><span class="line">    "query": &#123;</span><br><span class="line">        "match_all": &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br><span class="line">&#123;</span><br><span class="line">  "count" : 3498781,</span><br><span class="line">  "_shards" : &#123;</span><br><span class="line">    "total" : 37,</span><br><span class="line">    "successful" : 37,</span><br><span class="line">    "failed" : 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Elasticsearch返回一个类似200 OK的HTTP状态码和JSON格式的响应主体（除了HEAD请求）。</p>
<h2 id="Elasticsearch常见服务URL"><a href="#Elasticsearch常见服务URL" class="headerlink" title="Elasticsearch常见服务URL"></a>Elasticsearch常见服务URL</h2><ul>
<li><p>HTTP方法: POST新增，PUT更新，GET获取，DELETE删除，HEAD判断是否存在</p>
</li>
<li><p>集群健康查看:<code>curl  &#39;http://server:9200/_cat/health?v&#39;</code></p>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">epoch      timestamp cluster       status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</span><br><span class="line"><span class="number">1460378717</span> <span class="number">20</span>:<span class="number">45</span>:<span class="number">17</span>  Elasticsearch green           <span class="number">3</span>         <span class="number">3</span>     <span class="number">74</span>  <span class="number">37</span>    <span class="number">0</span>    <span class="number">0</span>        <span class="number">0</span>             <span class="number">0</span>                  -                <span class="number">100.0</span>%</span><br></pre></td></tr></table></figure>
<ul>
<li>节点健康查看:<code>curl  &#39;http://server:9200/_cat/nodes?v&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host            ip              heap.percent ram.percent load node.role master name</span><br><span class="line"><span class="number">192.168</span><span class="number">.100</span><span class="number">.107</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.107</span>           <span class="number">30</span>          <span class="number">22</span> <span class="number">0.00</span> d         -      ES-Hadoop-Spark-Node1</span><br><span class="line"><span class="number">192.168</span><span class="number">.100</span><span class="number">.110</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.110</span>           <span class="number">11</span>          <span class="number">23</span> <span class="number">0.01</span> d         -      ES-Hadoop-Spark-Node2</span><br><span class="line"><span class="number">192.168</span><span class="number">.100</span><span class="number">.101</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.101</span>           <span class="number">19</span>          <span class="number">27</span> <span class="number">1.80</span> d         *      ES-Hadoop-Spark-Master</span><br></pre></td></tr></table></figure>
<ul>
<li>列出集群索引:<code>curl  &#39;http://server:9200/_cat/indices?v&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">health status index                 pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class="line">green  open   demo                    <span class="number">5</span>   <span class="number">1</span>          <span class="number">1</span>            <span class="number">0</span>      <span class="number">7.9</span>kb          <span class="number">3.9</span>kb</span><br><span class="line">green  open   my_index                <span class="number">5</span>   <span class="number">1</span>         <span class="number">11</span>            <span class="number">0</span>     <span class="number">53.4</span>kb         <span class="number">26.7</span>kb</span><br><span class="line">green  open   .marvel-es<span class="number">-2016.03</span><span class="number">.29</span>   <span class="number">1</span>   <span class="number">1</span>     <span class="number">162773</span>           <span class="number">54</span>     <span class="number">94.6</span>mb         <span class="number">47.3</span>mb</span><br></pre></td></tr></table></figure>
<ul>
<li>创建customer索引,pretty表示打印json响应:<code>curl -XPUT &#39;http://server:9200/customer?pretty&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"acknowledged"</span> : <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>索引数据：<code>curl -XPUT &#39;http://server:9200/customer/external/1?pretty&#39; &#39;-d { &quot;name&quot;:&quot;JOhn Doe&quot;}&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"customer"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"external"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"successful"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"created"</span> : <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>查询数据：<code>curl -XGET &#39;http://server:9200/customer/external/1?pretty&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"customer"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"external"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">"found"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"_source"</span> : &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"JOhn Doe"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>删除索引:<code>curl -XDELETE &#39;http://server:9200/customer?pretty</code> `</p>
</li>
<li><p>通过id更新索引数据:<code>curl -XPUT &#39;http://server:9200/customer/external/1?pretty&#39; &#39;-d { &quot;name&quot;:&quot;JOhn Doe&quot;}&#39;</code></p>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"customer"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"external"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"1"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"successful"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"created"</span> : <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>添加索引数据随机id:<code>curl -XPOST &#39;http://server:9200/customer/external?pretty&#39; &#39;-d { &quot;name&quot;:&quot;JOhn Doe&quot;}&#39;</code></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"_index"</span> : <span class="string">"customer"</span>,</span><br><span class="line">  <span class="string">"_type"</span> : <span class="string">"external"</span>,</span><br><span class="line">  <span class="string">"_id"</span> : <span class="string">"AVQFbXxylcDfhGhMoLpJ"</span>,</span><br><span class="line">  <span class="string">"_version"</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="string">"_shards"</span> : &#123;</span><br><span class="line">    <span class="string">"total"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"successful"</span> : <span class="number">2</span>,</span><br><span class="line">    <span class="string">"failed"</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"created"</span> : <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>通过id删除：<code>curl -XDELETE &#39;http://server:9200/customer/external/2?pretty&#39;</code></p>
</li>
<li><p>通过查询删除:</p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -XDELETE 'http://server:9200/customer/external/_query?pretty' -d '</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123; "match": &#123; "name": "John" &#125; &#125;</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure>
<ul>
<li>批量新增</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST 'http://server:9200/customer/external/_bulk?pretty' -d '</span><br><span class="line">&#123;"index":&#123;"_id":"1"&#125;&#125;</span><br><span class="line">&#123;"name": "John Doe" &#125;</span><br><span class="line">&#123;"index":&#123;"_id":"2"&#125;&#125;</span><br><span class="line">&#123;"name": "Jane Doe" &#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure>
<ul>
<li>批量更新/删除</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST 'http://server:9200/customer/external/_bulk?pretty' -d '</span><br><span class="line">&#123;"update":&#123;"_id":"1"&#125;&#125;</span><br><span class="line">&#123;"doc": &#123; "name": "John Doe becomes Jane Doe" &#125; &#125;</span><br><span class="line">&#123;"delete":&#123;"_id":"2"&#125;&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>读文件批量索引</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST 'http://server:9200/bank/account/_bulk?pretty' --data-binary @accounts.json</span><br></pre></td></tr></table></figure>
<ul>
<li>批量索引操作</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST 'http://server:9200/bank/_search?pretty' -d '</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123;</span><br><span class="line">    "bool": &#123;</span><br><span class="line">      "must": [</span><br><span class="line">        &#123; "match": &#123; "address": "mill" &#125; &#125;,</span><br><span class="line">        &#123; "match": &#123; "address": "lane" &#125; &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure>
<ul>
<li>查看进程信息，包括打开文件数，是否锁定内存等:<code>curl &#39;http://server:9200/_nodes/process?pretty&#39;</code></li>
</ul>
<h2 id="索引相关"><a href="#索引相关" class="headerlink" title="索引相关"></a>索引相关</h2><table>
<thead>
<tr>
<th style="text-align:left">URL</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/index/_search</td>
<td style="text-align:left">不解释</td>
</tr>
<tr>
<td style="text-align:left">/_aliases</td>
<td style="text-align:left">获取或操作索引的别名</td>
</tr>
<tr>
<td style="text-align:left">/index/</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">/index/type/</td>
<td style="text-align:left">创建或操作类型</td>
</tr>
<tr>
<td style="text-align:left">/index/_mapping</td>
<td style="text-align:left">创建或操作mapping</td>
</tr>
<tr>
<td style="text-align:left">/index/_settings</td>
<td style="text-align:left">创建或操作设置(number_of_shards是不可更改的)</td>
</tr>
<tr>
<td style="text-align:left">/index/_open</td>
<td style="text-align:left">打开被关闭的索引</td>
</tr>
<tr>
<td style="text-align:left">/index/_close</td>
<td style="text-align:left">关闭索引</td>
</tr>
<tr>
<td style="text-align:left">/index/_refresh</td>
<td style="text-align:left">刷新索引（使新加内容对搜索可见）</td>
</tr>
<tr>
<td style="text-align:left">/index/_flush</td>
<td style="text-align:left">刷新索引，将变动提交到lucene索引文件中，并清空elasticsearch的transaction log</td>
</tr>
<tr>
<td style="text-align:left">/index/_optimize</td>
<td style="text-align:left">优化segement，个人认为主要是对segement进行合并</td>
</tr>
<tr>
<td style="text-align:left">/index/_status</td>
<td style="text-align:left">获得索引的状态信息</td>
</tr>
<tr>
<td style="text-align:left">/index/_segments</td>
<td style="text-align:left">获得索引的segments的状态信息</td>
</tr>
<tr>
<td style="text-align:left">/index/_explain</td>
<td style="text-align:left">不执行实际搜索，而返回解释信息</td>
</tr>
<tr>
<td style="text-align:left">/index/_analyze</td>
<td style="text-align:left">不执行实际搜索，根据输入的参数进行文本分析</td>
</tr>
<tr>
<td style="text-align:left">/index/type/id</td>
<td style="text-align:left">操作指定文档，不解释</td>
</tr>
<tr>
<td style="text-align:left">/index/type/id/_create</td>
<td style="text-align:left">创建一个文档，如果该文件已经存在，则返回失败</td>
</tr>
<tr>
<td style="text-align:left">/index/type/id/_update</td>
<td style="text-align:left">更新一个文件，如果改文件不存在，则返回失败</td>
</tr>
</tbody>
</table>
<h2 id="集群相关"><a href="#集群相关" class="headerlink" title="集群相关"></a>集群相关</h2><table>
<thead>
<tr>
<th style="text-align:left">URL</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/_cluster/nodes</td>
<td style="text-align:left">获得集群中的节点列表和信息</td>
</tr>
<tr>
<td style="text-align:left">/_cluster/health</td>
<td style="text-align:left">获得集群信息</td>
</tr>
<tr>
<td style="text-align:left">/_cluster/state</td>
<td style="text-align:left">获得集群里的所有信息（集群信息、节点信息、mapping信息等）</td>
</tr>
</tbody>
</table>
<h2 id="节点相关"><a href="#节点相关" class="headerlink" title="节点相关"></a>节点相关</h2><table>
<thead>
<tr>
<th style="text-align:left">URL</th>
<th style="text-align:left">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/_nodes/process</td>
<td style="text-align:left">主要看file descriptor 这个信息</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/process/stats</td>
<td style="text-align:left">统计信息（内存、CPU等）</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/jvm</td>
<td style="text-align:left">获得各节点的虚拟机统计和配置信息</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/jvm/stats</td>
<td style="text-align:left">更详细的虚拟机信息</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/http</td>
<td style="text-align:left">获得各个节点的http信息（如ip地址）</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/http/stats</td>
<td style="text-align:left">获得各个节点处理http请求的统计情况</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/thread_pool</td>
<td style="text-align:left">获得各种类型的线程池，（elasticsearch分别对不同的操作提供不同的线程池）的配置信息</td>
</tr>
<tr>
<td style="text-align:left">/_nodes/thread_pool/stats</td>
<td style="text-align:left">获得各种类型的线程池的统计信息</td>
</tr>
</tbody>
</table>
<p>以上这些操作可以通过如：</p>
<p><code>/_nodes/${nodeId}/jvm/stats</code>，<code>/_nodes/${nodeip}/jvm/stats</code>，<code>/_nodes/${nodeattribute}/jvm/stats</code>的形式针对指定节点的操作。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Elasticsearch入门学习(1)——安装]]></title>
      <url>http://keyunluo.github.io/2016/04/11/2016-04-11-elasticsearch-1.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>ElasticSearch</strong>是一个基于Lucene的接近实时的搜索平台。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口，是当前流行的企业级搜索引擎。本文先从安装Elasticsearch开始，一步一步探索。</p>
</blockquote>
<a id="more"></a>
<h2 id="ES下载和安装"><a href="#ES下载和安装" class="headerlink" title="ES下载和安装"></a>ES下载和安装</h2><ul>
<li><p>es(官方下载地址)[<a href="https://www.elastic.co/downloads/elasticsearch]，最新版本为2.3.1。不过github上有一个更好的选择(ElasticSearch-RTF)[https://github.com/medcl/elasticsearch-rtf.git],这个版本中已经集成了中文分词插件等，并且已经将插件配置好了，最新版本为2.2.1" target="_blank" rel="external">https://www.elastic.co/downloads/elasticsearch]，最新版本为2.3.1。不过github上有一个更好的选择(ElasticSearch-RTF)[https://github.com/medcl/elasticsearch-rtf.git],这个版本中已经集成了中文分词插件等，并且已经将插件配置好了，最新版本为2.2.1</a> ，非常适合初学者。安装时注意了，不要使用root权限用户安装es，否则es启动会报错，应该创建一个普通的用户安装es。</p>
</li>
<li><p>运行环境</p>
<ul>
<li>Linux和windows均可</li>
<li>jdk7+</li>
<li>32位/64位</li>
</ul>
</li>
<li><p>配置文件</p>
</li>
</ul>
<p>本文将Elasticsearch安装在<code>/opt/bigdata/elasticsearch</code>目录下，版本为<code>2.2.0</code>，集群为<code>Redhat7</code>，配置文件为<code>/opt/bigdata/elasticsearch/config/elasticsearch.yml</code>，下面贴上配置文件：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"># ======================== Elasticsearch Configuration =========================</span><br><span class="line">#</span><br><span class="line"># NOTE: Elasticsearch comes with reasonable defaults <span class="keyword">for</span> most settings.</span><br><span class="line">#       Before you <span class="built_in">set</span> out to tweak and tune the configuration, make sure you</span><br><span class="line">#       understand what are you trying to accomplish and the consequences.</span><br><span class="line">#</span><br><span class="line"># The primary way of configuring a node is via <span class="keyword">this</span> file. This <span class="keyword">template</span> lists</span><br><span class="line"># the most important settings you may want to configure <span class="keyword">for</span> a production cluster.</span><br><span class="line">#</span><br><span class="line"># Please see the documentation <span class="keyword">for</span> further information on configuration options:</span><br><span class="line"># &lt;http:<span class="comment">//www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration.html&gt;</span></span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Cluster -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Use a descriptive name <span class="keyword">for</span> your cluster:</span><br><span class="line"># 集群名称</span><br><span class="line"> cluster.name: Elasticsearch</span><br><span class="line">#</span><br><span class="line"># ------------------------------------ Node ------------------------------------</span><br><span class="line">#</span><br><span class="line"># Use a descriptive name <span class="keyword">for</span> the node:</span><br><span class="line"># 节点信息</span><br><span class="line"> node.name: ES-Hadoop-Spark-Master</span><br><span class="line"> node.master: <span class="literal">true</span></span><br><span class="line"> node.data: <span class="literal">true</span></span><br><span class="line"> index.number_of_replicas: <span class="number">1</span></span><br><span class="line">#</span><br><span class="line"># Add custom attributes to the node:</span><br><span class="line">#</span><br><span class="line"># node.rack: r1</span><br><span class="line">#</span><br><span class="line"># ----------------------------------- Paths ------------------------------------</span><br><span class="line">#</span><br><span class="line"># Path to directory where to store the data (separate multiple locations by comma):</span><br><span class="line"># 数据路径</span><br><span class="line"> path.data: /opt/elasticsearch/data</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Path to <span class="built_in">log</span> files:</span><br><span class="line">#</span><br><span class="line"># path.logs: /path/to/logs</span><br><span class="line"> path.logs: /opt/elasticsearch/logs</span><br><span class="line"> path.work: /opt/elasticsearch/work</span><br><span class="line"># ----------------------------------- Memory -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Lock the memory on startup:</span><br><span class="line">#</span><br><span class="line"># bootstrap.mlockall: <span class="literal">true</span></span><br><span class="line">#</span><br><span class="line"># Make sure that the `ES_HEAP_SIZE` environment variable is <span class="built_in">set</span> to about half the memory</span><br><span class="line"># available on the system and that the owner of the process is allowed to use <span class="keyword">this</span> limit.</span><br><span class="line">#</span><br><span class="line"># Elasticsearch performs poorly when the system is swapping the memory.</span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Network -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Set the bind address to a specific IP (IPv4 or IPv6):</span><br><span class="line"># 网络，设置为外网可以访问</span><br><span class="line"> network.host: <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">#</span><br><span class="line"># Set a custom port <span class="keyword">for</span> HTTP:</span><br><span class="line"># 端口，默认<span class="number">9200</span></span><br><span class="line"> http.port: <span class="number">9200</span></span><br><span class="line">#</span><br><span class="line"># For more information, see the documentation at:</span><br><span class="line"># &lt;http:<span class="comment">//www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html&gt;</span></span><br><span class="line">#</span><br><span class="line"># --------------------------------- Discovery ----------------------------------</span><br><span class="line">#</span><br><span class="line"># Pass an initial <span class="built_in">list</span> of hosts to perform discovery when <span class="keyword">new</span> node is started:</span><br><span class="line"># The <span class="keyword">default</span> <span class="built_in">list</span> of hosts is [<span class="string">"127.0.0.1"</span>, <span class="string">"[::1]"</span>]</span><br><span class="line">#</span><br><span class="line"># discovery.zen.ping.unicast.hosts: [<span class="string">"host1"</span>, <span class="string">"host2"</span>]</span><br><span class="line">#</span><br><span class="line"># Prevent the <span class="string">"split brain"</span> by configuring the majority of nodes (total number of nodes / <span class="number">2</span> + <span class="number">1</span>):</span><br><span class="line">#</span><br><span class="line"># discovery.zen.minimum_master_nodes: <span class="number">3</span></span><br><span class="line">#</span><br><span class="line"># For more information, see the documentation at:</span><br><span class="line"># &lt;http:<span class="comment">//www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery.html&gt;</span></span><br><span class="line"># 设置节点自动发现</span><br><span class="line"> discovery.zen.minimum_master_nodes: <span class="number">1</span></span><br><span class="line"> discovery.zen.ping.timeout: <span class="number">3</span>s    ##节点间自动发现的响应时间</span><br><span class="line"> discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.100.101"</span>]</span><br><span class="line"># ---------------------------------- Gateway -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Block initial recovery after a full cluster restart until N nodes are started:</span><br><span class="line">#</span><br><span class="line"># gateway.recover_after_nodes: <span class="number">3</span></span><br><span class="line">#</span><br><span class="line"># For more information, see the documentation at:</span><br><span class="line"># &lt;http:<span class="comment">//www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html&gt;</span></span><br><span class="line">#</span><br><span class="line"># ---------------------------------- Various -----------------------------------</span><br><span class="line">#</span><br><span class="line"># Disable starting multiple nodes on a single system:</span><br><span class="line">#</span><br><span class="line"># node.max_local_storage_nodes: <span class="number">1</span></span><br><span class="line">#</span><br><span class="line"># Require <span class="keyword">explicit</span> names when deleting indices:</span><br><span class="line">#</span><br><span class="line"># action.destructive_requires_name: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>在上述配置中，已经设置主节点为<code>192.168.100.101</code>，还有两个从节点<code>192.168.100.107</code>以及<code>192.168.100.110</code>，它们的配置不同点在于<code>Node</code>的设置，从节点中设置如下：<code>node.name: ES-Hadoop-Spark-Node1</code>，<code>node.master: false</code>,因为设置了节点的自动发现机制，所以在启动Elasticsearch后，集群会自动根据<code>cluster.name: Elasticsearch</code>来添加数据节点。</p>
<ul>
<li>启动集群
进入<code>/opt/bigdata/elasticsearch</code>，运行<code>bin/elasticsearch</code>,便可以启动<code>elasticsearch</code>，如果想当shell关闭时任然要在后台运行elasticsearch服务，可以运行命令<code>nohub bin/elasticsearch &amp;</code>,这样当shell关闭时，仍可访问服务。分别进入到两个数据节点，运行同样的命令，这样，集群便搭建好了。
当然我们也可以在启动的时候修改集群的名称和节点的名称。例如：
<code>bin/elasticsearch --cluster.name my_cluster_name --node.name my_node_name</code>来指定集群名字和主节点。</li>
</ul>
<h2 id="ES插件安装"><a href="#ES插件安装" class="headerlink" title="ES插件安装"></a>ES插件安装</h2><p><code>head</code>插件可以很方便的查询数据和监控集群健康状况，下面以<code>head</code>插件安装为例，介绍下ES2.x下插件安装的一般步骤。</p>
<p>进入<code>/opt/bigdata/elasticsearch</code>目录，运行<code>bin/plugin install mobz/elasticsearch-head</code>, 下载完成后，访问网址<code>http://server:9200/_plugin/head/</code>，便可以看到如下界面，说明安装成功。
<img src="/resource/blog/2016-04/elasticsearch-head.png" alt="head"></p>
<p>插件可以分为核心插件和非核心插件，核心插件是官方提供的，可以直接安装，例如<code>bin/plugin install analysis-icu</code>，这样就会下载合适的版本安装到Elasticsearch中。非核心插件可以是官方提供的，也可以是社区提供的，可以从官方，Maven或者GitHub中下载安装：<code>bin/plugin install [org]/[user|component]/[version]</code>。</p>
<p>例如，安装github上的插件，<code>plugin install lmenezes/elasticsearch-kopf</code>，插件会尝试先到官方去下载，如果没有找到会到maven.com中去下载，如果在没有找到回到github中去下载。脚本还是非常智能的。当我们从直接maven中央库中安装时可以直接使用下面的方式，最后的版本号是必须要写的。
<code>plugin install org.elasticsearch.plugin/mapper-attachments/3.0.0</code>
从自定义网址或者本地安装：<code>plugin install [url]</code>，例如，在本地文件系统中安装一个插件，可以运行：<code>plugin install file:///path/to/plugin.zip</code>。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Sqoop从Oracle中导入数据到hadoop]]></title>
      <url>http://keyunluo.github.io/2016/04/09/2016-04-09-using-sqoop2-oracledb-hadoop.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录从Oracle12c导入数据到Hadoop中的流程，使用Sqoop2工具,目前Sqoop2只支持将oracle/mysql数据库中的数据与HDFS中数据相互导入导出，目前并不支持导入到HBase/Hive中，因此在实际业务中并不好用，后面介绍使用Sqoop1导入数据到Hbase的流程。</p>
</blockquote>
<a id="more"></a>
<hr>
<h2 id="Sqoop2安装过程"><a href="#Sqoop2安装过程" class="headerlink" title="Sqoop2安装过程"></a>Sqoop2安装过程</h2><ul>
<li><em>1</em>: 下载最新版本的sqoop2:sqoop1.99.6</li>
</ul>
<p><code>wget http://mirrors.ustc.edu.cn/apache/sqoop/1.99.6/sqoop-1.99.6-bin-hadoop200.tar.gz</code></p>
<p>本人将其安装在服务器<code>slave01</code>中的<code>/opt/bigdata/sqoop</code>目录下。</p>
<ul>
<li><em>2</em>:配置环境变量:在<code>/etc/profile</code>中配置环境变量</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export SQOOP2_HOME=/opt/bigdata/sqoop</span><br><span class="line">export PATH=$PATH:$SQOOP2_HOME/bin</span><br><span class="line">export CATALINA_BASE=$SQOOP2_HOME/server</span><br><span class="line">export LOGDIR=$SQOOP2_HOME/logs</span><br></pre></td></tr></table></figure>
<p>在Bash中运行<code>source /etc/profile</code>使环境变量立即生效。</p>
<ul>
<li><em>3</em>: Sqoop服务端配置</li>
</ul>
<p>编辑<code>$SQOOP2_HOME/server/conf/catalina.properties</code>文件，修改<code>common.loader</code>配置，将Hadoop路径下的jar包全部包括进去。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">common.loader=$&#123;catalina.base&#125;/lib/*.jar,$&#123;catalina.base&#125;/lib/*.jar,$&#123;catalina.home&#125;/lib/*.jar,$&#123;catalina.home&#125;/lib/*.jar,$&#123;catalina.home&#125;/../lib/*.jar,/opt/bigdata/sqoop/server/lib/*.jar,/opt/hadoop-2.7.1/etc/hadoop,/opt/hadoop-2.7.1/share/hadoop/common/lib/*.jar,/opt/hadoop-2.7.1/share/hadoop/common/*.jar,/opt/hadoop-2.7.1/share/hadoop/hdfs/*.jar,/opt/hadoop-2.7.1/share/hadoop/hdfs/lib/*.jar,/opt/hadoop-2.7.1/share/hadoop/hdfs/*.jar,/opt/hadoop-2.7.1/share/hadoop/yarn/lib/*.jar,/opt/hadoop-2.7.1/share/hadoop/yarn/*.jar,/opt/hadoop-2.7.1/share/hadoop/mapreduce/lib/*.jar,/opt/hadoop-2.7.1/share/hadoop/mapreduce/*.jar,/opt/bigdata/hbase/lib/*.jar</span><br></pre></td></tr></table></figure>
<p>编辑<code>$SQOOP2_HOME/server/conf/sqoop.properties</code>文件，修改Hadoop安装的配置目录:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.sqoop.submission.engine.mapreduce.configuration.directory=/opt/hadoop-2.7.1/etc/hadoop/</span><br></pre></td></tr></table></figure>
<p>找到这行<code>org.apache.sqoop.repository.jdbc.url=jdbc:derby:@BASEDIR@/repository/db;create=true</code>,修改<code>@BASEDIR@</code>为<code>sqoop2</code>安装目录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.sqoop.repository.jdbc.url=jdbc:derby:/opt/bigdata/sqoop/repository/db;create=true</span><br></pre></td></tr></table></figure>
<ul>
<li><em>4</em>:下载数据库驱动</li>
</ul>
<p>必备驱动：Mysql数据取驱动是必须使用的，这里使用的是<code>mysql-connector-java-5.1.37-bin.jar</code></p>
<p>Oracle驱动：因为要连接Oracle数据库，所以还要使用oracle的驱动：<code>ojdbc7.jar</code></p>
<p>将上述两个驱动复制到<code>$SQOOP2_HOME/server/lib</code>目录下，至此，配置完成。</p>
<h2 id="验证sqoop2安装"><a href="#验证sqoop2安装" class="headerlink" title="验证sqoop2安装"></a>验证sqoop2安装</h2><p>使用<code>sqoop2-tool verify</code>验证Sqoo2是否安装成功：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave01 sqoop]$ sqoop2-tool verify</span><br><span class="line">Sqoop home directory: /opt/bigdata/sqoop</span><br><span class="line">Setting SQOOP_HTTP_PORT:     12000</span><br><span class="line">Setting SQOOP_ADMIN_PORT:     12001</span><br><span class="line">Using   CATALINA_OPTS:</span><br><span class="line">Adding to CATALINA_OPTS:    -Dsqoop.http.port=12000 -Dsqoop.admin.port=12001</span><br><span class="line">Apr 09, 2016 4:13:03 PM org.apache.catalina.startup.ClassLoaderFactory validateFile</span><br><span class="line">WARNING: Problem with directory [/opt/bigdata/sqoop/lib], exists: [false], isDirectory: [false], canRead: [false]</span><br><span class="line">Sqoop tool executor:</span><br><span class="line">	Version: 1.99.6</span><br><span class="line">	Revision: 07244c3915975f26f03d9e1edf09ab7d06619bb8</span><br><span class="line">	Compiled on Wed Apr 29 10:40:43 CST 2015 by root</span><br><span class="line">Running tool: class org.apache.sqoop.tools.tool.VerifyTool</span><br><span class="line">16/04/09 16:13:03 INFO core.SqoopServer: Booting up Sqoop server</span><br><span class="line">16/04/09 16:13:03 INFO core.PropertiesConfigurationProvider: Starting config file poller thread</span><br><span class="line">log4j: Parsing for [root] with value=[WARN, file].</span><br><span class="line">log4j: Level token is [WARN].</span><br><span class="line">log4j: Category root set to WARN</span><br><span class="line">log4j: Parsing appender named "file".</span><br><span class="line">log4j: Parsing layout options for "file".</span><br><span class="line">log4j: Setting property [conversionPattern] to [%d&#123;ISO8601&#125; %-5p %c&#123;2&#125; [%l] %m%n].</span><br><span class="line">log4j: End of parsing for "file".</span><br><span class="line">log4j: Setting property [file] to [@LOGDIR@/sqoop.log].</span><br><span class="line">log4j: Setting property [maxBackupIndex] to [5].</span><br><span class="line">log4j: Setting property [maxFileSize] to [25MB].</span><br><span class="line">log4j: setFile called: @LOGDIR@/sqoop.log, true</span><br><span class="line">log4j: setFile ended</span><br><span class="line">log4j: Parsed "file" options.</span><br><span class="line">log4j: Parsing for [org.apache.sqoop] with value=[DEBUG].</span><br><span class="line">log4j: Level token is [DEBUG].</span><br><span class="line">log4j: Category org.apache.sqoop set to DEBUG</span><br><span class="line">log4j: Handling log4j.additivity.org.apache.sqoop=[null]</span><br><span class="line">log4j: Parsing for [org.apache.derby] with value=[INFO].</span><br><span class="line">log4j: Level token is [INFO].</span><br><span class="line">log4j: Category org.apache.derby set to INFO</span><br><span class="line">log4j: Handling log4j.additivity.org.apache.derby=[null]</span><br><span class="line">log4j: Finished configuring.</span><br><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding in [jar:file:/opt/hadoop-2.7.1/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: Found binding in [jar:file:/opt/bigdata/hbase/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.</span><br><span class="line">SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]</span><br><span class="line">log4j: Could not find root logger information. Is this OK?</span><br><span class="line">log4j: Parsing for [default] with value=[INFO,defaultAppender].</span><br><span class="line">log4j: Level token is [INFO].</span><br><span class="line">log4j: Category default set to INFO</span><br><span class="line">log4j: Parsing appender named "defaultAppender".</span><br><span class="line">log4j: Parsing layout options for "defaultAppender".</span><br><span class="line">log4j: Setting property [conversionPattern] to [%d %-5p %c: %m%n].</span><br><span class="line">log4j: End of parsing for "defaultAppender".</span><br><span class="line">log4j: Setting property [file] to [@LOGDIR@/default.audit].</span><br><span class="line">log4j: setFile called: @LOGDIR@/default.audit, true</span><br><span class="line">log4j: setFile ended</span><br><span class="line">log4j: Parsed "defaultAppender" options.</span><br><span class="line">log4j: Handling log4j.additivity.default=[null]</span><br><span class="line">log4j: Finished configuring.</span><br><span class="line">log4j: Finalizing appender named [EventCounter].</span><br><span class="line">Exception in thread "PurgeThread" org.apache.sqoop.common.SqoopException: JDBCREPO_0009:Failed to finalize transaction</span><br><span class="line">	at org.apache.sqoop.repository.JdbcRepositoryTransaction.close(JdbcRepositoryTransaction.java:115)</span><br><span class="line">	at org.apache.sqoop.repository.JdbcRepository.doWithConnection(JdbcRepository.java:111)</span><br><span class="line">	at org.apache.sqoop.repository.JdbcRepository.doWithConnection(JdbcRepository.java:63)</span><br><span class="line">	at org.apache.sqoop.repository.JdbcRepository.purgeSubmissions(JdbcRepository.java:591)</span><br><span class="line">	at org.apache.sqoop.driver.JobManager$PurgeThread.run(JobManager.java:660)</span><br><span class="line">Caused by: java.sql.SQLNonTransientConnectionException: No current connection.</span><br><span class="line">	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.Util.noCurrentConnection(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.EmbedConnection.checkIfClosed(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.EmbedConnection.setupContextStack(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.EmbedConnection.commit(Unknown Source)</span><br><span class="line">	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)</span><br><span class="line">	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)</span><br><span class="line">	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:211)</span><br><span class="line">	at org.apache.sqoop.repository.JdbcRepositoryTransaction.close(JdbcRepositoryTransaction.java:112)</span><br><span class="line">	... 4 more</span><br><span class="line">Caused by: java.sql.SQLException: No current connection.</span><br><span class="line">	at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(Unknown Source)</span><br><span class="line">	at org.apache.derby.impl.jdbc.SQLExceptionFactory40.wrapArgsForTransportAcrossDRDA(Unknown Source)</span><br><span class="line">	... 15 more</span><br><span class="line">Verification was successful.</span><br><span class="line">Tool class org.apache.sqoop.tools.tool.VerifyTool has finished correctly.</span><br><span class="line">[hadoop@slave01 sqoop]$</span><br></pre></td></tr></table></figure>
<p>忽略<code>JDBCREPO_0009</code>异常，出现<code>Verification was successful</code>则说明安装是没有问题的。</p>
<h2 id="连接Oracle数据库"><a href="#连接Oracle数据库" class="headerlink" title="连接Oracle数据库"></a>连接Oracle数据库</h2><ul>
<li>1 启动sqoop</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave01 sqoop]$ sqoop.sh server start</span><br><span class="line">Sqoop home directory: /opt/bigdata/sqoop</span><br><span class="line">Setting SQOOP_HTTP_PORT:     <span class="number">12000</span></span><br><span class="line">Setting SQOOP_ADMIN_PORT:     <span class="number">12001</span></span><br><span class="line">Using   CATALINA_OPTS:</span><br><span class="line">Adding to CATALINA_OPTS:    -Dsqoop.http.port=<span class="number">12000</span> -Dsqoop.admin.port=<span class="number">12001</span></span><br><span class="line">Using CATALINA_BASE:   /opt/bigdata/sqoop/server</span><br><span class="line">Using CATALINA_HOME:   /opt/bigdata/sqoop/server</span><br><span class="line">Using CATALINA_TMPDIR: /opt/bigdata/sqoop/server/temp</span><br><span class="line">Using JRE_HOME:        /opt/oracle_jdk_1<span class="number">.7</span></span><br><span class="line">Using CLASSPATH:       /opt/bigdata/sqoop/server/bin/bootstrap.jar</span><br></pre></td></tr></table></figure>
<ul>
<li>2 使用<code>sqoop2-shell</code>操作</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave01 sqoop]$ sqoop2-shell</span><br><span class="line">Sqoop home directory: /opt/bigdata/sqoop</span><br><span class="line">Sqoop Shell: Type <span class="string">'help'</span> <span class="keyword">or</span> <span class="string">'\h'</span> <span class="keyword">for</span> help.</span><br><span class="line"></span><br><span class="line">sqoop:<span class="number">000</span>&gt; show version --all</span><br><span class="line">client version:</span><br><span class="line">  Sqoop <span class="number">1.99</span><span class="number">.6</span> source revision <span class="number">07244</span>c3915975f26f03d9e1edf09ab7d06619bb8</span><br><span class="line">  Compiled by root on Wed Apr <span class="number">29</span> <span class="number">10</span>:<span class="number">40</span>:<span class="number">43</span> CST <span class="number">2015</span></span><br><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/opt/hadoop<span class="number">-2.7</span><span class="number">.1</span>/share/hadoop/common/lib/slf4j-log4j12<span class="number">-1.7</span><span class="number">.10</span>.jar!/org/slf4j/impl/StaticLoggerBinder.<span class="keyword">class</span>]</span><br><span class="line">SLF4J: Found binding <span class="keyword">in</span> [jar:file:/opt/bigdata/sqoop/shell/lib/slf4j-log4j12<span class="number">-1.6</span><span class="number">.1</span>.jar!/org/slf4j/impl/StaticLoggerBinder.<span class="keyword">class</span>]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html<span class="comment">#multiple_bindings for an explanation.</span></span><br><span class="line">SLF4J: Actual binding <span class="keyword">is</span> of type [org.slf4j.impl.Log4jLoggerFactory]</span><br><span class="line"><span class="number">16</span>/<span class="number">04</span>/<span class="number">09</span> <span class="number">16</span>:<span class="number">19</span>:<span class="number">50</span> WARN util.NativeCodeLoader: Unable to load native-hadoop library <span class="keyword">for</span> your platform... using builtin-java classes where applicable</span><br><span class="line">server version:</span><br><span class="line">  Sqoop <span class="number">1.99</span><span class="number">.6</span> source revision <span class="number">07244</span>c3915975f26f03d9e1edf09ab7d06619bb8</span><br><span class="line">  Compiled by root on Wed Apr <span class="number">29</span> <span class="number">10</span>:<span class="number">40</span>:<span class="number">43</span> CST <span class="number">2015</span></span><br><span class="line">API versions:</span><br><span class="line">  [v1]</span><br><span class="line">sqoop:<span class="number">000</span>&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>3 查看可用的connectors</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; show connector</span><br><span class="line">+----+------------------------+---------+------------------------------------------------------+----------------------+</span><br><span class="line">| Id |          Name          | Version |                        Class                         | Supported Directions |</span><br><span class="line">+----+------------------------+---------+------------------------------------------------------+----------------------+</span><br><span class="line">| <span class="number">1</span>  | kite-connector         | <span class="number">1.99</span><span class="number">.6</span>  | org.apache.sqoop.connector.kite.KiteConnector        | FROM/TO              |</span><br><span class="line">| <span class="number">2</span>  | kafka-connector        | <span class="number">1.99</span><span class="number">.6</span>  | org.apache.sqoop.connector.kafka.KafkaConnector      | TO                   |</span><br><span class="line">| <span class="number">3</span>  | hdfs-connector         | <span class="number">1.99</span><span class="number">.6</span>  | org.apache.sqoop.connector.hdfs.HdfsConnector        | FROM/TO              |</span><br><span class="line">| <span class="number">4</span>  | generic-jdbc-connector | <span class="number">1.99</span><span class="number">.6</span>  | org.apache.sqoop.connector.jdbc.GenericJdbcConnector | FROM/TO              |</span><br><span class="line">+----+------------------------+---------+------------------------------------------------------+----------------------+</span><br><span class="line">sqoop:<span class="number">000</span>&gt;</span><br></pre></td></tr></table></figure>
<p>可以看到，我们将要使用的是hdfs和jdbc连接。</p>
<ul>
<li>4 创建Oracle连接</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; create link -c <span class="number">4</span></span><br><span class="line">Creating link <span class="keyword">for</span> connector <span class="keyword">with</span> id <span class="number">4</span></span><br><span class="line">Please fill following values to create new link object</span><br><span class="line">Name: Oracle DB</span><br><span class="line"></span><br><span class="line">Link configuration</span><br><span class="line"></span><br><span class="line">JDBC Driver Class: oracle.jdbc.OracleDriver</span><br><span class="line">JDBC Connection String: jdbc:oracle:thin:@//<span class="number">192.168</span><span class="number">.100</span><span class="number">.108</span>/orcl</span><br><span class="line">Username: c<span class="comment">##hadoop</span></span><br><span class="line">Password: ******</span><br><span class="line">JDBC Connection Properties:</span><br><span class="line">There are currently <span class="number">0</span> values <span class="keyword">in</span> the map:</span><br><span class="line">entry<span class="comment">#</span></span><br><span class="line">New link was successfully created <span class="keyword">with</span> validation status OK <span class="keyword">and</span> persistent id <span class="number">6</span></span><br></pre></td></tr></table></figure>
<ul>
<li>5 创建HDFS连接</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; create link -c <span class="number">3</span></span><br><span class="line">Creating link <span class="keyword">for</span> connector <span class="keyword">with</span> id <span class="number">3</span></span><br><span class="line">Please fill following values to create new link object</span><br><span class="line">Name: HDFS Link</span><br><span class="line"></span><br><span class="line">Link configuration</span><br><span class="line"></span><br><span class="line">HDFS URI: hdfs://slave01:<span class="number">9000</span>/</span><br><span class="line">Hadoop conf directory: /opt/hadoop<span class="number">-2.7</span><span class="number">.1</span>/etc/hadoop</span><br><span class="line">New link was successfully created <span class="keyword">with</span> validation status OK <span class="keyword">and</span> persistent id <span class="number">7</span></span><br></pre></td></tr></table></figure>
<ul>
<li>6 验证连接</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; show link</span><br><span class="line">+----+------------+--------------+------------------------+---------+</span><br><span class="line">| Id |    Name    | Connector Id |     Connector Name     | Enabled |</span><br><span class="line">+----+------------+--------------+------------------------+---------+</span><br><span class="line">| <span class="number">6</span>  | Oracle DB  | <span class="number">4</span>            | generic-jdbc-connector | true    |</span><br><span class="line">| <span class="number">7</span>  | HDFS Link  | <span class="number">3</span>            | hdfs-connector         | true    |</span><br><span class="line">+----+------------+--------------+------------------------+---------+</span><br></pre></td></tr></table></figure>
<ul>
<li>7 创建<code>Sqoop Job</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; create job -f <span class="number">6</span> -t <span class="number">7</span></span><br><span class="line">Creating job <span class="keyword">for</span> links <span class="keyword">with</span> <span class="keyword">from</span> id <span class="number">6</span> <span class="keyword">and</span> to id <span class="number">7</span></span><br><span class="line">Please fill following values to create new job object</span><br><span class="line">Name: Oracle HDFS</span><br><span class="line"></span><br><span class="line">From database configuration</span><br><span class="line"></span><br><span class="line">Schema name: C<span class="comment">##hadoop</span></span><br><span class="line">Table name: T_DTXX_GPSXX20160317</span><br><span class="line">Table SQL statement:</span><br><span class="line">Table column names: ID,ZDBH,GPSSJ,JLSJ,CCSJ,JD,WD,WXSL,BZ</span><br><span class="line">Partition column name: ID</span><br><span class="line">Null value allowed <span class="keyword">for</span> the partition column:</span><br><span class="line">Boundary query:</span><br><span class="line"></span><br><span class="line">Incremental read</span><br><span class="line"></span><br><span class="line">Check column:</span><br><span class="line">Last value:</span><br><span class="line"></span><br><span class="line">To HDFS configuration</span><br><span class="line"></span><br><span class="line">Override null value:</span><br><span class="line">Null value:</span><br><span class="line">Output format:</span><br><span class="line">  <span class="number">0</span> : TEXT_FILE</span><br><span class="line">  <span class="number">1</span> : SEQUENCE_FILE</span><br><span class="line">Choose: <span class="number">0</span></span><br><span class="line">Compression format:</span><br><span class="line">  <span class="number">0</span> : NONE</span><br><span class="line">  <span class="number">1</span> : DEFAULT</span><br><span class="line">  <span class="number">2</span> : DEFLATE</span><br><span class="line">  <span class="number">3</span> : GZIP</span><br><span class="line">  <span class="number">4</span> : BZIP2</span><br><span class="line">  <span class="number">5</span> : LZO</span><br><span class="line">  <span class="number">6</span> : LZ4</span><br><span class="line">  <span class="number">7</span> : SNAPPY</span><br><span class="line">  <span class="number">8</span> : CUSTOM</span><br><span class="line">Choose: <span class="number">0</span></span><br><span class="line">Custom compression format:</span><br><span class="line">Output directory: /user/hadoop/oracledata</span><br><span class="line">Append mode:</span><br><span class="line"></span><br><span class="line">Throttling resources</span><br><span class="line"></span><br><span class="line">Extractors:</span><br><span class="line">Loaders:</span><br><span class="line">New job was successfully created <span class="keyword">with</span> validation status OK  <span class="keyword">and</span> persistent id <span class="number">3</span></span><br><span class="line">sqoop:<span class="number">000</span>&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>8 查看Job</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; show job</span><br><span class="line">+----+--------------+----------------+--------------+---------+</span><br><span class="line">| Id |     Name     | From Connector | To Connector | Enabled |</span><br><span class="line">+----+--------------+----------------+--------------+---------+</span><br><span class="line">| <span class="number">1</span>  | OH           | <span class="number">4</span>              | <span class="number">3</span>            | true    |</span><br><span class="line">| <span class="number">2</span>  | <span class="number">1519</span>         | <span class="number">4</span>              | <span class="number">3</span>            | true    |</span><br><span class="line">| <span class="number">3</span>  | Oracle HDFS  | <span class="number">4</span>              | <span class="number">3</span>            | true    |</span><br><span class="line">+----+--------------+----------------+--------------+---------+</span><br></pre></td></tr></table></figure>
<p>其中<code>3</code>就是我们刚刚创建的Job。</p>
<ul>
<li>9 启动Job</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">sqoop:<span class="number">000</span>&gt; start job -j <span class="number">3</span></span><br><span class="line">Submission details</span><br><span class="line">Job ID: <span class="number">3</span></span><br><span class="line">Server URL: http://localhost:<span class="number">12000</span>/sqoop/</span><br><span class="line">Created by: hadoop</span><br><span class="line">Creation date: <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">46</span>:<span class="number">57</span> CST</span><br><span class="line">Lastly updated by: hadoop</span><br><span class="line">External ID: job_1459172324738_0017</span><br><span class="line">	http://slave01:<span class="number">8088</span>/proxy/application_1459172324738_0017/</span><br><span class="line">Source Connector schema: Schema&#123;name=C<span class="comment">##hadoop.T_DTXX_GPSXX20160317,columns=[</span></span><br><span class="line">	Text&#123;name=ID,nullable=true,type=TEXT,charSize=null&#125;,</span><br><span class="line">	Text&#123;name=ZDBH,nullable=true,type=TEXT,charSize=null&#125;,</span><br><span class="line">	Date&#123;name=GPSSJ,nullable=true,type=DATE_TIME,hasFraction=true,hasTimezone=false&#125;,</span><br><span class="line">	Date&#123;name=JLSJ,nullable=true,type=DATE_TIME,hasFraction=true,hasTimezone=false&#125;,</span><br><span class="line">	Date&#123;name=CCSJ,nullable=true,type=DATE_TIME,hasFraction=true,hasTimezone=false&#125;,</span><br><span class="line">	Text&#123;name=JD,nullable=true,type=TEXT,charSize=null&#125;,</span><br><span class="line">	Text&#123;name=WD,nullable=true,type=TEXT,charSize=null&#125;,</span><br><span class="line">	Decimal&#123;name=WXSL,nullable=true,type=DECIMAL,precision=<span class="number">2</span>,scale=<span class="number">0</span>&#125;,</span><br><span class="line">	Text&#123;name=BZ,nullable=true,type=TEXT,charSize=null&#125;]&#125;</span><br><span class="line"><span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">46</span>:<span class="number">57</span> CST: BOOTING  - Progress <span class="keyword">is</span> <span class="keyword">not</span> available</span><br></pre></td></tr></table></figure>
<p>没有抛出异常后，sqoop就已经在后台开始运行了，这时候可以查看Hadoop JobServer,可以看到任务已经在运行了。</p>
<ul>
<li>10 查看HDFS上数据</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave01 sqoop]$ hdfs dfs -ls oracledata</span><br><span class="line">Found <span class="number">8</span> items</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup   <span class="number">46362076</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">47</span> oracledata/<span class="number">034</span>fd092-bd7a<span class="number">-462</span>a-a566<span class="number">-05</span>cd123d11ed.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup   <span class="number">92831643</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">47</span> oracledata/<span class="number">0</span>b537981<span class="number">-1711</span><span class="number">-411</span>a-bb09-d304c83839ea.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup   <span class="number">46547213</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">47</span> oracledata/<span class="number">1526e2</span>d2-b385<span class="number">-4</span>a45<span class="number">-9841</span>-f8001fc74a7e.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup  <span class="number">185898348</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">48</span> oracledata/<span class="number">851645</span>db-b5a3<span class="number">-4265</span><span class="number">-8</span>ead<span class="number">-916</span>c8680dc11.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup   <span class="number">92913401</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">47</span> oracledata/da722cf7<span class="number">-38</span>d9<span class="number">-41</span>c0-b17f-dcd5a19a69e6.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup  <span class="number">139531748</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">48</span> oracledata/dacf1fc9-ca48<span class="number">-4058</span><span class="number">-837e-9380</span>aefc2dfe.txt</span><br><span class="line">-rw-r--r--   <span class="number">2</span> hadoop supergroup  <span class="number">139583915</span> <span class="number">2016</span><span class="number">-04</span><span class="number">-09</span> <span class="number">16</span>:<span class="number">48</span> oracledata/e393d0f5-f05a<span class="number">-4790</span>-bde0<span class="number">-9</span>d8d8d4a7b06.txt</span><br></pre></td></tr></table></figure>
<p>至此，数据已经导入了</p>
<h2 id="常用命令总结"><a href="#常用命令总结" class="headerlink" title="常用命令总结"></a>常用命令总结</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">set option --name verbose --value true 设置异常显示，便于查错</span><br><span class="line">sqoop.sh server start    启动</span><br><span class="line">sqoop.sh server stop     停止</span><br><span class="line">sqoop.sh client          进入客户端</span><br><span class="line">set server --host hadoopMaster --port <span class="number">12000</span> --webapp sqoop 设置服务器，注意hadoopMaster为hdfs主机名</span><br><span class="line">show connector --all    查看连接类型</span><br><span class="line">create link --cid <span class="number">1</span>    创建连接，cid为连接类型id</span><br><span class="line">show link 查看连接</span><br><span class="line">update link -l <span class="number">1</span> 修改id为<span class="number">1</span>的连接</span><br><span class="line">delete link -l <span class="number">1</span> 删除id为<span class="number">1</span>的连接</span><br><span class="line">create job -f <span class="number">1</span> -t <span class="number">2</span> 创建从连接<span class="number">1</span>到连接<span class="number">2</span>的job</span><br><span class="line">show job 查看job</span><br><span class="line">update job -jid <span class="number">1</span>    修改job</span><br><span class="line">delete job -jid <span class="number">1</span>    删除job</span><br><span class="line">status job -jid <span class="number">1</span>    看看job状态</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Oracle 12c 使用入门(1) ——SQL*Plus]]></title>
      <url>http://keyunluo.github.io/2016/03/25/2016-03-25-oracle-12c-using.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录开始使用Oracle12c的一些步骤以及注意事项。</p>
</blockquote>
<a id="more"></a>
<hr>
<h2 id="启动和关闭Oracle数据库"><a href="#启动和关闭Oracle数据库" class="headerlink" title="启动和关闭Oracle数据库"></a>启动和关闭Oracle数据库</h2><p>刚开始安装完Oracle数据库时，如果数据库未设置成自动启动，则启动服务后还需要启动数据库。启动数据库需要以<code>sys</code>用户在<code>SQL * PLUS</code>中执行<code>startup</code>命令。下面命令以操作系统验证的方式连接数据库，不需要输入账号和密码，连接数据库后，以sys用户执行各个操作：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@slave08 ~]$ sqlplus / as sysdba</span><br><span class="line"></span><br><span class="line">SQL*Plus: Release 12.1.0.2.0 Production on Sat Mar 26 15:43:16 2016</span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2014, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">Oracle Database 12c Enterprise Edition Release 12.1.0.2.0 - 64bit Production</span><br><span class="line">With the Partitioning, OLAP, Advanced Analytics and Real Application Testing options</span><br><span class="line"></span><br><span class="line">SQL&gt; startup</span><br><span class="line">ORA-01081: cannot start already-running ORACLE - shut it down first</span><br><span class="line">SQL&gt; shutdown immediate</span><br><span class="line">Database closed.</span><br><span class="line">Database dismounted.</span><br><span class="line">ORACLE instance shut down.</span><br><span class="line">SQL&gt; startup</span><br><span class="line">ORACLE instance started.</span><br><span class="line"></span><br><span class="line">Total System Global Area 4.0534E+10 bytes</span><br><span class="line">Fixed Size		    7653432 bytes</span><br><span class="line">Variable Size		 6308235208 bytes</span><br><span class="line">Database Buffers	 3.4091E+10 bytes</span><br><span class="line">Redo Buffers		  126562304 bytes</span><br><span class="line">Database mounted.</span><br><span class="line">Database opened.</span><br><span class="line">SQL&gt;</span><br></pre></td></tr></table></figure>
<p>关闭数据库使用shutdown命令，可以附加normal,transactional,immediate以及abort选项，默认选项为normal，会等待所有用户退出连接后再关闭数据库，一般使用<code>immediate</code>。</p>
<h2 id="常用SQL-PLus操作"><a href="#常用SQL-PLus操作" class="headerlink" title="常用SQL*PLus操作"></a>常用SQL*PLus操作</h2><p>Oracle数据库的客户端工具主要有SQL * Plus(字符界面数据库工具，面向应用开发人员以及数据库管理人员，用于执行SQL命令，编写存储过程，以及各种数据库管理任务) ,SQL Developer(Java编写的一个图形界面工具，面向对象主要是数据库应用开发人员) ,Enterprise Manager(OEM，使用浏览器管理数据，面向对象为数据库管理员)。</p>
<h4 id="使用SQL-Plus连接到本地数据库"><a href="#使用SQL-Plus连接到本地数据库" class="headerlink" title="使用SQL*Plus连接到本地数据库"></a>使用SQL*Plus连接到本地数据库</h4><p>要使用数据库，必须使用合法的用户及密码， 有以下三种方式:</p>
<ul>
<li>启动SQL*Plus的同时，输入用户名及密码。</li>
<li>使用 nolog选项，单独启动SQL*Plus，然后再输入用户名和密码。</li>
<li>单独启动SQL*Plus，根据提示输入用户名和密码。</li>
</ul>
<h4 id="切换连接用户"><a href="#切换连接用户" class="headerlink" title="切换连接用户"></a>切换连接用户</h4><p>SQL*Plus使用<code>connect</code>命令切换用户，<code>connect</code>关键字可以简写为<code>conn</code>,使用<code>show user</code>命令可以查看当前的数据库的用户名称。</p>
<h4 id="切换数据库"><a href="#切换数据库" class="headerlink" title="切换数据库"></a>切换数据库</h4><p>oracle的一个数据库对应一个服务，切换数据库也就是切换数据库服务。本地服务器如果创建了多个数据库，可以通过设置ORACLE_SID环境变量切换SQL*Plus默认连接的数据库。例如：<code>set oracle_sid=law12</code>便可以改变默认连接的数据库。</p>
<h4 id="执行SQL脚本文件"><a href="#执行SQL脚本文件" class="headerlink" title="执行SQL脚本文件"></a>执行SQL脚本文件</h4><p>可以在文本文件中编辑任意SQL命令，然后保存为sql脚本文件，便可以在SQL*Plus中执行该脚本，使用<code>Start</code>或<code>@</code> 该脚本。</p>
<h2 id="设置SQL-Plus环境"><a href="#设置SQL-Plus环境" class="headerlink" title="设置SQL*Plus环境"></a>设置SQL*Plus环境</h2><p>SQL*Plus在启动时，会自动执行<code>%ORACLE_HOME%\sqlplus\admin</code>目录下的<code>glogin.sql</code>文件，可以把经常使用的环境命令设置添加到次文件中。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">define_editor=vim  #设置ED命令默认使用的编辑器</span><br><span class="line">set pagesize 100    #每页大小</span><br><span class="line">set linesize 300    #设置每行容纳的字符数量</span><br><span class="line">set sqlprompt `&amp;_user&amp;_connect_identifier&gt;`  #把SQL提示符修改为当前用户名称以及连接的字符串</span><br></pre></td></tr></table></figure>
<p>在SQL*Plus中，可以使用<code>column column_name format an</code>来设置字符串列的显示宽度，以避免显示结果因为换行而显得凌乱，其中的column以及format可以分别简写为col及for,a后面的数字用于指定字符的数量。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">col table_name for a8</span><br><span class="line">col file_name  for a60</span><br><span class="line">col segment_name for a8</span><br><span class="line">col tablespace_name for a8</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu14.04配置L2TP-VPN]]></title>
      <url>http://keyunluo.github.io/2016/03/20/2016-03-20-ubuntu14-l2tp-vpn.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>本节内容：</strong>本篇博文记录在Ubuntu14.04上安装L2TP插件。</p>
</blockquote>
<a id="more"></a>
<h2 id="添加PPA"><a href="#添加PPA" class="headerlink" title="添加PPA"></a>添加PPA</h2><p><code>sudo apt-add-repository ppa:seriy-pr/network-manager-l2tp</code></p>
<h2 id="刷新软件包缓存"><a href="#刷新软件包缓存" class="headerlink" title="刷新软件包缓存"></a>刷新软件包缓存</h2><p><code>sudo apt-get update</code></p>
<h2 id="安装network-manager-l2tp"><a href="#安装network-manager-l2tp" class="headerlink" title="安装network-manager-l2tp"></a>安装network-manager-l2tp</h2><p><code>sudo apt-get install network-manager-l2tp-gnome</code></p>
<h2 id="由于墙问题无法添加PPA"><a href="#由于墙问题无法添加PPA" class="headerlink" title="由于墙问题无法添加PPA"></a>由于墙问题无法添加PPA</h2><p> 若无法进行上述操作，则可以在<a href="https://launchpad.net/~seriy-pr/+archive/ubuntu/network-manager-l2tp/+packages" target="_blank" rel="external">网站</a>下载软件包<code>network-manager-l2tp</code>，<code>network-manager-l2tp-gnome</code>，根据系统是32位还是64位下载相应版本的<code>deb</code>包后先后安装(注意：需要联网下载一些依赖包，需要联网,注意顺序)。</p>
<h2 id="安装完之后需要运行下面命令"><a href="#安装完之后需要运行下面命令" class="headerlink" title="安装完之后需要运行下面命令"></a>安装完之后需要运行下面命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service xl2tpd stop</span><br><span class="line">sudo update-rc.d xl2tpd disable</span><br></pre></td></tr></table></figure>
<h2 id="重启机器，新建VPN"><a href="#重启机器，新建VPN" class="headerlink" title="重启机器，新建VPN"></a>重启机器，新建VPN</h2><p>在<code>网络</code>-<code>编辑连接</code>-<code>添加</code>-<code>选择连接类型</code>-<code>VPN</code>-<code>L2TP</code>,然后配置网关，用户名密码，若需要共享密钥，则点击<code>ipses settings</code>,在<code>pre-shared key</code>内填入公司分配的共享密钥，否则就可以直接连接VPN了。</p>
<p>图：选择VPN类型</p>
<p><img src="/resource/blog/2016-03/L2TP-VPN.png" alt="L2TP-VPN"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[大数据二次排序]]></title>
      <url>http://keyunluo.github.io/2016/03/07/2016-03-07-hadoop-secondary-sort.html</url>
      <content type="html"><![CDATA[<h2 id="问题概述"><a href="#问题概述" class="headerlink" title="问题概述"></a>问题概述</h2><blockquote>
<p>在hadoop中每个reduce的输入的key都是有序的，而value则是无序的。而且同一个job运行多次，由于map完成顺序不同，reduce收到的value顺序是不固定的,为了使reduce收到有序的value,便产生了二次排序的概念。</p>
</blockquote>
<a id="more"></a>
<p><strong>二次排序实例</strong>
考虑到在科学实验中的温度数据，它们可能的格式如下，每一列分别为 <code>year</code>,<code>month</code>,<code>day</code>,<code>temperature</code>:
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">01</span>,<span class="number">5</span></span><br><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">02</span>,<span class="number">6</span></span><br><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">03</span>,<span class="number">2</span></span><br><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">04</span>,<span class="number">1</span></span><br><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">05</span>,<span class="number">10</span></span><br><span class="line"><span class="number">2012</span>,<span class="number">01</span>,<span class="number">06</span>,<span class="number">4</span></span><br><span class="line">...</span><br><span class="line"><span class="number">2001</span>,<span class="number">11</span>,<span class="number">01</span>,<span class="number">18</span></span><br><span class="line"><span class="number">2001</span>,<span class="number">11</span>,<span class="number">02</span>,<span class="number">19</span></span><br><span class="line"><span class="number">2001</span>,<span class="number">11</span>,<span class="number">03</span>,<span class="number">15</span></span><br><span class="line"><span class="number">2001</span>,<span class="number">11</span>,<span class="number">04</span>,<span class="number">12</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>我们想按照<code>year-month</code>对温度数据进行升序排序并输出，并且我们希望对<code>reducer</code>中的迭代值是已经排序的。因此，期望的输出为：
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2012</span><span class="number">-01</span>: <span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">10.</span>..</span><br><span class="line"><span class="number">2001</span><span class="number">-11</span>: <span class="number">12</span>,<span class="number">15</span>,<span class="number">18</span>,<span class="number">19.</span>..</span><br></pre></td></tr></table></figure></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>为了使用MapReduce编程框架,当数据量很大时在reduce阶段在内存中对同一个key里面的值进行排序是不太可能的，因此<code>通过向原生key增加一部分或全部值(value)作为复合key来实现排序操作</code>。</p>
<p><strong>方法概要</strong>:</p>
<ul>
<li><em>1</em>:使用<code>Value-to-Key</code>设计模式：设计复合Key-Value,<code>(K，V1,V2)=&gt;(K1,V2)</code>，其中K是原生Key，V1是要排序的值，V2是其他值，K1是复合Key，显然K1=(K,V1)。</li>
<li><em>2</em>:使用MapReduce执行框架进行排序(注意：不是直接在内存中排序，而是利用集群节点进行排序)。</li>
<li><em>3</em>:在多个Key-Value键值对中保存状态来进行处理，可以通过原生键对mapper输出的中间结果进行partition操作。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git 常用命令整理]]></title>
      <url>http://keyunluo.github.io/2016/03/07/2016-03-07-git-common-command.html</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>Git</strong>简单记录Git的常用方法，以备查询。</p>
</blockquote>
<a id="more"></a>
<h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置使用git仓库的人员姓名</span></span><br><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">"Your Name Comes Here"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置使用git仓库的人员email</span></span><br><span class="line">git config --<span class="keyword">global</span> user.email you@yourdomain.example.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置到缓存 默认15分钟</span></span><br><span class="line">git config --<span class="keyword">global</span> credential.helper cache</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改缓存时间</span></span><br><span class="line">git config --<span class="keyword">global</span> credential.helper <span class="string">'cache --timeout=3600'</span></span><br><span class="line"></span><br><span class="line">git config --<span class="keyword">global</span> color.ui true</span><br><span class="line">git config --<span class="keyword">global</span> alias.co checkout</span><br><span class="line">git config --<span class="keyword">global</span> alias.ci commit</span><br><span class="line">git config --<span class="keyword">global</span> alias.st status</span><br><span class="line">git config --<span class="keyword">global</span> alias.br branch</span><br><span class="line">git config --<span class="keyword">global</span> core.editor <span class="string">"mate -w"</span>    <span class="comment"># 设置Editor使用textmate</span></span><br><span class="line">git config <span class="number">-1</span> <span class="comment">#列举所有配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#用户的git配置文件~/.gitconfig</span></span><br></pre></td></tr></table></figure>
<!-- more -->
<hr>
<h2 id="查看、添加、提交、删除、找回，重置修改文件"><a href="#查看、添加、提交、删除、找回，重置修改文件" class="headerlink" title="查看、添加、提交、删除、找回，重置修改文件"></a>查看、添加、提交、删除、找回，重置修改文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">git help &lt;command&gt;  <span class="comment"># 显示command的help</span></span><br><span class="line">git show            <span class="comment"># 显示某次提交的内容</span></span><br><span class="line">git show $id</span><br><span class="line"></span><br><span class="line">git co  -- &lt;file&gt;   <span class="comment"># 抛弃工作区修改</span></span><br><span class="line">git co  .           <span class="comment"># 抛弃工作区修改</span></span><br><span class="line"></span><br><span class="line">git add &lt;file&gt;      <span class="comment"># 将工作文件修改提交到本地暂存区</span></span><br><span class="line">git add .           <span class="comment"># 将所有修改过的工作文件提交暂存区</span></span><br><span class="line"></span><br><span class="line">git rm &lt;file&gt;       <span class="comment"># 从版本库中删除文件</span></span><br><span class="line">git rm &lt;file&gt; --cached  <span class="comment"># 从版本库中删除文件，但不删除文件</span></span><br><span class="line"></span><br><span class="line">git reset &lt;file&gt;    <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line">git reset -- .      <span class="comment"># 从暂存区恢复到工作文件</span></span><br><span class="line">git reset --hard    <span class="comment"># 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span></span><br><span class="line"></span><br><span class="line">git ci &lt;file&gt;</span><br><span class="line">git ci .</span><br><span class="line">git ci -a           <span class="comment"># 将git add, git rm和git ci等操作都合并在一起做</span></span><br><span class="line">git ci -am <span class="string">"some comments"</span></span><br><span class="line">git ci --amend      <span class="comment"># 修改最后一次提交记录</span></span><br><span class="line"></span><br><span class="line">git revert &lt;$id&gt;    <span class="comment"># 恢复某次提交的状态，恢复动作本身也创建了一次提交对象</span></span><br><span class="line">git revert HEAD     <span class="comment"># 恢复最后一次提交的状态</span></span><br><span class="line"><span class="comment">#恢复</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="查看文件diff"><a href="#查看文件diff" class="headerlink" title="查看文件diff"></a>查看文件diff</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git diff &lt;file&gt;     <span class="comment"># 比较当前文件和暂存区文件差异</span></span><br><span class="line">git diff</span><br><span class="line">git diff &lt;$id1&gt; &lt;$id2&gt;   <span class="comment"># 比较两次提交之间的差异</span></span><br><span class="line">git diff &lt;branch1&gt;..&lt;branch2&gt; <span class="comment"># 在两个分支之间比较</span></span><br><span class="line">git diff --staged   <span class="comment"># 比较暂存区和版本库差异</span></span><br><span class="line">git diff --cached   <span class="comment"># 比较暂存区和版本库差异</span></span><br><span class="line">git diff --stat     <span class="comment"># 仅仅比较统计信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#退出diff查看状态直接输入Q即可.</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git log &lt;file&gt;      <span class="comment"># 查看该文件每次提交记录</span></span><br><span class="line">git log -p &lt;file&gt;   <span class="comment"># 查看每次详细修改内容的diff</span></span><br><span class="line">git log -p <span class="number">-2</span>       <span class="comment"># 查看最近两次详细修改内容的diff</span></span><br><span class="line">git log --stat      <span class="comment">#查看提交统计信息</span></span><br></pre></td></tr></table></figure>
<p> tig
Mac上可以使用tig代替diff和log，brew install tig</p>
<hr>
<h2 id="取得Git仓库"><a href="#取得Git仓库" class="headerlink" title="取得Git仓库"></a>取得Git仓库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#初始化一个版本仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment">#Clone远程版本库</span></span><br><span class="line">git clone git@xbc.me:wordpress.gi</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加远程版本库origin，语法为 git remote add [shortname] [url]</span></span><br><span class="line">git remote add origin git@xbc.me:wordpress.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看远程仓库</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#显示远程信息</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="提交你的修改"><a href="#提交你的修改" class="headerlink" title="提交你的修改"></a>提交你的修改</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加当前修改的文件到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果你自动追踪文件，包括你已经手动删除的，状态为Deleted的文件</span></span><br><span class="line">git add -u</span><br><span class="line"></span><br><span class="line"><span class="comment">#提交你的修改</span></span><br><span class="line">git commit –m <span class="string">"你的注释"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#推送你的更新到远程服务器,语法为 git push [远程名] [本地分支]:[远程分支]</span></span><br><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件状态</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment">#跟踪新文件</span></span><br><span class="line">git add readme.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#从当前跟踪列表移除文件，并完全删除</span></span><br><span class="line">git rm readme.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#仅在暂存区删除，保留文件在当前目录，不再跟踪</span></span><br><span class="line">git rm –cached readme.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#重命名文件</span></span><br><span class="line">git mv reademe.txt readme</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看提交的历史记录</span></span><br><span class="line">git log</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改最后一次提交注释的，利用–amend参数</span></span><br><span class="line">git commit --amend</span><br><span class="line"></span><br><span class="line"><span class="comment">#忘记提交某些修改，下面的三条命令只会得到一个提交。</span></span><br><span class="line">git commit –m &amp;quot;add readme.txt&amp;quot;</span><br><span class="line">git add readme_forgotten</span><br><span class="line">git commit –amend</span><br><span class="line"></span><br><span class="line"><span class="comment">#假设你已经使用git add .，将修改过的文件a、b加到暂存区</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#现在你只想提交a文件，不想提交b文件，应该这样</span></span><br><span class="line">git reset HEAD b</span><br><span class="line"></span><br><span class="line"><span class="comment">#取消对文件的修改</span></span><br><span class="line">git checkout –- readme.txt</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="查看、切换、创建和删除分支"><a href="#查看、切换、创建和删除分支" class="headerlink" title="查看、切换、创建和删除分支"></a>查看、切换、创建和删除分支</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">git br -r           <span class="comment"># 查看远程分支</span></span><br><span class="line">git br &lt;new_branch&gt; <span class="comment"># 创建新的分支</span></span><br><span class="line">git br -v           <span class="comment"># 查看各个分支最后提交信息</span></span><br><span class="line">git br --merged     <span class="comment"># 查看已经被合并到当前分支的分支</span></span><br><span class="line">git br --no-merged  <span class="comment"># 查看尚未被合并到当前分支的分支</span></span><br><span class="line"></span><br><span class="line">git co &lt;branch&gt;     <span class="comment"># 切换到某个分支</span></span><br><span class="line">git co -b &lt;new_branch&gt; <span class="comment"># 创建新的分支，并且切换过去</span></span><br><span class="line">git co -b &lt;new_branch&gt; &lt;branch&gt;  <span class="comment"># 基于branch创建新的new_branch</span></span><br><span class="line"></span><br><span class="line">git co $id          <span class="comment"># 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span></span><br><span class="line">git co $id -b &lt;new_branch&gt;  <span class="comment"># 把某次历史提交记录checkout出来，创建成一个分支</span></span><br><span class="line"></span><br><span class="line">git br -d &lt;branch&gt;  <span class="comment"># 删除某个分支</span></span><br><span class="line">git br -D &lt;branch&gt;  <span class="comment"># 强制删除某个分支（未被合并的分支被删除的时候需要强制）</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="分支合并和rebase"><a href="#分支合并和rebase" class="headerlink" title="分支合并和rebase"></a>分支合并和rebase</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;branch&gt;               <span class="comment"># 将branch分支合并到当前分支</span></span><br><span class="line">git merge origin/master --no-ff  <span class="comment"># 不要Fast-Foward合并，这样可以生成merge提交</span></span><br><span class="line"></span><br><span class="line">git rebase master &lt;branch&gt;       <span class="comment"># 将master rebase到branch，相当于：</span></span><br><span class="line">git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Git补丁管理-方便在多台机器上开发同步时用"><a href="#Git补丁管理-方便在多台机器上开发同步时用" class="headerlink" title="Git补丁管理(方便在多台机器上开发同步时用)"></a>Git补丁管理(方便在多台机器上开发同步时用)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff &gt; ../sync.patch         <span class="comment"># 生成补丁</span></span><br><span class="line">git apply ../sync.patch          <span class="comment"># 打补丁</span></span><br><span class="line">git apply --check ../sync.patch  <span class="comment">#测试补丁能否成功</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Git暂存管理"><a href="#Git暂存管理" class="headerlink" title="Git暂存管理"></a>Git暂存管理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git stash                        <span class="comment"># 暂存</span></span><br><span class="line">git stash list                   <span class="comment"># 列所有stash</span></span><br><span class="line">git stash apply                  <span class="comment"># 恢复暂存的内容</span></span><br><span class="line">git stash drop                   <span class="comment"># 删除暂存区</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Git远程分支管理"><a href="#Git远程分支管理" class="headerlink" title="Git远程分支管理"></a>Git远程分支管理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git pull                         <span class="comment"># 抓取远程仓库所有分支更新并合并到本地</span></span><br><span class="line">git pull --no-ff                 <span class="comment"># 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span></span><br><span class="line">git fetch origin                 <span class="comment"># 抓取远程仓库更新</span></span><br><span class="line">git merge origin/master          <span class="comment"># 将远程主分支合并到本地当前分支</span></span><br><span class="line">git co --track origin/branch     <span class="comment"># 跟踪某个远程分支创建相应的本地分支</span></span><br><span class="line">git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt;  <span class="comment"># 基于远程分支创建本地分支，功能同上</span></span><br><span class="line"></span><br><span class="line">git push                         <span class="comment"># push所有分支</span></span><br><span class="line">git push origin master           <span class="comment"># 将本地主分支推到远程主分支</span></span><br><span class="line">git push -u origin master        <span class="comment"># 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span></span><br><span class="line">git push origin &lt;local_branch&gt;   <span class="comment"># 创建远程分支， origin是远程仓库名</span></span><br><span class="line">git push origin &lt;local_branch&gt;:&lt;remote_branch&gt;  <span class="comment"># 创建远程分支</span></span><br><span class="line">git push origin :&lt;remote_branch&gt;  <span class="comment">#先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="基本的分支管理"><a href="#基本的分支管理" class="headerlink" title="基本的分支管理"></a>基本的分支管理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个分支</span></span><br><span class="line">git branch iss53</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换工作目录到iss53</span></span><br><span class="line">git chekcout iss53</span><br><span class="line"></span><br><span class="line"><span class="comment">#将上面的命令合在一起，创建iss53分支并切换到iss53</span></span><br><span class="line">git chekcout –b iss53</span><br><span class="line"></span><br><span class="line"><span class="comment">#合并iss53分支，当前工作目录为master</span></span><br><span class="line">git merge iss53</span><br><span class="line"></span><br><span class="line"><span class="comment">#合并完成后，没有出现冲突，删除iss53分支</span></span><br><span class="line">git branch –d iss53</span><br><span class="line"></span><br><span class="line"><span class="comment">#拉去远程仓库的数据，语法为 git fetch [remote-name]</span></span><br><span class="line">git fetch</span><br><span class="line"></span><br><span class="line"><span class="comment">#fetch 会拉去最新的远程仓库数据，但不会自动到当前目录下，要自动合并</span></span><br><span class="line">git pull</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看远程仓库的信息</span></span><br><span class="line">git remote show origin</span><br><span class="line"></span><br><span class="line"><span class="comment">#建立本地的dev分支追踪远程仓库的develop分支</span></span><br><span class="line">git checkout –b dev origin/develop</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Git远程仓库管理"><a href="#Git远程仓库管理" class="headerlink" title="Git远程仓库管理"></a>Git远程仓库管理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git remote -v                    <span class="comment"># 查看远程服务器地址和仓库名称</span></span><br><span class="line">git remote show origin           <span class="comment"># 查看远程服务器仓库状态</span></span><br><span class="line">git remote add origin git@ github:robbin/robbin_site.git         <span class="comment"># 添加远程仓库地址</span></span><br><span class="line">git remote set-url origin git@ github.com:robbin/robbin_site.git <span class="comment"># 设置远程仓库地址(用于修改远程仓库地址)</span></span><br><span class="line">git remote rm &lt;repository&gt;       <span class="comment"># 删除远程仓库</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git clone --bare robbin_site robbin_site.git  <span class="comment"># 用带版本的项目创建纯版本仓库</span></span><br><span class="line">scp -r my_project.git git@ git.csdn.net:~      <span class="comment"># 将纯仓库上传到服务器上</span></span><br><span class="line"></span><br><span class="line">mkdir robbin_site.git &amp;&amp; cd robbin_site.git &amp;&amp; git --bare init <span class="comment"># 在服务器创建纯仓库</span></span><br><span class="line">git remote add origin git@ github.com:robbin/robbin_site.git    <span class="comment"># 设置远程仓库地址</span></span><br><span class="line">git push -u origin master                                      <span class="comment"># 客户端首次提交</span></span><br><span class="line">git push -u origin develop  <span class="comment"># 首次将本地develop分支提交到远程develop分支，并且track</span></span><br><span class="line"></span><br><span class="line">git remote set-head origin master   <span class="comment"># 设置远程仓库的HEAD指向master分支</span></span><br></pre></td></tr></table></figure>
<p>也可以命令设置跟踪远程库和本地库</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream master origin/master</span><br><span class="line">git branch --set-upstream develop origin/develop</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Github协同流程："><a href="#Github协同流程：" class="headerlink" title="Github协同流程："></a>Github协同流程：</h2><p>fork给自己 → clone到本地 → coding → push回自己 → github上提出Pull Request即可
之后，本地添加fork源为远端源 → 工作前先pull下fork源保持代码较新 → coding → …</p>
<hr>
<h2 id="GitHub更新fork的版本实践"><a href="#GitHub更新fork的版本实践" class="headerlink" title="GitHub更新fork的版本实践:"></a>GitHub更新fork的版本实践:</h2><p>前提
你已经在github上fork了别人的分支，并且弄好了跟github的ssh连接。(如果没有ssh连接可使用HTTP,操作的时候会多一个输入用户名密码操作)
相关配置详情参考：<a href="https://help.github.com" target="_blank" rel="external">https://help.github.com</a></p>
<p>详细操作:</p>
<p>1.检出自己在github上fork别人的分支</p>
<pre><code>git clone git@github.com:streamers/hadoop.git
</code></pre><p>2.然后增加远程分支（也就是你fork那个人的分支）名为atcic（这个名字任意）到你本地。</p>
<pre><code>git remote add atcic git@github.com:apache/hadoop.git
</code></pre><p>如果你运行命令：git remote -v你会发现多出来了一个Bob的远程分支。如下：</p>
<pre><code>atcic   git@github.com:apache/hadoop.git   (fetch)
atcic   git@github.com:apache/hadoop.git   (push)
origin  git@github.com:apache/hadoop.git   (fetch)
origin  git@github.com:apache/hadoop.git   (push)
</code></pre><p>3.然后，把对方的代码拉到你本地。</p>
<pre><code>git fetch atcic
</code></pre><p>4.最后，合并对方的代码。</p>
<pre><code>git merge atcic/master
</code></pre><p>5.最最后，把最新的代码推送到你的github上。</p>
<pre><code>git push origin master
</code></pre><p>这样就完成了自己的代码更新。</p>
<hr>
<p>Git版本控制大全:</p>
<p><a href="http://git-scm.com/book/zh/v1" target="_blank" rel="external">http://git-scm.com/book/zh/v1</a></p>
]]></content>
    </entry>
    
  
  
</search>
